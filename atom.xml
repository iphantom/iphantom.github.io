<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Enzo Chen</title>
  <subtitle>是我的海</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://i90s.vip/"/>
  <updated>2019-12-01T09:52:49.078Z</updated>
  <id>http://i90s.vip/</id>
  
  <author>
    <name>Enzo Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pythonの将数组写入excel内</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/12/01/python%E3%81%AE%E5%B0%86%E6%95%B0%E7%BB%84%E5%86%99%E5%85%A5excel%E5%86%85.html"/>
    <id>http://i90s.vip//软件笔记/2019/12/01/pythonの将数组写入excel内.html</id>
    <published>2019-12-01T13:00:51.000Z</published>
    <updated>2019-12-01T09:52:49.078Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>将给定的数组写入excel内，保存到指定路径下<br>首先需要安装两个插件 xlrd xlwt<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*- </span></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#程序目的：将二维数组内的数值写入excel内，并保存到相应的路径</span></span><br><span class="line"><span class="comment">#return [状态位，错误信息]</span></span><br><span class="line"><span class="comment">#0表示输出成功，错误信息为空</span></span><br><span class="line"><span class="comment">#1表示输出失败，返回相应错误信息</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<p><strong> 通过OUTPUT_EXCEL类实现该功能 </strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OUTPUT_EXCEL</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.file=xlwt.Workbook()</span><br><span class="line">        self.table=self.file.add_sheet(<span class="string">'sheet 1'</span>) <span class="comment">#默认存到Sheet 1内</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">RW_Excel</span><span class="params">(self,excel_name,save_path,write_array)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> write_array: <span class="comment">#判断数组是否为空</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.file.save(excel_name)</span><br><span class="line">            <span class="keyword">except</span> IOError,msg:</span><br><span class="line">                <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        x_len=len(write_array)</span><br><span class="line">        y_len=len(write_array[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range (<span class="number">0</span>,x_len):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y_len):</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    self.table.write(i,j,write_array[i][j])</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">print</span> i ,j</span><br><span class="line">                    <span class="keyword">return</span> [<span class="number">1</span>,<span class="string">'Data error'</span>]</span><br><span class="line">        file_name_path=save_path+excel_name</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.file.save(file_name_path)</span><br><span class="line">        <span class="keyword">except</span> IOError,msg:</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="string">''</span>]</span><br></pre></td></tr></table></figure></p>
<p><strong> 存在的问题 </strong><br><figure class="highlight parser3"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">由于使用xlwt xlrd插件，写入excel的行不能超过</span><span class="number">2</span><span class="xml"></span><span class="keyword">^16</span><span class="xml">，也就是最多只能写入</span><span class="number">65536</span><span class="xml">行</span></span><br></pre></td></tr></table></figure></p>
<p><strong> 未验证的可行的解决方法 </strong><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用openpyxl插件代替xlwt和xlrd插件</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;将给定的数组写入excel内，保存到指定路径下&lt;br&gt;首先需要安装两个插件 xlrd xlwt&lt;br&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://i90s.vip/tags/python/"/>
    
      <category term="excel" scheme="http://i90s.vip/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>pythonの将数组写入oracle内</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/29/python%E3%81%AE%E5%B0%86%E6%95%B0%E7%BB%84%E5%86%99%E5%85%A5oracle%E5%86%85.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/29/pythonの将数组写入oracle内.html</id>
    <published>2019-11-29T13:09:08.000Z</published>
    <updated>2019-12-01T09:52:57.243Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>将给定的数组写入oracle内，保存到指定新表内<br>首先需要安装插件cx_oracle<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> cx_Oracle</span><br><span class="line"><span class="comment">#程序目的：将二维数组内的数值写入oracle数据库相应的表内</span></span><br><span class="line"><span class="comment">#return [状态位，错误信息]</span></span><br><span class="line"><span class="comment">#0表示输出成功，错误信息为空</span></span><br><span class="line"><span class="comment">#1表示输出失败，返回相应错误信息</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<p><strong>通过OUTPUT_ORACLE类实现功能 </strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#----连接数据库-----</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OUTPUT_ORACLE</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="comment">#读取Oracle配置文件</span></span><br><span class="line">        Config_file=open(<span class="string">"Config.txt"</span>)</span><br><span class="line">        self.Oracle_Config=Config_file.readline()</span><br><span class="line">        Config_file.close()</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">RW_Oracle</span><span class="params">(self,table_name,write_array)</span>:</span></span><br><span class="line">        self.tab_name=<span class="string">"create table "</span>+table_name  <span class="comment">#创建新表</span></span><br><span class="line">        self.w_array=write_array</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            conn=cx_Oracle.connect(self.Oracle_Config)</span><br><span class="line">            cursor=conn.cursor()</span><br><span class="line">        <span class="keyword">except</span> cx_Oracle.DatabaseError,msg:</span><br><span class="line">            cursor.close ()</span><br><span class="line">            conn.close ()</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line"><span class="comment">#         try:</span></span><br><span class="line"><span class="comment">#             cursor.execute('drop table table_cc') #先删除表</span></span><br><span class="line"><span class="comment">#         except cx_Oracle.DatabaseError,msg:</span></span><br><span class="line"><span class="comment">#             cursor.close ()</span></span><br><span class="line"><span class="comment">#             conn.close ()</span></span><br><span class="line"><span class="comment">#             return [1,msg]</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(self.tab_name)  <span class="comment">#新建表格</span></span><br><span class="line">        <span class="keyword">except</span> cx_Oracle.DatabaseError,msg:</span><br><span class="line">            cursor.close ()</span><br><span class="line">            conn.close ()</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.w_array:</span><br><span class="line">            cursor.close ()</span><br><span class="line">            conn.close ()</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">0</span>,<span class="string">''</span>]</span><br><span class="line">        <span class="comment">#获取表名</span></span><br><span class="line">        Table_Name=table_name.split(<span class="string">'('</span>) <span class="comment">#用括号将表名分隔开</span></span><br><span class="line">        Insert_sql_temp=<span class="string">'insert into '</span>+Table_Name[<span class="number">0</span>]+<span class="string">' values('</span></span><br><span class="line">        <span class="comment">#创建插入SQL语句</span></span><br><span class="line">        x_len=len(self.w_array)     <span class="comment">#行数</span></span><br><span class="line">        y_len=len(self.w_array[<span class="number">0</span>])  <span class="comment">#列数</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,x_len):</span><br><span class="line">            array_temp=<span class="string">''</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,y_len):</span><br><span class="line">                <span class="keyword">if</span> j==y_len<span class="number">-1</span>:</span><br><span class="line">                    array_temp=array_temp+str(self.w_array[i][j])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    array_temp=array_temp+str(self.w_array[i][j])+<span class="string">','</span></span><br><span class="line">            Insert_sql=Insert_sql_temp+array_temp+<span class="string">')'</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                cursor.execute(Insert_sql)</span><br><span class="line">            <span class="keyword">except</span> cx_Oracle.DatabaseError,msg:</span><br><span class="line">                cursor.close ()</span><br><span class="line">                conn.close ()</span><br><span class="line">                <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">        <span class="comment">#提交数据</span></span><br><span class="line">        conn.commit(); </span><br><span class="line">        <span class="comment">#关闭数据库连接</span></span><br><span class="line">        cursor.close ()</span><br><span class="line">        conn.close ()</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="string">''</span>]</span><br></pre></td></tr></table></figure></p>
<p><strong> 存在的问题 </strong><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">写入效率不高，有待进一步优化</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;将给定的数组写入oracle内，保存到指定新表内&lt;br&gt;首先需要安装插件cx_oracle&lt;br&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Oracle" scheme="http://i90s.vip/tags/Oracle/"/>
    
      <category term="python" scheme="http://i90s.vip/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>pythonの生成正交测试数据</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/28/python%E3%81%AE%E7%94%9F%E6%88%90%E6%AD%A3%E4%BA%A4%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/28/pythonの生成正交测试数据.html</id>
    <published>2019-11-28T14:14:41.000Z</published>
    <updated>2019-12-01T09:53:06.568Z</updated>
    
    <content type="html"><![CDATA[<h2 id="程序说明"><a href="#程序说明" class="headerlink" title="程序说明"></a>程序说明</h2><hr>
<p> 输入为数组，如下所示：<br>a=[[1,2,3],[4,5],[6,7]]<br>a[0],a[1],a[2]···表示各个因素，此时表示a有四个因素<br>a[0]=[1,2,3]表示a[0]有三个值可以选</p>
<hr>
<p>输出为数组，如下所示：<a id="more"></a><br>b= [[1, 4, 6], [1, 5, 7], [2, 4, 7], [2, 5, 6]]<br>b[0],b[1]···表示正交法生成的测试数据</p>
<h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><h3 id="output-oracle-py"><a href="#output-oracle-py" class="headerlink" title="output_oracle.py"></a>output_oracle.py</h3><blockquote>
<p>获取数组的因素数和水平数<br>调用Ort_model.py函数 返回相应的正交表<br>将输入数据替换正交表内数 生成正交测试数据</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Ort_model</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ORT_EXPRESSION</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Output_Ort</span><span class="params">(self,input_array)</span>:</span></span><br><span class="line">        self.in_array=input_array</span><br><span class="line">        i_Factors_temp=len(self.in_array)   <span class="comment">#因素数</span></span><br><span class="line">        i_array=[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(i_Factors_temp)]</span><br><span class="line">        <span class="comment">#求取水平数</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,i_Factors_temp):</span><br><span class="line">            i_array[i]=len(self.in_array[i])</span><br><span class="line">        i_array_temp=&#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> i_array:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> i_array_temp:</span><br><span class="line">                i_array_temp[i] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                i_array_temp[i] += <span class="number">1</span> </span><br><span class="line">        i_levels_temp=max(i_array_temp.iteritems(), key = <span class="keyword">lambda</span> x: x[<span class="number">1</span>])[<span class="number">0</span>]  <span class="comment">#水平数       </span></span><br><span class="line">        <span class="comment">#正交模型</span></span><br><span class="line">        Model_Ort=Ort_model.ORT_MODEL()</span><br><span class="line">        return_ort=Model_Ort.Ort_mod(i_Factors_temp,i_levels_temp)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> return_ort:</span><br><span class="line">            msg=<span class="string">'input is wrong'</span></span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,msg,<span class="string">''</span>]</span><br><span class="line">        <span class="comment">#带入数值</span></span><br><span class="line">        i_L=len(return_ort)</span><br><span class="line">        i_Factors=len(return_ort[<span class="number">0</span>])</span><br><span class="line">        return_array = [[<span class="number">0</span> <span class="keyword">for</span> col <span class="keyword">in</span> range(i_Factors)] <span class="keyword">for</span> row <span class="keyword">in</span> range(i_L)]  </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,i_Factors):</span><br><span class="line">            l_n=[x[j] <span class="keyword">for</span> x <span class="keyword">in</span> return_ort]</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(l_n)):</span><br><span class="line">                <span class="keyword">if</span> l_n[i]&lt;len(self.in_array[j]):               </span><br><span class="line">                    return_array[i][j]=self.in_array[j][l_n[i]]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    return_array[i][j]=random.choice(self.in_array[j])  <span class="comment">#使用随机函数选择当前可选数据</span></span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="string">''</span>,return_array]</span><br></pre></td></tr></table></figure>
<h3 id="Ort-model-py"><a href="#Ort-model-py" class="headerlink" title="Ort_model.py"></a>Ort_model.py</h3><blockquote>
<p>根据因素数和水平数 得到相应的正交表</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ORT_MODEL</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.L4=[</span><br><span class="line">                [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line">                ]  <span class="comment">#2 3 </span></span><br><span class="line">        self.L8=[</span><br><span class="line">                [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]</span><br><span class="line">                ] <span class="comment">#2 7</span></span><br><span class="line">        self.L9=[</span><br><span class="line">                [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>],</span><br><span class="line">                [<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line">                ]<span class="comment">#3 4</span></span><br><span class="line">        self.L16=[</span><br><span class="line">                 [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                 [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                 [<span class="number">0</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>],</span><br><span class="line">                 [<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>],</span><br><span class="line">                 [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">                 [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">2</span>],</span><br><span class="line">                 [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">                 [<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">                 [<span class="number">2</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line">                 [<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">0</span>],</span><br><span class="line">                 [<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>],</span><br><span class="line">                 [<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>],</span><br><span class="line">                 [<span class="number">3</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line">                 [<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>],</span><br><span class="line">                 [<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">0</span>],</span><br><span class="line">                 [<span class="number">3</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">                 ]<span class="comment">#4 5</span></span><br><span class="line">        self.L25=[</span><br><span class="line">                  [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                  [<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>],</span><br><span class="line">                  [<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">3</span>],</span><br><span class="line">                  [<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">4</span>],</span><br><span class="line">                  [<span class="number">1</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>],</span><br><span class="line">                  [<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],</span><br><span class="line">                  [<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>],</span><br><span class="line">                  [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>],</span><br><span class="line">                  [<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],</span><br><span class="line">                  [<span class="number">2</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],</span><br><span class="line">                  [<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>],</span><br><span class="line">                  [<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>],</span><br><span class="line">                  [<span class="number">3</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>],</span><br><span class="line">                  [<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>],</span><br><span class="line">                  [<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>],</span><br><span class="line">                  [<span class="number">4</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>],</span><br><span class="line">                  [<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>],</span><br><span class="line">                  [<span class="number">4</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>],</span><br><span class="line">                  [<span class="number">4</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>],</span><br><span class="line">                  [<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>],</span><br><span class="line">                  [<span class="number">5</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>],</span><br><span class="line">                  [<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>],</span><br><span class="line">                  [<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">4</span>],</span><br><span class="line">                  [<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>],</span><br><span class="line">                  [<span class="number">5</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">                  ]<span class="comment">#5 6</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Ort_mod</span><span class="params">(self,i_factors,i_levels)</span>:</span></span><br><span class="line">        self.i_fac=i_factors</span><br><span class="line">        self.i_lev=i_levels</span><br><span class="line">        <span class="keyword">if</span> (self.i_fac==<span class="number">3</span> <span class="keyword">and</span> self.i_lev&lt;=<span class="number">2</span>):<span class="comment">#2 3 </span></span><br><span class="line">            <span class="keyword">return</span> self.L4</span><br><span class="line">        <span class="keyword">if</span> (self.i_fac==<span class="number">7</span> <span class="keyword">and</span> self.i_lev&lt;=<span class="number">2</span>):<span class="comment">#2 7</span></span><br><span class="line">            <span class="keyword">return</span> self.L8</span><br><span class="line">        <span class="keyword">if</span> (self.i_fac==<span class="number">4</span> <span class="keyword">and</span> self.i_lev&lt;=<span class="number">3</span>):<span class="comment">#3 4</span></span><br><span class="line">            <span class="keyword">return</span> self.L9</span><br><span class="line">        <span class="keyword">if</span> (self.i_fac==<span class="number">5</span> <span class="keyword">and</span> self.i_lev&lt;=<span class="number">4</span>):<span class="comment">#4 5</span></span><br><span class="line">            <span class="keyword">return</span> self.L16</span><br><span class="line">        <span class="keyword">if</span> (self.i_fac==<span class="number">6</span> <span class="keyword">and</span> self.i_lev&lt;=<span class="number">5</span>):<span class="comment">#5 6</span></span><br><span class="line">            <span class="keyword">return</span> self.L25</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;程序说明&quot;&gt;&lt;a href=&quot;#程序说明&quot; class=&quot;headerlink&quot; title=&quot;程序说明&quot;&gt;&lt;/a&gt;程序说明&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt; 输入为数组，如下所示：&lt;br&gt;a=[[1,2,3],[4,5],[6,7]]&lt;br&gt;a[0],a[1],a[2]···表示各个因素，此时表示a有四个因素&lt;br&gt;a[0]=[1,2,3]表示a[0]有三个值可以选&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;输出为数组，如下所示：
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://i90s.vip/tags/python/"/>
    
      <category term="正交" scheme="http://i90s.vip/tags/%E6%AD%A3%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>编程修养（3）</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/28/%E7%BC%96%E7%A8%8B%E4%BF%AE%E5%85%BB%EF%BC%883%EF%BC%89.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/28/编程修养（3）.html</id>
    <published>2019-11-28T13:59:16.000Z</published>
    <updated>2019-12-01T09:57:28.528Z</updated>
    
    <content type="html"><![CDATA[<h2 id="把相同或近乎相同的代码形成函数和宏"><a href="#把相同或近乎相同的代码形成函数和宏" class="headerlink" title="把相同或近乎相同的代码形成函数和宏"></a>把相同或近乎相同的代码形成函数和宏</h2><p>—————————————————————<br>有人说，最好的程序员，就是最喜欢“偷懒”的程序，其中不无道理。  </p>
<p>如果你有一些程序的代码片段很相似，或直接就是一样的，请把他们放在一个函数中。而如果</p>
<p>这段代码不多，而且会被经常使用，你还想避免函数调用的开销，那么就把他写成宏吧。 <a id="more"></a> </p>
<p>千万不要让同一份代码或是功能相似的代码在多个地方存在，不然如果功能一变，你就要修改</p>
<p>好几处地方，这种会给维护带来巨大的麻烦，所以，做到“一改百改”，还是要形成函数或是宏。  </p>
<h2 id="表达式中的括号"><a href="#表达式中的括号" class="headerlink" title="表达式中的括号"></a>表达式中的括号</h2><p>—————————  </p>
<p>如果一个比较复杂的表达式中，你并不是很清楚各个操作符的忧先级，即使是你很清楚优先级</p>
<p>，也请加上括号，不然，别人或是自己下一次读程序时，一不小心就看走眼理解错了，为了避</p>
<p>免这种“误解”，还有让自己的程序更为清淅，还是加上括号吧。  </p>
<p>比如，对一个结构的成员取地址：  </p>
<p>GetUserAge( &amp;( UserInfo-&gt;age ) );  </p>
<p>虽然，&amp;UserInfo-&gt;age中，-&gt;操作符的优先级最高，但加上一个括号，会让人一眼就看明白你的</p>
<p>代码是什么意思。  </p>
<p>再比如，一个很长的条件判断：  </p>
<p>if ( ( ch[0] &gt;= ‘0’ || ch[0] &lt;= ‘9’ ) &amp;&amp;<br>( ch[1] &gt;= ‘a’ || ch[1] &lt;= ‘z’ ) &amp;&amp;<br>( ch[2] &gt;= ‘A’ || ch[2] &lt;= ‘Z’ ) )  </p>
<p>括号，再加上空格和换行，你的代码是不是很容易读懂了？  </p>
<h2 id="函数参数中的const"><a href="#函数参数中的const" class="headerlink" title="函数参数中的const"></a>函数参数中的const</h2><p>———————————  </p>
<p>对于一些函数中的指针参数，如果在函数中只读，请将其用const修饰，这样，别人一读到你的</p>
<p>函数接口时，就会知道你的意图是这个参数是[in]，如果没有const时，参数表示[in/out]，注意函</p>
<p>数接口中的const使用，利于程序的维护和避免犯一些错误。  </p>
<p>虽然，const修饰的指针，如：const char* p，在C中一点用也没有，因为不管你的声明是不是</p>
<p>const，指针的内容照样能改，因为编译器会强制转换，但是加上这样一个说明，有利于程序的</p>
<p>阅读和编译。因为在C中，修改一个const指针所指向的内存时，会报一个Warning。这会引起程</p>
<p>序员的注意。  </p>
<p>C++中对const定义的就很严格了，所以C++中要多多的使用const，const的成员函数，const的</p>
<p>变量，这样会对让你的代码和你的程序更加完整和易读。（关于C++的const我就不多说了）  </p>
<h2 id="函数的参数个数（多了请用结构）"><a href="#函数的参数个数（多了请用结构）" class="headerlink" title="函数的参数个数（多了请用结构）"></a>函数的参数个数（多了请用结构）</h2><p>—————————————————  </p>
<p>函数的参数个数最好不要太多，一般来说6个左右就可以了，众多的函数参数会让读代码的人一</p>
<p>眼看上去就很头昏，而且也不利于维护。如果参数众多，还请使用结构来传递参数。这样做有</p>
<p>利于数据的封装和程序的简洁性。  </p>
<p>也利于使用函数的人，因为如果你的函数个数很多，比如12个，调用者很容易搞错参数的顺序</p>
<p>和个数，而使用结构struct来传递参数，就可以不管参数的顺序。  </p>
<p>而且，函数很容易被修改，如果需要给函数增加参数，不需要更改函数接口，只需更改结构体</p>
<p>和函数内部处理，而对于调用函数的程序来说，这个动作是透明的。  </p>
<h2 id="函数的返回类型，不要省略"><a href="#函数的返回类型，不要省略" class="headerlink" title="函数的返回类型，不要省略"></a>函数的返回类型，不要省略</h2><p>——————————————  </p>
<p>我看到很多程序写函数时，在函数的返回类型方面不太注意。如果一个函数没有返回值，也请</p>
<p>在函数前面加上void的修饰。而有的程序员偷懒，在返回int的函数则什么不修饰（因为如果不</p>
<p>修饰，则默认返回int），这种习惯很不好，还是为了原代码的易读性，加上int吧。  </p>
<p>所以函数的返回值类型，请不要省略。  </p>
<p>另外，对于void的函数，我们往往会忘了return，由于某些C/C++的编译器比较敏感，会报一些</p>
<p>警告，所以即使是void的函数，我们在内部最好也要加上return的语句，这有助于代码的编译。  </p>
<h2 id="goto语句的使用"><a href="#goto语句的使用" class="headerlink" title="goto语句的使用"></a>goto语句的使用</h2><p>—————————  </p>
<p>N年前，软件开发的一代宗师——迪杰斯特拉(Dijkstra)说过：“goto statment is harmful !!”，并建</p>
<p>议取消goto语句。因为goto语句不利于程序代码的维护性。  </p>
<p>这里我也强烈建议不要使用goto语句，除非下面的这种情况：  </p>
<p>#define FREE(p) if(p) { \<br>free(p); \<br>p = NULL; \<br>}  </p>
<p>main()<br>{<br>char <em>fname, </em>lname, *mname;  </p>
<p>fname = ( char* ) calloc ( 20, sizeof(char) );<br>if ( fname == NULL ){<br>goto ErrHandle;<br>}  </p>
<p>lname = ( char* ) calloc ( 20, sizeof(char) );<br>if ( lname == NULL ){<br>goto ErrHandle;<br>}  </p>
<p>mname = ( char* ) calloc ( 20, sizeof(char) );<br>if ( mname == NULL ){<br>goto ErrHandle;<br>}  </p>
<p>……  </p>
<p>ErrHandle:<br>FREE(fname);<br>FREE(lname);<br>FREE(mname);<br>ReportError(ERR_NO_MEMOEY);<br>}  </p>
<p>也只有在这种情况下，goto语句会让你的程序更易读，更容易维护。（在用嵌C来对数据库设置</p>
<p>游标操作时，或是对数据库建立链接时，也会遇到这种结构）  </p>
<h2 id="宏的使用"><a href="#宏的使用" class="headerlink" title="宏的使用"></a>宏的使用</h2><p>——————  </p>
<p>很多程序员不知道C中的“宏”到底是什么意思？特别是当宏有参数的时候，经常把宏和函数混淆</p>
<p>。我想在这里我还是先讲讲“宏”，宏只是一种定义，他定义了一个语句块，当程序编译时，编译</p>
<p>器首先要执行一个“替换”源程序的动作，把宏引用的地方替换成宏定义的语句块，就像文本文件</p>
<p>替换一样。这个动作术语叫“宏的展开”  </p>
<p>使用宏是比较“危险”的，因为你不知道宏展开后会是什么一个样子。例如下面这个宏：  </p>
<p>#define MAX(a, b) a&gt;b?a:b  </p>
<p>当我们这样使用宏时，没有什么问题： MAX( num1, num2 ); 因为宏展开后变成 num1&gt;num2?</p>
<p>num1:num2；。 但是，如果是这样调用的，MAX( 17+32, 25+21 ); 呢，编译时出现错误，原因</p>
<p>是，宏展开后变成：17+32&gt;25+21?17+32:25+21，哇，这是什么啊？  </p>
<p>所以，宏在使用时，参数一定要加上括号，上述的那个例子改成如下所示就能解决问题了。  </p>
<p>#define MAX( (a), (b) ) (a)&gt;(b)?(a)b)  </p>
<p>即使是这样，也不这个宏也还是有Bug，因为如果我这样调用 MAX(i++, j++); ， 经过这个宏以</p>
<p>后，i和j都被累加了两次，这绝不是我们想要的。  </p>
<p>所以，在宏的使用上还是要谨慎考虑，因为宏展开是的结果是很难让人预料的。而且虽然，宏</p>
<p>的执行很快（因为没有函数调用的开销），但宏会让源代码澎涨，使目标文件尺寸变大，（如</p>
<p>：一个50行的宏，程序中有1000个地方用到，宏展开后会很不得了），相反不能让程序执行得</p>
<p>更快（因为执行文件变大，运行时系统换页频繁）。  </p>
<p>因此，在决定是用函数，还是用宏时得要小心。  </p>
<h2 id="static的使用"><a href="#static的使用" class="headerlink" title="static的使用"></a>static的使用</h2><p>————————<br>static关键字，表示了“静态”，一般来说，他会被经常用于变量和函数。一个static的变量，其实</p>
<p>就是全局变量，只不过他是有作用域的全局变量。比如一个函数中的static变量：<br>char*<br>getConsumerName()<br>{<br>static int cnt = 0;  </p>
<p>….<br>cnt++;<br>….<br>}  </p>
<p>cnt变量的值会跟随着函数的调用次而递增，函数退出后，cnt的值还存在，只是cnt只能在函数</p>
<p>中才能被访问。而cnt的内存也只会在函数第一次被调用时才会被分配和初始化，以后每次进入</p>
<p>函数，都不为static分配了，而直接使用上一次的值。  </p>
<p>对于一些被经常调用的函数内的常量，最好也声明成static（参见第12条）  </p>
<p>但static的最多的用处却不在这里，其最大的作用的控制访问，在C中如果一个函数或是一个全</p>
<p>局变量被声明为static，那么，这个函数和这个全局变量，将只能在这个C文件中被访问，如果</p>
<p>别的C文件中调用这个C文件中的函数，或是使用其中的全局（用extern关键字），将会发生链</p>
<p>接时错误。这个特性可以用于数据和程序保密。  </p>
<h2 id="函数中的代码尺寸"><a href="#函数中的代码尺寸" class="headerlink" title="函数中的代码尺寸"></a>函数中的代码尺寸</h2><p>——————————<br>一个函数完成一个具体的功能，一般来说，一个函数中的代码最好不要超过600行左右，越少越</p>
<p>好，最好的函数一般在100行以内，300行左右的孙函数就差不多了。有证据表明，一个函数中</p>
<p>的代码如果超过500行，就会有和别的函数相同或是相近的代码，也就是说，就可以再写另一个</p>
<p>函数。  </p>
<p>另外，函数一般是完成一个特定的功能，千万忌讳在一个函数中做许多件不同的事。函数的功</p>
<p>能越单一越好，一方面有利于函数的易读性，另一方面更有利于代码的维护和重用，功能越单</p>
<p>一表示这个函数就越可能给更多的程序提供服务，也就是说共性就越多。  </p>
<p>虽然函数的调用会有一定的开销，但比起软件后期维护来说，增加一些运行时的开销而换来更</p>
<p>好的可维护性和代码重用性，是很值得的一件事。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;把相同或近乎相同的代码形成函数和宏&quot;&gt;&lt;a href=&quot;#把相同或近乎相同的代码形成函数和宏&quot; class=&quot;headerlink&quot; title=&quot;把相同或近乎相同的代码形成函数和宏&quot;&gt;&lt;/a&gt;把相同或近乎相同的代码形成函数和宏&lt;/h2&gt;&lt;p&gt;—————————————————————&lt;br&gt;有人说，最好的程序员，就是最喜欢“偷懒”的程序，其中不无道理。  &lt;/p&gt;
&lt;p&gt;如果你有一些程序的代码片段很相似，或直接就是一样的，请把他们放在一个函数中。而如果&lt;/p&gt;
&lt;p&gt;这段代码不多，而且会被经常使用，你还想避免函数调用的开销，那么就把他写成宏吧。
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="编程修养" scheme="http://i90s.vip/tags/%E7%BC%96%E7%A8%8B%E4%BF%AE%E5%85%BB/"/>
    
  </entry>
  
  <entry>
    <title>编程修养（2）</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/27/%E7%BC%96%E7%A8%8B%E4%BF%AE%E5%85%BB%EF%BC%882%EF%BC%89.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/27/编程修养（2）.html</id>
    <published>2019-11-27T13:59:11.000Z</published>
    <updated>2019-12-01T09:57:26.735Z</updated>
    
    <content type="html"><![CDATA[<h2 id="h和c文件的使用"><a href="#h和c文件的使用" class="headerlink" title="h和c文件的使用"></a>h和c文件的使用</h2><p>—————————<br>H文件和C文件怎么用呢？一般来说，H文件中是declare（声明），C文件中是define（定义）</p>
<p>。因为C文件要编译成库文件（Windows下是.obj/.lib，UNIX下是.o/.a），如果别人要使用你的</p>
<p>函数，那么就要引用你的H文件，所以，H文件中一般是变量、宏定义、枚举、结构和函数接口</p>
<p>的声明，就像一个接口说明文件一样。而C文件则是实现细节。<a id="more"></a>   </p>
<p>H文件和C文件最大的用处就是声明和实现分开。这个特性应该是公认的了，但我仍然看到有些</p>
<p>人喜欢把函数写在H文件中，这种习惯很不好。（如果是C++话，对于其模板函数，在VC中只</p>
<p>有把实现和声明都写在一个文件中，因为VC不支持export关键字）。而且，如果在H文件中写</p>
<p>上函数的实现，你还得在makefile中把头文件的依赖关系也加上去，这个就会让你的makefile很</p>
<p>不规范。  </p>
<p>最后，有一个最需要注意的地方就是：带初始化的全局变量不要放在H文件中！  </p>
<p>例如有一个处理错误信息的结构：  </p>
<p>char* errmsg[] = {<br>“No error”,<br>“Open file error”,<br>“Failed in sending/receiving a message”,<br>“Bad arguments”,<br>“Memeroy is not enough”,<br>“Service is down; try later”,<br>“Unknow information”,<br>“A socket operation has failed”,<br>“Permission denied”,<br>“Bad configuration file format”,<br>“Communication time out”,<br>……<br>……<br>};  </p>
<p>请不要把这个东西放在头文件中，因为如果你的这个头文件被5个函数库（.lib或是.a）所用到，</p>
<p>于是他就被链接在这5个.lib或.a中，而如果你的一个程序用到了这5个函数库中的函数，并且这</p>
<p>些函数都用到了这个出错信息数组。那么这份信息将有5个副本存在于你的执行文件中。如果你</p>
<p>的这个errmsg很大的话，而且你用到的函数库更多的话，你的执行文件也会变得很大。  </p>
<p>正确的写法应该把它写到C文件中，然后在各个需要用到errmsg的C文件头上加上 extern char*  </p>
<p>errmsg[]; 的外部声明，让编译器在链接时才去管他，这样一来，就只会有一个errmsg存在于执</p>
<p>行文件中，而且，这样做很利于封装。  </p>
<p>我曾遇到过的最疯狂的事，就是在我的目标文件中，这个errmsg一共有112个副本，执行文件</p>
<p>有8M左右。当我把errmsg放到C文件中，并为一千多个C文件加上了extern的声明后，所有的函</p>
<p>数库文件尺寸都下降了20%左右，而我的执行文件只有5M了。一下子少了3M啊。</p>
<p>［ 备注 ］<br>—————<br>有朋友对我说，这个只是一个特例，因为，如果errmsg在执行文件中存在多个副本时，可以加</p>
<p>快程序运行速度，理由是errmsg的多个复本会让系统的内存换页降低，达到效率提升。像我们</p>
<p>这里所说的errmsg只有一份，当某函数要用errmsg时，如果内存隔得比较远，会产生换页，反</p>
<p>而效率不高。  </p>
<p>这个说法不无道理，但是一般而言，对于一个比较大的系统，errmsg是比较大的，所以产生副</p>
<p>本导致执行文件尺寸变大，不仅增加了系统装载时间，也会让一个程序在内存中占更多的页面</p>
<p>。而对于errmsg这样数据，一般来说，在系统运行时不会经常用到，所以还是产生的内存换页</p>
<p>也就不算频繁。权衡之下，还是只有一份errmsg的效率高。即便是像logmsg这样频繁使用的的</p>
<p>数据，操作系统的内存调度算法会让这样的频繁使用的页面常驻于内存，所以也就不会出现内</p>
<p>存换页问题了。  </p>
<h2 id="出错信息的处理"><a href="#出错信息的处理" class="headerlink" title="出错信息的处理"></a>出错信息的处理</h2><p>—————————<br>你会处理出错信息吗？哦，它并不是简单的输出。看下面的示例：  </p>
<p>if ( p == NULL ){<br>printf ( “ERR: The pointer is NULL\n” );<br>}  </p>
<p>告别学生时代的编程吧。这种编程很不利于维护和管理，出错信息或是提示信息，应该统一处</p>
<p>理，而不是像上面这样，写成一个“硬编码”。第10条对这方面的处理做了一部分说明。如果要</p>
<p>管理错误信息，那就要有以下的处理：  </p>
<p>#define ERR_NO_ERROR 0  </p>
<p>#define ERR_OPEN_FILE 1  </p>
<p>#define ERR_SEND_MESG 2  </p>
<p>#define ERR_BAD_ARGS 3  </p>
<p>#define ERR_MEM_NONE 4  </p>
<p>#define ERR_SERV_DOWN 5  </p>
<p>#define ERR_UNKNOW_INFO 6  </p>
<p>#define ERR_SOCKET_ERR 7  </p>
<p>#define ERR_PERMISSION 8  </p>
<p>#define ERR_BAD_formAT 9  </p>
<p>#define ERR_TIME_OUT 10  </p>
<p>char* errmsg[] = {<br>“No error”,<br>“Open file error”,<br>“Failed in sending/receiving a message”,<br>“Bad arguments”,<br>“Memeroy is not enough”,<br>“Service is down; try later”,<br>“Unknow information”,<br>“A socket operation has failed”,<br>“Permission denied”,<br>“Bad configuration file format”,<br>“Communication time out”,<br>};  </p>
<p>long errno = 0;  </p>
<p>void perror( char* info)<br>{<br>if ( info ){<br>printf(“%s: %s\n”, info, errmsg[errno] );<br>return;<br>}  </p>
<p>printf(“Error: %s\n”, errmsg[errno] );<br>}  </p>
<p>这个基本上是ANSI的错误处理实现细节了，于是当你程序中有错误时你就可以这样处理：  </p>
<p>bool CheckPermission( char* userName )<br>{<br>if ( strcpy(userName, “root”) != 0 ){<br>errno = ERR_PERMISSION_DENIED;<br>return (FALSE);<br>}  </p>
<p>…<br>}  </p>
<p>main()<br>{<br>…<br>if (! CheckPermission( username ) ){<br>perror(“main()”);<br>}<br>…<br>}  </p>
<p>一个即有共性，也有个性的错误信息处理，这样做有利同种错误出一样的信息，统一用户界面</p>
<p>，而不会因为文件打开失败，A程序员出一个信息，B程序员又出一个信息。而且这样做，非常</p>
<p>容易维护。代码也易读。  </p>
<p>当然，物极必反，也没有必要把所有的输出都放到errmsg中，抽取比较重要的出错信息或是提</p>
<p>示信息是其关键，但即使这样，这也包括了大多数的信息。  </p>
<h2 id="常用函数和循环语句中的被计算量"><a href="#常用函数和循环语句中的被计算量" class="headerlink" title="常用函数和循环语句中的被计算量"></a>常用函数和循环语句中的被计算量</h2><p>—————————————————<br>看一下下面这个例子：  </p>
<p>for( i=0; i&lt;1000; i++ ){<br>GetLocalHostName( hostname );<br>…<br>}  </p>
<p>GetLocalHostName的意思是取得当前计算机名，在循环体中，它会被调用1000次啊。这是多</p>
<p>么的没有效率的事啊。应该把这个函数拿到循环体外，这样只调用一次，效率得到了很大的提</p>
<p>高。虽然，我们的编译器会进行优化，会把循环体内的不变的东西拿到循环外面，但是，你相</p>
<p>信所有编译器会知道哪些是不变的吗？我觉得编译器不可靠。最好还是自己动手吧。  </p>
<p>同样，对于常用函数中的不变量，如：  </p>
<p>GetLocalHostName(char* name)<br>{<br>char funcName[] = “GetLocalHostName”;  </p>
<p>sys_log( “%s begin……”, funcName );<br>…<br>sys_log( “%s end……”, funcName );<br>}  </p>
<p>如果这是一个经常调用的函数，每次调用时都要对funcName进行分配内存，这个开销很大啊。</p>
<p>把这个变量声明成static吧，当函数再次被调用时，就会省去了分配内存的开销，执行效率也很</p>
<p>好。  </p>
<h2 id="函数名和变量名的命名"><a href="#函数名和变量名的命名" class="headerlink" title="函数名和变量名的命名"></a>函数名和变量名的命名</h2><p>————————————<br>我看到许多程序对变量名和函数名的取名很草率，特别是变量名，什么a,b,c,aa,bb,cc，还有什</p>
<p>么flag1,flag2, cnt1, cnt2，这同样是一种没有“修养”的行为。即便加上好的注释。好的变量名或</p>
<p>是函数名，我认为应该有以下的规则：  </p>
<p>1) 直观并且可以拼读，可望文知意，不必“解码”。<br>2) 名字的长度应该即要最短的长度，也要能最大限度的表达其含义。<br>3) 不要全部大写，也不要全部小写，应该大小写都有，如：GetLocalHostName 或是  </p>
<p>UserAccount。<br>4) 可以简写，但简写得要让人明白，如：ErrorCode -&gt; ErrCode, ServerListener -&gt; ServLisner</p>
<p>，UserAccount -&gt; UsrAcct 等。<br>5) 为了避免全局函数和变量名字冲突，可以加上一些前缀，一般以模块简称做为前缀。<br>6) 全局变量统一加一个前缀或是后缀，让人一看到这个变量就知道是全局的。<br>7) 用匈牙利命名法命名函数参数，局部变量。但还是要坚持“望文生意”的原则。<br>8) 与标准库（如：STL）或开发库（如：MFC）的命名风格保持一致</p>
<h2 id="函数的传值和传指针"><a href="#函数的传值和传指针" class="headerlink" title="函数的传值和传指针"></a>函数的传值和传指针</h2><p>————————————<br>向函数传参数时，一般而言，传入非const的指针时，就表示，在函数中要修改这个指针把指内</p>
<p>存中的数据。如果是传值，那么无论在函数内部怎么修改这个值，也影响不到传过来的值，因</p>
<p>为传值是只内存拷贝。  </p>
<p>什么？你说这个特性你明白了，好吧，让我们看看下面的这个例程：  </p>
<p>void<br>GetVersion(char* pStr)<br>{<br>pStr = malloc(10);<br>strcpy ( pStr, “2.0” );<br>}  </p>
<p>main()<br>{<br>char* ver = NULL;<br>GetVersion ( ver );<br>…<br>…<br>free ( ver );<br>}  </p>
<p>我保证，类似这样的问题是一个新手最容易犯的错误。程序中妄图通过函数GetVersion给指针</p>
<p>ver分配空间，但这种方法根本没有什么作用，原因就是——这是传值，不是传指针。你或许会</p>
<p>和我争论，我分明传的时指针啊？再仔细看看，其实，你传的是指针其实是在传值。  </p>
<h2 id="修改别人程序的修养"><a href="#修改别人程序的修养" class="headerlink" title="修改别人程序的修养"></a>修改别人程序的修养</h2><p>———————————  </p>
<p>当你维护别人的程序时，请不要非常主观臆断的把已有的程序删除或是修改。我经常看到有的</p>
<p>程序员直接在别人的程序上修改表达式或是语句。修改别人的程序时，请不要删除别人的程序</p>
<p>，如果你觉得别人的程序有所不妥，请注释掉，然后添加自己的处理程序，必竟，你不可能</p>
<p>100%的知道别人的意图，所以为了可以恢复，请不依赖于CVS或是SourceSafe这种版本控制</p>
<p>软件，还是要在源码上给别人看到你修改程序的意图和步骤。这是程序维护时，一个有修养的</p>
<p>程序员所应该做的。  </p>
<p>如下所示，这就是一种比较好的修改方法：  </p>
<p>char<em> p = ( char</em> )calloc( 10, sizeof char );  </p>
<p>…  </p>
<p>当然，这种方法是在软件维护时使用的，这样的方法，可以让再维护的人很容易知道以前的代</p>
<p>码更改的动作和意图，而且这也是对原作者的一种尊敬。  </p>
<p>以“注释 — 添加”方式修改别人的程序，要好于直接删除别人的程序。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;h和c文件的使用&quot;&gt;&lt;a href=&quot;#h和c文件的使用&quot; class=&quot;headerlink&quot; title=&quot;h和c文件的使用&quot;&gt;&lt;/a&gt;h和c文件的使用&lt;/h2&gt;&lt;p&gt;—————————&lt;br&gt;H文件和C文件怎么用呢？一般来说，H文件中是declare（声明），C文件中是define（定义）&lt;/p&gt;
&lt;p&gt;。因为C文件要编译成库文件（Windows下是.obj/.lib，UNIX下是.o/.a），如果别人要使用你的&lt;/p&gt;
&lt;p&gt;函数，那么就要引用你的H文件，所以，H文件中一般是变量、宏定义、枚举、结构和函数接口&lt;/p&gt;
&lt;p&gt;的声明，就像一个接口说明文件一样。而C文件则是实现细节。
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="编程修养" scheme="http://i90s.vip/tags/%E7%BC%96%E7%A8%8B%E4%BF%AE%E5%85%BB/"/>
    
  </entry>
  
  <entry>
    <title>产品经理访谈记录</title>
    <link href="http://i90s.vip//%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/2019/11/27/PM%E8%AE%BF%E8%B0%88%E8%AE%B0%E5%BD%95.html"/>
    <id>http://i90s.vip//产品笔记/2019/11/27/PM访谈记录.html</id>
    <published>2019-11-27T06:46:16.000Z</published>
    <updated>2019-12-01T09:39:48.047Z</updated>
    
    <content type="html"><![CDATA[<p>产品经理们写了无数篇产品分析报告，却鲜有一篇对于产品经理这个群体的分析报告。PMCAFF 采访了多位拥有着不同经历、处在不同段位的产品经理，试着以此概括出产品经理都有哪些 “典型” 特征。<br><a id="more"></a></p>
<p>我们选取了有代表性的产品经理及其回答，整理成此文，文中的产品经理皆为化名，先来认识下他们：</p>
<blockquote>
<p>• 何川<br>从业三年，某 “独角兽” 公司工作 2 年，目前就职于 BAT 其中一家。</p>
<p>• 老董<br>从业七年，一手组建了曾在舆论风口浪尖上的某互金企业产品团队，管理经验丰富。</p>
<p>• 张明<br>从业三年，某上市公司产品经理。</p>
<p>• 李广<br>从业五年，先后就职于多家公司，曾任国内某知名天气 APP 的产品经理。</p>
</blockquote>
<p>需要说明的是，“典型” 其实很难定义，且不说样本太小，即使样本足够大，不同类型公司的产品经理，工作内容和状态可能大不相同。试图以职业划分人群是一种简单粗糙的方法，且极不科学。教育程度、成长环境、年龄等也都是维度。此篇讨论，仅是一种泛指。</p>
<h2 id="成长就是从乐观到悲观"><a href="#成长就是从乐观到悲观" class="headerlink" title="成长就是从乐观到悲观"></a><strong>成长就是从乐观到悲观</strong></h2><p>有个有意思的现象，年轻的产品经理普遍偏乐观主义，认为一切东西尽在自己的掌控之中。</p>
<p>何川是 90 后，先在一家 “独角兽” 公司工作 2 年，目前就职于 BAT 其中一家。他对自己的掌控能力有绝对的自信。</p>
<blockquote>
<p>@何川：</p>
<p>我判断出来它有产出，它就一定有产出。所有的东西都是可预期的。你问我什么时候会特别有成就感？因为每一件事都是可预期的，那就不会有太多的兴奋。</p>
<p> <strong>搞不定的事情都是人的事情，三四个老大观点不一致时，或者跟直接领导产品观念有差异，就很麻烦。</strong>  </p>
<p>产品上不存在什么棘手的问题，让你做的东西市面上一定存在，没有的东西老板也不会去提，别人做得出来，那我也一定能做出来。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1985459-76fcd3f10292383d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>老董现在带着二三十人的团队，包括产品和研发，他之前一手建立了曾在舆论的风口浪尖上的某互金企业的产品团队，见证了该产品从起步，到腾飞壮大，再到被曝出问题。他坦诚自己是相对悲观主义者。</p>
<blockquote>
<p>@老董：</p>
<p> <strong>在需求输出时足够悲观，这样才能预料到不同的情况。</strong> </p>
<p>产品从零到一时其实还不是很担心，因为这都在你可控的范围内，真正担心的是上线后。有的问题是事先没预料到的，这很考验你临场反应能力、解决问题的能力；有的问题是事先预料到可能会发生的，因为各种原因，在问题还没被解决时便上线，当它真的发生了，会害怕。</p>
<p>我们是在正确的方向上做事情，据说神级产品经理可以把任何方向都做正确，如果到了那种程度，可能会变得更乐观，但那种境界是可遇不可求的。</p>
</blockquote>
<h2 id="投入没产出，就是战五渣"><a href="#投入没产出，就是战五渣" class="headerlink" title="投入没产出，就是战五渣"></a><strong>投入没产出，就是战五渣</strong></h2><p>产品经理们都很 “功利”，几乎每个受访产品经理都会提到 “值不值” 的问题。</p>
<p>从业三年的张明认为不存在把需求都满足的情况，因为不值。</p>
<blockquote>
<p>@张明：</p>
<p> <strong>大多数情况下，你只能满足 70% 的需求，因为要再覆盖剩下的 30%，消耗的资源将是巨大的。</strong> </p>
<p>我们做一款金融产品，老板想把起投额从 100 元降到 10 元，这并非仅仅改个参数那么简单，就好比人民币最小计量单位由 1 毛变成 1 分，每个人的钱包都会变大，你的数据量会激增。但可以预见的是投资额的增长和用户增长都很有限，理财场景下人们对 100 元和 10 元的敏感度没那么大。那这个的优先级就要往后排。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1985459-b08f3105762f3898.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><strong>产品经理们目标导向普遍很强，他们时刻衡量着投入与产出，以及这项功能改进跟大目标的匹配程度。</strong></p>
<blockquote>
<p>@张明：</p>
<p>其实不得不这么做，<strong>产品经理最害怕的是投入没有产出，浪费了大家的时间</strong>，这样你下次提需求时就会面对很大的质疑。所以只要经历过几次评审会，经历过几次舌战群儒，你不自觉地便建立起目标导向。</p>
</blockquote>
<h2 id="自己是真牛逼，别人都在装逼"><a href="#自己是真牛逼，别人都在装逼" class="headerlink" title="自己是真牛逼，别人都在装逼"></a><strong>自己是真牛逼，别人都在装逼</strong></h2><p>就像 “文人相轻”，产品经理们多数觉得自己很牛逼，认为别人是在装逼。</p>
<blockquote>
<p>@何川：</p>
<p>我当然会认为自己做出的产品都是好的，如果你都不认为自己做得产品好，那说明你工作很不用心嘛。</p>
<p>@李广：</p>
<p> <strong>自己做得产品一定会盯着数据看。</strong> </p>
<p>我们做天气预报，DAU 很高，但使用时间太短。2014 年的时候，LBS 很热，我们做了基于地理位置的图景功能，你可以看到身边的人都穿得是什么衣服。这比数字直观得多，总之融进去很多轻社交的元素，这样使用时常自然会增加。</p>
<p>职业经历中做的最骄傲的一款产品？<strong>其实都很骄傲，你要说最骄傲的，下一个产品。</strong></p>
</blockquote>
<p>不过谈到如何看待一些网红产品经理，工作年限越高的产品经理，对他们越是不以为意。</p>
<blockquote>
<p>@老董：</p>
<p>最顶尖的那些产品经理是很少发声的，而越往下走，解决问题的套路就越标准化。萌新们看起来干货满满的归纳总结，其实都是一些标准化程度很高的东西。</p>
<p>@李广：</p>
<p>至于那些讲产品经理的书籍，我觉得刚入行时是有必要看的，他能帮助你建立一个系统的认知，但书里的案例肯定都是适用于成书时或者成书之前的，在一个日新月异的时代，这些案例的实用价值可能会被刚入行的小白们高估。</p>
</blockquote>
<h2 id="最棘手的那些事"><a href="#最棘手的那些事" class="headerlink" title="最棘手的那些事"></a><strong>最棘手的那些事</strong></h2><p>聊起最棘手的事情，受访的产品经理们的回答呈现出高度的相似性。</p>
<p>一般来说，刚工作没多久时会觉得 “舌战群儒” 的时候很棘手，经常会面对来自各个团队的质疑——为何这个需求是有必要满足的；处在上升期时觉得时间很棘手，总想知道更多东西、做更多东西，经常性加班到很晚；而到了带团队的阶段，会觉得最棘手的问题在于人，老董的论述比较有代表性：</p>
<blockquote>
<p>@老董：</p>
<p>团队成员能力应该有高低，都很牛逼的话，成本核算也不对，基础的事情就没人做了。荣誉感并非每个人都有，有时做价值同步会非常困难，人与人之间，不是难，但经营起来是件很麻烦的事情。</p>
</blockquote>
<h2 id="数据也会骗人，但人更会骗人"><a href="#数据也会骗人，但人更会骗人" class="headerlink" title="数据也会骗人，但人更会骗人"></a><strong>数据也会骗人，但人更会骗人</strong></h2><p>产品经理们都会去做一些用户访谈，但用他们的话来说，用户访谈只是片面的，可听不可全听。受访的产品经理普遍都更相信数据，<strong>虽然数据也会骗人，但用户更会骗人。用户是小数据，而非大数据。</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1985459-502073602888fd3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>@何川：</p>
<p>做产品的过程中难免会犯一些错误，你认为个性化是很重要的一点，等做了之后你发现没什么卵用。证明了你的观点是错的，这一项你就得降级。久而久之你就知道了，该关心的是用户怎么做，而不是用户怎么说。所以<strong>我们更相信用户行为数据，而不是用户怎么说。**</strong>声音大的，不一定代表多数人。**</p>
</blockquote>
<h2 id="最重要的能力——解决问题"><a href="#最重要的能力——解决问题" class="headerlink" title="最重要的能力——解决问题"></a><strong>最重要的能力——解决问题</strong></h2><p>聊起产品经理应该具备怎样的素质，年轻的产品经理大多讲得是方法论——<strong>解决问题的能力是最重要的，职业初期首先要能解决问题；其次是发现问题的能力，对需求有所洞察；神级产品经理，可以创造需求。</strong></p>
<p>而走向管理岗的产品经理，强调的往往是一些软性的素质——<strong>沟通能力好、好奇心强、兴趣广泛</strong>的产品经理一般成长会比较快。</p>
<h2 id="我的产品很好，都是运营不给力"><a href="#我的产品很好，都是运营不给力" class="headerlink" title="我的产品很好，都是运营不给力"></a><strong>我的产品很好，都是运营不给力</strong></h2><p>虽然网上有很多产品和开发的各种段子，不过当跟本次受访的几个产品经理们聊起这个话题时，普遍倒都觉得跟开发没有太多的沟通问题，但对运营都颇有微词。</p>
<blockquote>
<p>@何川：</p>
<p>产品是提供一个增长曲线，技术就是去实现这条曲线，而运营的工作，就是把曲线的斜率做得更陡峭。</p>
<p>跟技术倒没什么沟通难度，虽然也会因为一些问题导致延期上线；多数情况下会觉得运营不太给力，产品本身带来的自然增长率可能有 10%，加上运营策略后，可能也就 11% 或者 12%，就会觉得运营没做到位。</p>
</blockquote>
<h2 id="产品的问题大多没有对错"><a href="#产品的问题大多没有对错" class="headerlink" title="产品的问题大多没有对错"></a><strong>产品的问题大多没有对错</strong></h2><p>产品经理眼中的产品从不是一个一成不变的东西，他们认为<strong>产品实际上是一个实验性的东西。</strong></p>
<blockquote>
<p>@老董：</p>
<p>不然为什么会有迭代呢？产品需要涵盖很多需求点，有你用过的，有你不会用的，所有用户需求点的并集，就是最终的产品形态。</p>
<p>产品上的问题大概就两种，一种是没有对错的，你只能去试，然后看数据；另一种可能是涉及到撕逼的，这个时候能屈能伸就很重要，你要知道什么是你必须死守的，同时，在工作中要和同事有一个融洽的工作关系。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/1985459-5c83504de566c763?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>你会发现，产品经理们眼中处处是产品，我跟何川约在一个咖啡馆见面，服务生给我们上错了咖啡，他马上接过话去：“我们分析一下为什么会上错咖啡。他们放了一个熊在这里，订单上写的是棕颜色的熊，他们可能是根据熊的颜色来判断该给哪位顾客上什么咖啡。但他们却上错了，这说明熊的颜色可能区分度不够大，解决方案就是把熊做得差异化更大一些。” 这种观察是在潜意识里的，也许产品经理在用任何一个产品的同时，潜意识中都在使用者和设计者两种角色里切换。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>技术的日新月异让好的产品层出不穷，一个优秀的产品会在短时间内吸引数以亿计的用户，这也让这一代产品人普遍都有一种 “产品理想”。你能真真切切地感受到产品经理们做产品的热情——<strong>想做出更好的产品，想让产品变得更好。</strong></p>
<p>然而互联网的马太效应，让流量入口牢牢地掌握在少数几家巨头和 “独角兽” 手里，一款又一款爆款产品出现在人们眼前的同时，伴随着的，是众多产品的昙花一现，以及更多产品的默默无闻。产品大牛风光无限的背后，是更多产品经理们默默居于一隅，死磕着自己的产品，不断优化功能和性能，以给用户带来更良好的体验。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;产品经理们写了无数篇产品分析报告，却鲜有一篇对于产品经理这个群体的分析报告。PMCAFF 采访了多位拥有着不同经历、处在不同段位的产品经理，试着以此概括出产品经理都有哪些 “典型” 特征。&lt;br&gt;
    
    </summary>
    
      <category term="产品笔记" scheme="http://i90s.vip/categories/%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="产品" scheme="http://i90s.vip/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>编程修养（1）</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/26/%E7%BC%96%E7%A8%8B%E4%BF%AE%E5%85%BB%EF%BC%881%EF%BC%89.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/26/编程修养（1）.html</id>
    <published>2019-11-26T13:55:10.000Z</published>
    <updated>2019-12-01T09:58:24.895Z</updated>
    
    <content type="html"><![CDATA[<h2 id="版权和版本"><a href="#版权和版本" class="headerlink" title="版权和版本"></a>版权和版本</h2><p>———————<br>好的程序员会给自己的每个函数，每个文件，都注上版权和版本。  </p>
<p>对于C/C++的文件，文件头应该有类似这样的注释：  <a id="more"></a></p>
<p>而对于函数来说，应该也有类似于这样的注释：  </p>
<p>这样的描述可以让人对一个函数，一个文件有一个总体的认识，对代码的易读性和易维护性有</p>
<p>很大的好处 </p>
<h2 id="缩进、空格、换行、空行、对齐"><a href="#缩进、空格、换行、空行、对齐" class="headerlink" title="缩进、空格、换行、空行、对齐"></a>缩进、空格、换行、空行、对齐</h2><p>————————————————<br>i) 缩进应该是每个程序都会做的，只要学程序过程序就应该知道这个，但是我仍然看过不缩进</p>
<p>的程序，或是乱缩进的程序，如果你的公司还有写程序不缩进的程序员，请毫不犹豫的开除他</p>
<p>吧，并以破坏源码罪起诉他，还要他赔偿读过他程序的人的精神损失费。缩进，这是不成文规</p>
<p>矩，我再重提一下吧，一个缩进一般是一个TAB键或是4个空格。（最好用TAB键）  </p>
<p>ii) 空格。空格能给程序代来什么损失吗？没有，有效的利用空格可以让你的程序读进来更加赏</p>
<p>心悦目。而不一堆表达式挤在一起。看看下面的代码：  </p>
<p>ha=(ha<em>128+</em>key++)%tabPtr-&gt;size;  </p>
<p>ha = ( ha <em> 128 + </em>key++ ) % tabPtr-&gt;size;<br>有空格和没有空格的感觉不一样吧。一般来说，语句中要在各个操作符间加空格，函数调用时<br>，要以各个参数间加空格。如下面这种加空格的和不加的：<br>if ((hProc=OpenProcess(PROCESS_ALL_ACCESS,FALSE,pid))==NULL){<br>}  </p>
<p>if ( ( hProc = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pid) ) == NULL ){<br>}  </p>
<p>iii) 换行。不要把语句都写在一行上，这样很不好。如：  </p>
<p>for(i=0;i’9’)&amp;&amp;(a[i]&lt;’a’||a[i]&gt;’z’)) break;  </p>
<p>我拷，这种即无空格，又无换行的程序在写什么啊？加上空格和换行吧。  </p>
<p>for ( i=0; i if ( ( a[i] &lt; ‘0’ || a[i] &gt; ‘9’ ) &amp;&amp;<br>( a[i] &lt; ‘a’ || a[i] &gt; ‘z’ ) ) {<br>break;<br>}<br>}  </p>
<p>好多了吧？有时候，函数参数多的时候，最好也换行，如：  </p>
<p>CreateProcess(<br>NULL,<br>cmdbuf,<br>NULL,<br>NULL,<br>bInhH,<br>dwCrtFlags,<br>enVBuf,<br>NULL,<br>&amp;siStartInfo,<br>&amp;prInfo<br>);  </p>
<p>条件语句也应该在必要时换行：  </p>
<p>if ( ch &gt;= ‘0’ || ch &lt;= ‘9’ ||<br>ch &gt;= ‘a’ || ch &lt;= ‘z’ ||<br>ch &gt;= ‘A’ || ch &lt;= ‘Z’ )  </p>
<p>iv) 空行。不要不加空行，空行可以区分不同的程序块，程序块间，最好加上空行。如：  </p>
<p>HANDLE hProcess;<br>PROCESS_T procInfo;  </p>
<p>if((hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, pid)) == NULL)<br>{<br>return LSE_MISC_SYS;<br>}  </p>
<p>memset(&amp;procInfo, 0, sizeof(procInfo));<br>procInfo.idProc = pid;<br>procInfo.hdProc = hProcess;<br>procInfo.misc |= MSCAVA_PROC;  </p>
<p>return(0);  </p>
<p>v) 对齐。用TAB键对齐你的一些变量的声明或注释，一样会让你的程序好看一些。如：  </p>
<p>typedef struct _pt_man<em>t</em> {<br>int numProc;<br>int maxProc;<br>int numEvnt;<br>int maxEvnt;<br>HANDLE* pHndEvnt;<br>DWORD timeout;<br>HANDLE hPipe;<br>TCHAR usr[MAXUSR];<br>int numMsg;<br>int Msg[MAXMSG];<br>} PT_MAN_T;  </p>
<h2 id="程序注释"><a href="#程序注释" class="headerlink" title="程序注释"></a>程序注释</h2><p>i) 对于行注释（“//”）比块注释（“”）要好的说法，我并不是很同意。因为一些老版本的C编</p>
<p>译器并不支持行注释，所以为了你的程序的移植性，请你还是尽量使用块注释。  </p>
<p>ii) 你也许会为块注释的不能嵌套而不爽，那么你可以用预编译来完成这个功能。使用“#if 0”和</p>
<p>“#endif”括起来的代码，将不被编译，而且还可以嵌套。  </p>
<h2 id="函数的-in-out-参数"><a href="#函数的-in-out-参数" class="headerlink" title="函数的[in][out]参数"></a>函数的[in][out]参数</h2><p>———————————  </p>
<p>我经常看到这样的程序：<br>FuncName(char* str)<br>{<br>int len = strlen(str);<br>…..<br>}  </p>
<p>char<em><br>GetUserName(struct user</em> pUser)<br>{<br>return pUser-&gt;name;<br>}  </p>
<p>不！请不要这样做。  </p>
<p>你应该先判断一下传进来的那个指针是不是为空。如果传进来的指针为空的话，那么，你的一</p>
<p>个大的系统就会因为这一个小的函数而崩溃。一种更好的技术是使用断言（assert），这里我就</p>
<p>不多说这些技术细节了。当然，如果是在C++中，引用要比指针好得多，但你也需要对各个参</p>
<p>数进行检查。  </p>
<p>写有参数的函数时，首要工作，就是要对传进来的所有参数进行合法性检查。而对于传出的参</p>
<p>数也应该进行检查，这个动作当然应该在函数的外部，也就是说，调用完一个函数后，应该对</p>
<p>其传出的值进行检查。  </p>
<p>当然，检查会浪费一点时间，但为了整个系统不至于出现“非法操作”或是“Core Dump”的系统级</p>
<p>的错误，多花这点时间还是很值得的。  </p>
<h2 id="对系统调用的返回进行判断"><a href="#对系统调用的返回进行判断" class="headerlink" title="对系统调用的返回进行判断"></a>对系统调用的返回进行判断</h2><p>——————————————<br>继续上一条，对于一些系统调用，比如打开文件，我经常看到，许多程序员对fopen返回的指针</p>
<p>不做任何判断，就直接使用了。然后发现文件的内容怎么也读出不，或是怎么也写不进去。还</p>
<p>是判断一下吧：  </p>
<p>fp = fopen(“log.txt”, “a”);<br>if ( fp == NULL ){<br>printf(“Error: open file error\n”);<br>return FALSE;<br>}  </p>
<p>其它还有许多啦，比如：socket返回的socket号，malloc返回的内存。请对这些系统调用返回的</p>
<p>东西进行判断。</p>
<h2 id="if-语句对出错的处理"><a href="#if-语句对出错的处理" class="headerlink" title="if 语句对出错的处理"></a>if 语句对出错的处理</h2><p>———————————<br>我看见你说了，这有什么好说的。还是先看一段程序代码吧。<br>if ( ch &gt;= ‘0’ &amp;&amp; ch &lt;= ‘9’ ){  </p>
<p>}else{  </p>
<p>printf(“error ……\n”);<br>return ( FALSE );<br>}  </p>
<p>这种结构很不好，特别是如果“正常处理代码”很长时，对于这种情况，最好不要用else。先判断</p>
<p>错误，如：  </p>
<p>if ( ch &lt; ‘0’ || ch &gt; ‘9’ ){  </p>
<p>printf(“error ……\n”);<br>return ( FALSE );<br>}  </p>
<p>……  </p>
<p>这样的结构，不是很清楚吗？突出了错误的条件，让别人在使用你的函数的时候，第一眼就能</p>
<p>看到不合法的条件，于是就会更下意识的避免。  </p>
<h2 id="头文件中的-ifndef"><a href="#头文件中的-ifndef" class="headerlink" title="头文件中的#ifndef"></a>头文件中的#ifndef</h2><p>——————————<br>千万不要忽略了头件的中的#ifndef，这是一个很关键的东西。比如你有两个C文件，这两个C文</p>
<p>件都include了同一个头文件。而编译时，这两个C文件要一同编译成一个可运行文件，于是问</p>
<p>题来了，大量的声明冲突。  </p>
<p>还是把头文件的内容都放在#ifndef和#endif中吧。不管你的头文件会不会被多个文件引用，你都</p>
<p>要加上这个。一般格式是这样的：  </p>
<p>#ifndef &lt;标识&gt;  </p>
<p>#define &lt;标识&gt;  </p>
<p>……<br>……  </p>
<p>#endif  </p>
<p>&lt;标识&gt;在理论上来说可以是自由命名的，但每个头文件的这个“标识”都应该是唯一的。标识的</p>
<p>命名规则一般是头文件名全大写，前后加下划线，并把文件名中的“.”也变成下划线，如：</p>
<p>stdio.h  </p>
<p>#ifndef _STDIO<em>H</em>  </p>
<p>#define _STDIO<em>H</em>  </p>
<p>……  </p>
<p>#endif  </p>
<p>（BTW：预编译有多很有用的功能。你会用预编译吗？）  </p>
<h2 id="在堆上分配内存"><a href="#在堆上分配内存" class="headerlink" title="在堆上分配内存"></a>在堆上分配内存</h2><p>—————————<br>可能许多人对内存分配上的“栈 stack”和“堆 heap”还不是很明白。包括一些科班出身的人也不明</p>
<p>白这两个概念。我不想过多的说这两个东西。简单的来讲，stack上分配的内存系统自动释放，</p>
<p>heap上分配的内存，系统不释放，哪怕程序退出，那一块内存还是在那里。stack一般是静态分</p>
<p>配内存，heap上一般是动态分配内存。  </p>
<p>由malloc系统函数分配的内存就是从堆上分配内存。从堆上分配的内存一定要自己释放。用free</p>
<p>释放，不然就是术语——“内存泄露”（或是“内存漏洞”）—— Memory Leak。于是，系统的可分</p>
<p>配内存会随malloc越来越少，直到系统崩溃。还是来看看“栈内存”和“堆内存”的差别吧。  </p>
<p>栈内存分配<br>—————<br>char*<br>AllocStrFromStack()<br>{<br>char pstr[100];<br>return pstr;<br>}  </p>
<p>堆内存分配<br>—————<br>char<em><br>AllocStrFromHeap(int len)<br>{<br>char </em>pstr;  </p>
<p>if ( len &lt;= 0 ) return NULL;<br>return ( char* ) malloc( len );<br>}  </p>
<p>对于第一个函数，那块pstr的内存在函数返回时就被系统释放了。于是所返回的char*什么也没</p>
<p>有。而对于第二个函数，是从堆上分配内存，所以哪怕是程序退出时，也不释放，所以第二个</p>
<p>函数的返回的内存没有问题，可以被使用。但一定要调用free释放，不然就是Memory Leak！  </p>
<p>在堆上分配内存很容易造成内存泄漏，这是C/C++的最大的“克星”，如果你的程序要稳定，那么</p>
<p>就不要出现Memory Leak。所以，我还是要在这里千叮咛万嘱付，在使用malloc系统函数（包</p>
<p>括calloc，realloc）时千万要小心。  </p>
<p>记得有一个UNIX上的服务应用程序，大约有几百的C文件编译而成，运行测试良好，等使用时</p>
<p>，每隔三个月系统就是down一次，搞得许多人焦头烂额，查不出问题所在。只好，每隔两个月</p>
<p>人工手动重启系统一次。出现这种问题就是Memery Leak在做怪了，在C/C++中这种问题总是</p>
<p>会发生，所以你一定要小心。一个Rational的检测工作——Purify，可以帮你测试你的程序有没</p>
<p>有内存泄漏。  </p>
<p>我保证，做过许多C/C++的工程的程序员，都会对malloc或是new有些感冒。当你什么时候在使</p>
<p>用malloc和new时，有一种轻度的紧张和惶恐的感觉时，你就具备了这方面的修养了。  </p>
<p>对于malloc和free的操作有以下规则：  </p>
<p>1) 配对使用，有一个malloc，就应该有一个free。（C++中对应为new和delete）<br>2) 尽量在同一层上使用，不要像上面那种，malloc在函数中，而free在函数外。最好在同一调用</p>
<p>层上使用这两个函数。<br>3) malloc分配的内存一定要初始化。free后的指针一定要设置为NULL。  </p>
<p>注：虽然现在的操作系统（如：UNIX和Win2k/NT）都有进程内存跟踪机制，也就是如果你有没</p>
<p>有释放的内存，操作系统会帮你释放。但操作系统依然不会释放你程序中所有产生了Memory  </p>
<p>Leak的内存，所以，最好还是你自己来做这个工作。（有的时候不知不觉就出现Memory Leak</p>
<p>了，而且在几百万行的代码中找无异于海底捞针，Rational有一个工具叫Purify，可能很好的帮</p>
<p>你检查程序中的Memory Leak）  </p>
<h2 id="变量的初始化"><a href="#变量的初始化" class="headerlink" title="变量的初始化"></a>变量的初始化</h2><p>————————<br>接上一条，变量一定要被初始化再使用。C/C++编译器在这个方面不会像Java一样帮你初始化</p>
<p>，这一切都需要你自己来，如果你使用了没有初始化的变量，结果未知。好的程序员从来都会</p>
<p>在使用变量前初始化变量的。如：  </p>
<p>1) 对malloc分配的内存进行memset清零操作。（可以使用calloc分配一块全零的内存）<br>2) 对一些栈上分配的struct或数组进行初始化。（最好也是清零）  </p>
<p>不过话又说回来了，初始化也会造成系统运行时间有一定的开销，所以，也不要对所有的变量</p>
<p>做初始化，这个也没有意义。好的程序员知道哪些变量需要初始化，哪些则不需要。如：以下</p>
<p>这种情况，则不需要。  </p>
<p>char <em>pstr;<br>pstr = ( char</em> ) malloc( 50 );<br>if ( pstr == NULL ) exit(0);<br>strcpy( pstr, “Hello Wrold” );  </p>
<p>但如果是下面一种情况，最好进行内存初始化。（指针是一个危险的东西，一定要初始化）  </p>
<p>char <strong>pstr;<br>pstr = ( char</strong> ) malloc( 50 );<br>if ( pstr == NULL ) exit(0);  </p>
<p>memset( pstr, 0, 50<em>sizeof(char</em>) );  </p>
<p>而对于全局变量，和静态变量，一定要声明时就初始化。因为你不知道它第一次会在哪里被使</p>
<p>用。所以使用前初始这些变量是比较不现实的，一定要在声明时就初始化它们。如：  </p>
<p>Links *plnk = NULL;   </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;版权和版本&quot;&gt;&lt;a href=&quot;#版权和版本&quot; class=&quot;headerlink&quot; title=&quot;版权和版本&quot;&gt;&lt;/a&gt;版权和版本&lt;/h2&gt;&lt;p&gt;———————&lt;br&gt;好的程序员会给自己的每个函数，每个文件，都注上版权和版本。  &lt;/p&gt;
&lt;p&gt;对于C/C++的文件，文件头应该有类似这样的注释：
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="编程修养" scheme="http://i90s.vip/tags/%E7%BC%96%E7%A8%8B%E4%BF%AE%E5%85%BB/"/>
    
  </entry>
  
  <entry>
    <title>小项目推广清单</title>
    <link href="http://i90s.vip//%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/2019/11/26/%E5%B0%8F%E9%A1%B9%E7%9B%AE%E6%8E%A8%E5%B9%BF%E6%B8%85%E5%8D%95.html"/>
    <id>http://i90s.vip//产品笔记/2019/11/26/小项目推广清单.html</id>
    <published>2019-11-26T06:32:16.000Z</published>
    <updated>2019-12-01T09:58:08.715Z</updated>
    
    <content type="html"><![CDATA[<p>这份 Side Project 推广清单主要包含了 Side Project 从启动前的市场调研到项目发布后的推广的各个方面以及注意事项。这份清单免费而且开源，中文版翻译自</p>
<p><a href="https://github.com/karllhughes/side-project-marketing" target="_blank" rel="external">side-project-marketing</a>, 英文原版地址请戳<a href="https://www.sideprojectchecklist.com/marketing-checklist/" target="_blank" rel="external">这里</a><br><a id="more"></a></p>
<h2 id="发布前的准备工作"><a href="#发布前的准备工作" class="headerlink" title="发布前的准备工作"></a>发布前的准备工作</h2><h3 id="市场调研"><a href="#市场调研" class="headerlink" title="市场调研"></a>市场调研</h3><h4 id="竞争格局分析"><a href="#竞争格局分析" class="headerlink" title="竞争格局分析"></a>竞争格局分析</h4><ul>
<li><p>列出主要的竞争者</p>
<h5 id="收集竞争者数据"><a href="#收集竞争者数据" class="headerlink" title="收集竞争者数据"></a>收集竞争者数据</h5><ul>
<li>网站链接</li>
<li>宣传标语，标题</li>
<li><strong>商业模式，定价策略</strong></li>
<li>博客链接，RSS 地址</li>
<li>社交媒体账号</li>
<li>核心成员的社交账号</li>
</ul>
</li>
<li><p>通过 RSS 订阅竞争者的博客</p>
</li>
<li><p>关注竞争者的官方社交账号，核心成员的社交账号</p>
</li>
<li><p>监控竞争者的产品变化</p>
</li>
<li><p>订阅相关细分行业的博客，杂志等，对细分行业进行了解</p>
</li>
<li><p>如果用户主要集中在国外，使用 Google Trands 查看进行需求和搜索量分析，如果主要偏向国内用户，使用百度指数</p>
</li>
</ul>
<h4 id="用户分析"><a href="#用户分析" class="headerlink" title="用户分析"></a>用户分析</h4><ul>
<li><p>从你的亲朋好友中找出可能是你将来用户的人，听取他们对你点子的意见反馈</p>
</li>
<li><p>试着加入，参加目标市场的聚会，论坛，网络小组</p>
</li>
<li><p>和同行多进行交流</p>
</li>
<li><p>试着列出一份你的竞争者的客户列表</p>
<h5 id="如何找出竞争对手的客户"><a href="#如何找出竞争对手的客户" class="headerlink" title="如何找出竞争对手的客户"></a>如何找出竞争对手的客户</h5><h6 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h6><ul>
<li>浏览对手的官方网站，很多公司的官方网站会有一些客户案例</li>
<li>查看对手的微信公众号，查看评论</li>
<li>试着成为竞争对手的客户，进入客户圈。比如知识星球 (小密圈), 微信群，qq 群</li>
</ul>
<h6 id="国外"><a href="#国外" class="headerlink" title="国外"></a>国外</h6><ul>
<li>查看 Twitter 账号的关注者，互动消息</li>
<li>查看 Facebook 粉丝</li>
<li>查看 LinkedIn 上的 follower</li>
<li>浏览对手的官方网站，很多公司的官方网站会有一些客户案例</li>
</ul>
</li>
<li><p>通过上面的方法试着与竞争对手的客户进行交流，找出他们对于该产品的看法，满意和不满意的点。</p>
</li>
<li><p>创建一份潜在用户的列表，可以在早期邀请其进行测试</p>
</li>
</ul>
<h3 id="发布前的准备工作-1"><a href="#发布前的准备工作-1" class="headerlink" title="发布前的准备工作"></a>发布前的准备工作</h3><ul>
<li>创建一份列表，这个列表里面主要包含科技，创业方面的博客</li>
<li>创建一份列表，这个列表里面主要包含所处细分行业的博客和媒体</li>
<li>创建一个媒体专用页面，这个页面里面包含产品 Logo 等图片文件，方便媒体对产品进行报道，参考 (<a href="https://www.kickresume.com/mediakit/" target="_blank" rel="external">kickresume</a>). 这类页面一般称为 Brand Resources，或者 Media Kit.</li>
</ul>
<h3 id="着陆页"><a href="#着陆页" class="headerlink" title="着陆页"></a>着陆页</h3><ul>
<li><p>给产品取名，并注册域名</p>
</li>
<li><p>写一个产品标语和一个简洁的的产品介绍，务必使用户能在最短时间内明白产品是干什么的。参考电梯法则 (即用极具吸引力的方式简明扼要地阐述自己的观点, 例如你在电梯里，只有 30 秒的时间来向一位关系公司前途的大客户推广产品且必须成功。)</p>
</li>
<li><p>创建产品 Logo</p>
</li>
<li><p>创建着陆页</p>
</li>
<li><p>创建 “About”, “Contact” 页面</p>
</li>
<li><p>创建 Pricing page</p>
<h5 id="定价的点子"><a href="#定价的点子" class="headerlink" title="定价的点子"></a>定价的点子</h5><ul>
<li>通过免费版提供基本功能，收费版提供附加功能</li>
<li>可以提供无理由退款保证</li>
<li>让产品只能通过邀请来注册</li>
<li>早期用户免费或者打折</li>
</ul>
</li>
<li><p>加入社交账号的链接，二维码等到着陆页</p>
</li>
<li><p>产品加入数据收集, 分析的功能，分析用户注册，跳出等关键数据，可是使用百度统计，google analytics.</p>
</li>
<li><p>加入 live chat 的功能能提供更好的用户体验，吸引顾客</p>
</li>
</ul>
<h3 id="Email-Marketing"><a href="#Email-Marketing" class="headerlink" title="Email Marketing"></a>Email Marketing</h3><p>国内用 Email 的人相对不是很多，但是国外 Email 的使用率相当高，如果做国外客户的化，Email Marketing 是强烈建议要做的。</p>
<h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><p>利用博客来进行引流，吸引到特定的目标人群，也是一个很重要的营销方式。在 Content Marketing(Inbound Marketing) 中包含了这一部分，这种营销方式一般还需要和 SEO 结合才能发挥好的效果。</p>
<ul>
<li>确定写作平台，一般分为自建或者使用第三方服务</li>
<li>确定主推的关键词</li>
<li>确定关键词以后，根据所选的关键词，围绕来进行文章的写作，有时候可以根据核心关键词找出若干长尾词，然后围绕长尾词进行文章的写作</li>
<li>在文章中可以引导用户注册或者加入 Email 订阅列表</li>
<li>在文章中可以引导用户关注社交账号</li>
</ul>
<h3 id="社交媒体"><a href="#社交媒体" class="headerlink" title="社交媒体"></a>社交媒体</h3><ul>
<li><p>检查社交媒体的名字可用性，这方面的服务国外我推荐</p>
<p><a href="https://www.namecheckr.com/" target="_blank" rel="external">namecheckr</a>，可以同时查询域名，facebook, twitter, reddit, instagram 等社交媒体的账号可用性，注册账号的时候很有用</p>
</li>
<li>注册社交账号</li>
<li>对社交账号进行设置，头像，背景照，联系方式等等</li>
</ul>
<h2 id="产品发布后"><a href="#产品发布后" class="headerlink" title="产品发布后"></a>产品发布后</h2><h3 id="获取用户"><a href="#获取用户" class="headerlink" title="获取用户"></a>获取用户</h3><blockquote>
<p>你应该与真正对你的产品有兴趣的那一小部分用户充分地沟通，而不是总想着服务于对你的产品无所谓的大多数人。杰西卡. 利文斯顿，Y Combinator 的创始合伙人</p>
</blockquote>
<ul>
<li>向身边的朋友赠送优惠券或者邀请码来让他们试用你的产品</li>
<li>向之前用户调研期间，建立的早期用户测试列表中的用户发送通知，邀请其试用</li>
<li>像社交媒体中的粉丝发消息，邀请试用</li>
<li>对试用产品的用户进行问卷调查，听取反馈意见</li>
<li>收集用户的好评，将其在社交网络和着陆页进行展示</li>
<li>创建 Email Campaign 来获取用户</li>
</ul>
<h3 id="免费的推广渠道"><a href="#免费的推广渠道" class="headerlink" title="免费的推广渠道"></a>免费的推广渠道</h3><ul>
<li><p>向开放目录和评测类网站提交网站地址</p>
<p><a href="https://github.com/mmccaff/PlacesToPostYourStartup" target="_blank" rel="external">PlacesToPostYourStartup</a></p>
</li>
<li><p>将一些有用的资源，做成电子书，文档，图片等等，用户需要通过 email signup 才能下载，这个 email 地址可以用来做 Email Marketing</p>
</li>
<li><p>确保所有的文章使用的都是高质量的图片</p>
<h5 id="高质量图片下载网站"><a href="#高质量图片下载网站" class="headerlink" title="高质量图片下载网站"></a>高质量图片下载网站</h5><ul>
<li><a href="https://unsplash.com/" target="_blank" rel="external">Unsplash</a></li>
<li><a href="http://skuawk.com/index.html" target="_blank" rel="external">Skuawk</a></li>
<li><a href="https://www.pexels.com/" target="_blank" rel="external">Pexels</a></li>
<li><a href="https://deathtothestockphoto.com/" target="_blank" rel="external">Death to Stock</a></li>
</ul>
</li>
<li><p>开设一门网上课程或者指南帮助你的潜在用户</p>
<h5 id="免费学习管理系统"><a href="#免费学习管理系统" class="headerlink" title="免费学习管理系统"></a>免费学习管理系统</h5><ul>
<li><a href="https://www.adaptlearning.org/" target="_blank" rel="external">Adapt Learning</a></li>
<li><a href="https://edu.google.com/openonline/edukit/index.html" target="_blank" rel="external">Google Open Classroom</a></li>
<li><a href="https://moodle.org/" target="_blank" rel="external">Moodle</a></li>
<li><a href="https://eliademy.com/" target="_blank" rel="external">Eliademy</a></li>
<li><a href="https://www.formalms.org/" target="_blank" rel="external">Forma LMS</a></li>
<li><a href="https://www.canvaslms.com/" target="_blank" rel="external">Canvas</a></li>
<li><a href="https://www.ilias.de/docu/goto_docu_root_1.html" target="_blank" rel="external">ILIAS</a></li>
<li><a href="https://www.opigno.org/en" target="_blank" rel="external">Opigno</a></li>
</ul>
<h5 id="创建网络课程的服务"><a href="#创建网络课程的服务" class="headerlink" title="创建网络课程的服务"></a>创建网络课程的服务</h5><ul>
<li><a href="https://snapguide.com/" target="_blank" rel="external">Snapguide</a></li>
<li><a href="http://guides.co/" target="_blank" rel="external">Guides.co</a></li>
<li><a href="http://www.ehow.com/write-for-ehow/" target="_blank" rel="external">eHow</a></li>
<li><a href="https://www.lynda.com/" target="_blank" rel="external">Lynda</a></li>
<li><a href="https://www.pluralsight.com/teach" target="_blank" rel="external">Pluralsight</a></li>
<li><a href="https://www.skillshare.com/" target="_blank" rel="external">Skillshare</a></li>
<li><a href="https://www.udemy.com/" target="_blank" rel="external">Udemy</a></li>
</ul>
</li>
<li><p>建立外链。好的内容 + 高质量的外联 = 更好的搜索排名</p>
<h5 id="外链建立策略"><a href="#外链建立策略" class="headerlink" title="外链建立策略"></a>外链建立策略</h5><ul>
<li><a href="http://backlinko.com/skyscraper-technique" target="_blank" rel="external">Skyscraper campaign</a></li>
<li><a href="http://pointblankseo.com/egobait-guide" target="_blank" rel="external">Ego baiting</a></li>
<li>访谈，问答类的博文</li>
<li>客座博客</li>
<li><a href="https://moz.com/blog/the-broken-link-building-bible" target="_blank" rel="external">Broken link building</a></li>
<li>音频类的访谈</li>
<li><a href="http://backlinko.com/link-building" target="_blank" rel="external">更多的外链策略</a></li>
</ul>
<h5 id="外链建立工具"><a href="#外链建立工具" class="headerlink" title="外链建立工具"></a>外链建立工具</h5><ul>
<li><p><a href="https://ahrefs.com/" target="_blank" rel="external">Ahrefs</a></p>
<p>– Two-week free trial</p>
</li>
<li><a href="https://majestic.com/" target="_blank" rel="external">Majestic</a></li>
<li><p><a href="https://www.ranksignals.com/" target="_blank" rel="external">Rank Signals</a></p>
<p>– Free</p>
</li>
<li><a href="https://www.semrush.com/" target="_blank" rel="external">SEMrush</a></li>
<li><p><a href="https://serpstat.com/" target="_blank" rel="external">Serpstat</a></p>
<p>– Free limited account</p>
</li>
</ul>
</li>
</ul>
<h3 id="付费的推广渠道"><a href="#付费的推广渠道" class="headerlink" title="付费的推广渠道"></a>付费的推广渠道</h3><p><strong>免费的推广渠道仅仅意味着推广过程中不需要额外花费金钱去购买服务，但是并不意味着你不需要花费精力和时间，付费的工具和服务有的时候或许是性价比最高的. –译者注</strong></p>
<ul>
<li><p>付费搜索推广，社交推广</p>
<h5 id="付费搜索推广，社交推广平台"><a href="#付费搜索推广，社交推广平台" class="headerlink" title="付费搜索推广，社交推广平台"></a>付费搜索推广，社交推广平台</h5><ul>
<li><a href="https://adwords.google.com/home/" target="_blank" rel="external">Google Adwords</a></li>
<li><a href="https://business.linkedin.com/marketing-solutions/ads" target="_blank" rel="external">Linkedin</a></li>
<li><a href="https://www.facebook.com/business/products/ads" target="_blank" rel="external">Facebook</a></li>
<li><a href="https://secure.bingads.microsoft.com/" target="_blank" rel="external">Bing</a></li>
<li><a href="https://ads.twitter.com/" target="_blank" rel="external">Twitter</a></li>
<li><a href="http://ads.stumbleupon.com/" target="_blank" rel="external">StumbleUpon</a></li>
<li><a href="https://ads.pinterest.com/" target="_blank" rel="external">Pinterest</a></li>
<li><a href="https://business.instagram.com/advertising" target="_blank" rel="external">Instagram</a></li>
<li><a href="https://www.launchbit.com/" target="_blank" rel="external">Launchbit</a></li>
<li><a href="https://izea.com/" target="_blank" rel="external">Izea</a></li>
<li><a href="http://www.sponsoredreviews.com/" target="_blank" rel="external">SponsoredReviews.com</a></li>
</ul>
</li>
<li><p>基于佣金的推广</p>
<h5 id="基于佣金的推广平台"><a href="#基于佣金的推广平台" class="headerlink" title="基于佣金的推广平台"></a>基于佣金的推广平台</h5><ul>
<li><a href="http://www.cj.com/advertiser" target="_blank" rel="external">Commission Junction</a></li>
<li><a href="http://www.affiliate.com/" target="_blank" rel="external">Affiliate.com</a></li>
<li><a href="https://rakutenmarketing.com/affiliate" target="_blank" rel="external">Rakuten Marketing</a></li>
</ul>
</li>
<li><p>用户推荐营销系统</p>
<h5 id="Referral-marketing-platforms"><a href="#Referral-marketing-platforms" class="headerlink" title="Referral marketing platforms"></a>Referral marketing platforms</h5><ul>
<li><a href="https://github.com/harrystech/prelaunchr" target="_blank" rel="external">Harry’s Prelaunchr (free, open source)</a></li>
<li><a href="https://clevertap.com/" target="_blank" rel="external">CleverTap (offers a free tier)</a></li>
<li><a href="http://expectreferrals.com/pricing/" target="_blank" rel="external">Expect Referrals</a></li>
<li><a href="https://www.hirefrederick.com/" target="_blank" rel="external">Frederick</a></li>
<li><a href="http://www.geniusreferrals.com/" target="_blank" rel="external">Genius Referrals</a></li>
<li><a href="https://invitebox.com/" target="_blank" rel="external">InviteBox</a></li>
<li><a href="http://www.invitereferrals.com/" target="_blank" rel="external">InviteReferrals</a></li>
<li><a href="https://www.referralcandy.com/" target="_blank" rel="external">Referral Candy</a></li>
<li><a href="https://viral-loops.com/" target="_blank" rel="external">Viral Loops</a></li>
<li><a href="https://girafi.co/" target="_blank" rel="external">Girafi</a></li>
<li><a href="https://campaignedapp.com/" target="_blank" rel="external">Campaigned</a></li>
</ul>
</li>
</ul>
<h2 id="周期性的推广任务"><a href="#周期性的推广任务" class="headerlink" title="周期性的推广任务"></a>周期性的推广任务</h2><h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><ul>
<li><p>为博客建立一份文章发布计划，按照计划发布更新博客</p>
</li>
<li><p>到潜在用户可能访问的站点发布客座博客 (guest posting)</p>
</li>
<li><p>重新整理现有的博客文章，输出其他类型的传播媒介</p>
<h5 id="重新整理文章"><a href="#重新整理文章" class="headerlink" title="重新整理文章"></a>重新整理文章</h5><ul>
<li>将文章输出成视频，上传至 Youtube</li>
<li>将文章输出成音频，上传至 Podcast</li>
<li>输出成信息图表</li>
<li>输出成展示类文件，例如 PPT</li>
</ul>
</li>
<li><p>推广博客:</p>
<h5 id="推广方法"><a href="#推广方法" class="headerlink" title="推广方法"></a>推广方法</h5><ul>
<li>将博客文章推送给 email list.</li>
<li>博客文章在社交媒体进行分享</li>
<li>鼓励用户分享博客文章</li>
<li>将最新的一片文章或者着陆页设置为签名</li>
</ul>
</li>
</ul>
<h3 id="Email"><a href="#Email" class="headerlink" title="Email"></a>Email</h3><ul>
<li>定期向订阅者发送博客文章，用户案例等</li>
<li>在社交网络，博客上推广订阅列表</li>
<li>向之前收集的潜在用户定期发送邮件，获取直接性的反馈</li>
<li>向新用户发送邮件，简单的介绍自己</li>
</ul>
<h3 id="社交网络"><a href="#社交网络" class="headerlink" title="社交网络"></a>社交网络</h3><ul>
<li><p>规划社交媒体发送的内容</p>
<h5 id="内容点子"><a href="#内容点子" class="headerlink" title="内容点子"></a>内容点子</h5><ul>
<li>展示产品背后的故事，比如工作间的图片，开发中的新功能等等</li>
<li>分享产品博客的文章</li>
<li>折扣优惠信息</li>
<li>相关新闻，博客</li>
<li>有趣，发人深省的名人名言</li>
<li>问卷调查，对关注者的提问</li>
<li>推荐的书</li>
<li>推荐的工具，网站, App 等</li>
</ul>
</li>
<li><p>加入目标客户经常访问的 Facebook 用户组， Linkdedin 用户组</p>
</li>
<li><p>可以给群组中的用户发送独家邀请</p>
</li>
<li><p>Twitter 加入相关话题的讨论</p>
</li>
<li><p>对于分享产品的用户，给予折扣优惠</p>
</li>
</ul>
<h3 id="公共关系"><a href="#公共关系" class="headerlink" title="公共关系"></a>公共关系</h3><ul>
<li><p>可以联系其他博客的作者将产品链接加入到相关博客文章中</p>
</li>
<li><p>寻找具有<code>.edu</code>后缀的机构，大学的教授或者学生加入产品链接，这对 SEO 很有帮助</p>
</li>
<li><p>寻找相关评测类网站，请求加入产品链接，如果不能加入，尝试留言</p>
</li>
<li><p>客座博客</p>
<h5 id="客座博客"><a href="#客座博客" class="headerlink" title="客座博客"></a>客座博客</h5><ul>
<li>将适合你的产品用户定位且能发布客座博客的博客地址整理成一份列表</li>
<li>首先在你自己的博客上写上几篇介绍的博客</li>
<li>建立一个产品推介的列表，写下每篇博客的标题，主题，和一段总体的描述。</li>
<li>尝试用其中一个推介去联系这些博客，看看他们什么样的反应</li>
<li>过段时间换一个媒介，重新去联系上述博客，尽量做到周期性</li>
</ul>
</li>
<li><p>在相关内容的其他博客文章下面进行留言评论，注意不要被当做垃圾评论</p>
</li>
<li><p>加入相关的网络论坛，群组等</p>
</li>
</ul>
<h3 id="其他的网站"><a href="#其他的网站" class="headerlink" title="其他的网站"></a>其他的网站</h3><ul>
<li><p>在问答社区回答相关的问题，定时回头查看，回复留言</p>
<h5 id="问答类社区"><a href="#问答类社区" class="headerlink" title="问答类社区"></a>问答类社区</h5><ul>
<li><a href="https://stackoverflow.com/" target="_blank" rel="external">Stack Overflow</a></li>
<li><a href="https://www.quora.com/" target="_blank" rel="external">Quora</a></li>
<li>行业论坛，或者是地域性的论坛</li>
<li><a href="https://www.producthunt.com/" target="_blank" rel="external">Product Hunt</a></li>
</ul>
</li>
<li><p>在 Slideshare 上进行评论</p>
</li>
<li><p>在 Amazon, GoodReads 上对相关行业的书写评测</p>
</li>
<li><p>Create/publish presentations relevant to your industry.</p>
<h5 id="演示制作软件"><a href="#演示制作软件" class="headerlink" title="演示制作软件"></a>演示制作软件</h5><ul>
<li><a href="https://docs.google.com/presentation/" target="_blank" rel="external">Google Slides</a></li>
<li><a href="https://prezi.com/" target="_blank" rel="external">Prezi</a></li>
<li><a href="https://slides.com/" target="_blank" rel="external">Slides.com</a></li>
<li><a href="https://www.slideshare.net/" target="_blank" rel="external">Slideshare</a></li>
</ul>
</li>
</ul>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ul>
<li>进行客户投票 (能够决定博客和社交网络的内容走向)</li>
<li>通过你另外的项目来推广这个项目</li>
<li>对着陆页等关键页面进行 A/B 测试<a href="https://www.optimizely.com/" target="_blank" rel="external">Optimizely</a></li>
<li>对 Email newsletters 进行 A/B 测试</li>
<li>在博客上加入<a href="https://dev.twitter.com/cards/overview" target="_blank" rel="external">Twitter cards</a></li>
<li><a href="https://developers.google.com/search/docs/guides/mark-up-content" target="_blank" rel="external">rich snippets in Google search results</a>.</li>
<li>分析用户注册流程，查看哪一环节用户丢失比较严重并进行优化 (<a href="http://www.useronboard.com/" target="_blank" rel="external">查看这些例子</a>).</li>
<li>在不同平台，不同地区进行测试，确保都能流畅的访问</li>
<li>使用工具<a href="https://website.grader.com/" target="_blank" rel="external">Website Grader</a>来指导进行网站提升</li>
<li>针对 Email newsletters 和社交媒体进行统计，什么时间发布消息，用户最有可能查看，反馈</li>
<li>确保每个页面都有 Call To Action 的按钮</li>
<li>检查并提高转换率<a href="http://www.conversionchecklist.org/" target="_blank" rel="external">可以对照这份 checklist</a></li>
<li>站点加入”Exit Intent” 弹出框，增加 Conversion Rate <a href="https://blog.gleam.io/exit-intent/" target="_blank" rel="external">Exit Intent</a></li>
<li>创建<code>常见问题</code>页面</li>
<li>使用<a href="https://get.google.com/tagassistant/" target="_blank" rel="external">Google Tag Assistant</a>确保站点的 Google 相关服务工作正常</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这份 Side Project 推广清单主要包含了 Side Project 从启动前的市场调研到项目发布后的推广的各个方面以及注意事项。这份清单免费而且开源，中文版翻译自&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/karllhughes/side-project-marketing&quot;&gt;side-project-marketing&lt;/a&gt;, 英文原版地址请戳&lt;a href=&quot;https://www.sideprojectchecklist.com/marketing-checklist/&quot;&gt;这里&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="产品笔记" scheme="http://i90s.vip/categories/%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="推广" scheme="http://i90s.vip/tags/%E6%8E%A8%E5%B9%BF/"/>
    
      <category term="运营" scheme="http://i90s.vip/tags/%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>如花谢花开——《思悼》观后感</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/23/%E5%A6%82%E8%8A%B1%E8%B0%A2%E8%8A%B1%E5%BC%80.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/23/如花谢花开.html</id>
    <published>2019-11-23T02:04:14.000Z</published>
    <updated>2019-12-01T09:43:45.070Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xujfx.com1.z0.glb.clouddn.com/%E6%80%9D%E6%82%BC.jpg" alt=""><br>一部两小时电影断断续续看了四天才看完<br>《思悼》虽然描写的皇宫内权利的斗争 用宫斗剧是解释它并不准确  我感觉更像是一部家庭伦理片<br>一个只想当王的父亲<br>一个只想当儿子的储君<a id="more"></a><br>父子情在影片中表现的淋漓尽致<br>英祖希望世子能早日即位 又不甘心交出权力<br>世子相比王位 更愿得到世祖的爱<br>帝王之家 非比寻常人家 有太多的不可以<br>有时候越是简单的 越无法得到<br>英祖自己的登基有着太多不可细说的过去<br>他一直严格要求世子 让他读书 教他如何权衡庙堂之上的各方势力 但他又无意完全放下权利 父亲的制衡 让世子事事无法得愿<br>被嫌弃的松子的一生啊<br>父子俩虽然彼此并不认同 但仍维持着这微妙的平衡 世孙的出现  让英祖看到了另外一种可能 找到了更适合王位的人 这种微妙的平衡随即被打破<br>第七日父子阴阳相隔的对话 将父子俩内心的纠结表现的淋漓尽致 也将全剧感情推向了高潮<br>第八日 英祖用手去摸米缸里的世子 摸到鼻子时发现世子已经没了呼吸 又赶快用手去摸颈部 英祖当时肯定很纠结吧 即不想让儿子死 又不想让他活着  当他确认儿子已经死掉的时候 瞬间崩溃 嚎啕大哭  哭完 让乐队又奏着凯旋曲回宫<br>高墙华锦为君臣 来生麻衣愿父子<br>世孙从小就知道忍耐 也知道要讨好英祖<br>世子在射箭时和世孙的对话 也暗示了全剧的结局<br>世孙说 我也不喜欢这样的我<br>特别是在他登基后给母亲过花甲时 说 我从小就没玩过 今天就让我尽兴的玩一次吧<br>世孙的扇子舞配上片尾曲 如花谢花开<br>将沉默克制的全片基调打破  让众人能够毫无顾忌的流泪发泄内心的感情</p>
<h2 id="附上片尾曲-《如花谢花开》-歌词"><a href="#附上片尾曲-《如花谢花开》-歌词" class="headerlink" title=" 附上片尾曲 《如花谢花开》 歌词 "></a><strong> 附上片尾曲 《如花谢花开》 歌词 </strong></h2><p>如今吾欲去<br>独留伤悲于世<br>纵有千语 未能与君诉<br>托付浮云 就此别去<br>难了却 君之所愿<br>泪如雨 潜然落<br>空留歉疚 孑然离<br>如花开花谢<br>虚空飘荡浮游<br>委身清风别过<br>曾空虚凌晨时分 与星做伴<br>如今吾亦别过<br>纵彼此念念不忘<br>纵然相对 仍难触碰<br>缘何未能相见<br>兴许君心深处一隅<br>吾之体温仍残留<br>清风吹 消散前<br>就此一次 轻抚吾之脸庞<br>此文章为 不知名的工程师 原创，特此声明！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xujfx.com1.z0.glb.clouddn.com/%E6%80%9D%E6%82%BC.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;一部两小时电影断断续续看了四天才看完&lt;br&gt;《思悼》虽然描写的皇宫内权利的斗争 用宫斗剧是解释它并不准确  我感觉更像是一部家庭伦理片&lt;br&gt;一个只想当王的父亲&lt;br&gt;一个只想当儿子的储君
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="影评" scheme="http://i90s.vip/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>别了！华为8年理工女硕离职感言</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/18/%E5%88%AB%E4%BA%86%EF%BC%81%E5%8D%8E%E4%B8%BA8%E5%B9%B4%E7%90%86%E5%B7%A5%E5%A5%B3%E7%A1%95%E7%A6%BB%E8%81%8C%E6%84%9F%E8%A8%80.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/18/别了！华为8年理工女硕离职感言.html</id>
    <published>2019-11-18T10:00:49.000Z</published>
    <updated>2019-12-01T09:43:25.266Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>作者简介：理工女硕，应届华为8年半，目前已经离开一年有余。<br>本文首发于个人公众号：末末书屋</p>
</blockquote>
<p>文章分了五个部分：</p>
<ol>
<li>毕业了（为什么离开）</li>
<li>那些挺尸而过的鸡血岁月（1~2年）</li>
<li>看上去很美（3~4年）</li>
<li>女汉子是怎样炼成的（5~6年）</li>
<li>你纵虐我千百遍，我亦待你如初恋（7~8年）</li>
</ol>
<p>一年前的十月，我离开了华为，不咸不淡。这个十月，和我一同入职的先生也离开了，心里的五味杂陈却异常凶猛的翻涌起来。过去的一年里，我还是称华为我们公司，因为我还是华为家属，生活里依然弥漫着熟悉的华为味道，还有机会在上研所美丽的园区溜达。可是从此以后，就真的和这里没有关系了，真真的告别了。于是提起笔，整理此刻的情绪和之前在华为的种种，留作纪念。</p>
<p>青春的纪念，家庭的纪念，一种生活方式的纪念。<a id="more"></a></p>
<h2 id="01-毕业了"><a href="#01-毕业了" class="headerlink" title="01 毕业了"></a>01 毕业了</h2><p>每个华为人都有过这样的感受：当身边有人离开的时候，就会不由得问自己，什么时候是我呢？是的，华为于我们而言，只是另一所大学，每年大批的小鲜肉投身而来，淬炼成精或自废武功之后又回归社会，我们称之为“毕业了”。我的学制八年半，研发系里几次调动，综合成绩B+，中规中矩的老实学生。</p>
<p>当主管问及离开原因的时候，我说，因为内心不平静。这是实话。白岩松说，不平静，就不会有幸福。我确实正在经历幸福感知迟钝。因为内心不平静，人在工作心在漫游，感觉在飘着，没有根基没有营养没有热情，只剩下麻木和日复一日的机械劳作。</p>
<p>为什么会不平静？</p>
<p>外因1：好奇害死猫。</p>
<p>从学校出来，就一头扎进华为的深渊，这么多年也不曾抬头看路。在华为这所大学里，基层小兵就像螺丝钉一样，严格的流程下，耕作自己的一亩三分田，不敢懈怠。而公司也像贴身保姆一样，提供了一整套的服务：食堂、便利店、健身房、机票、宿舍、协议酒店、不定期的文体活动、相亲、内部租房……于是从象牙塔里出来的孩子们，又换了象牙塔继续生活，这次还有酬劳。自从华为的自有酒庄莫赛尔出来后，探亲访友都改红酒了，高端大气上档次。</p>
<p>正是这些看似的好和方便，造就了一批有着特殊标签的“华为人”。大家一面享受着公司为提高工作效率而敞开的便捷，一面憧憬着外面的花花世界。对于已经看透的人来说，Hi，这一切就够了，干嘛自己浪费精力去折腾呢。可是——</p>
<p>每个人都是一条欲望之河，深浅不一而已，不经历一遭，定欲壑难平。而华为，其特殊之处恰恰在于，单纯和封闭。当然，加上占据一个人绝大多数醒着的时间，让这一体验丰富生活的环节缺失了。</p>
<p>于是，这只听到一星半点外边故事的猫，终于忍不住一跃而出，管它外面是什么。</p>
<p>外因2：狼和小羊的天然冲突。</p>
<p>华为的狼性众所周知。曾经有那么一年，还在我鸡血未凉的时候，做了个小主管，试图把自己改造成狼，以获取晋级擢升的通行证。发现自己狠不下来之后，就买来各种经典的管理书籍，企图成为一只按照文明社会规则行事的优雅的狼。无奈难行其道。一阵撕扯之后，继续做回小羊。</p>
<p>狼群里有一个著名的法则：“忍、狠、滚”。初入狼群，根基不稳，只能忍着。然后有两种选择，要么把自己训成更凶残的狼，这不光是对手下狠，对合作链的各个环节狠，更要对自己狠；要么滚蛋。三观不同，忍自难耐。那就滚吧。</p>
<p>小羊打心里还是更喜欢温润如玉，想春赏百花秋望月，一抔红泥悦身心。</p>
<p>内因1：温饱思淫欲。</p>
<p>有一次，在菲律宾和客户吃饭，对方一小伙让我教他说汉语。我问：“你都会说什么汉语啊”？“温饱思淫欲”，他教的，手指着对面正一脸坏笑的Jeff。“什么意思你知道吗”？“就是吃饱穿暖了开始想不该想的事”。正解！</p>
<p>人类一思考，上帝就发笑。可是吃饱穿暖了不想入非非还能干点啥呢。</p>
<p>这两年我最常琢磨的事：按照当前的节奏下去，再过十年，我会是什么样的一种状态？放眼身边年长的同事，无休止的加班，时间不能自主支配；脾气暴躁，纠结在无数细碎的事件里；茶余饭后抱怨公司的种种，然后继续隐忍做事。</p>
<p>以我在本领域的这点资质，真的可以预见到未来，这不是我想看到的自己。如果说一时的隐忍能换来以后的升华，或许还能坚持，但是我看不到。</p>
<p>当这个念头一闪，我就不能淡定了：这就是传说中一眼望穿的生活啊，任由残留的好年华继续原地打转？</p>
<p>内因2：所谓身心不一。</p>
<p>身边一直也不乏这样的同事：你跟他谈新技术，他眼里就发光。他工作起来，就像燃烧着的火球，熠熠生辉。让人好生羡慕。这就是所谓的干着自己所爱的事了吧，燃料自备，根本不需要外面煽风点火。可我不是，我越来越清楚自己的天赋不在这里。从骨子里说，我首先不热爱科学，更向往“采菊东篱下，悠然现南山”的农耕生活。直观点说呢，我对文字的热爱远远大于数字。这颗一直被我小心掩埋着的种子，这两年迅速膨胀，有种呼之欲出的感觉，再不由它抽枝展叶，恐怕要内伤了。</p>
<p>台湾作家小野的一篇“就算选错，人生也不会毁了”的文章火遍朋友圈，大概是因为大家都经历过那样的一种意识的变化。人生旅途的种种岔路选择，从了心，最终都会殊途同归。唯有经历和内化才能和自己归一，也唯有内外归一，内心才能平静。</p>
<p>所以，我想停下来，去寻找那件能让我满血复活并一路发光的事。很多人说，放弃多年的积累重新开始，机会成本太高了，而这个年龄也尴尬。我也没什么底气，只能自己上鸡汤：“每一天都是余生最年轻的一天”，“人生永远没有太晚的开始”。再也回不到二八芳龄重新选择人生的时候，就从了心吧，更何况——</p>
<p>过去的岁月也并非没有意义，这是人生旅程中最重要的一站，解决了温饱，锻炼了解决复杂问题的能力，宏观看事微观待物，思维缜密，抗压。这些都是生存的基础。</p>
<p>如我在告别信中写到：“当离别的时刻终于到来的时候，反而很平静，那些平日里的不满或者抱怨都随着时间的远去而平复了，剩下的只是眉间那习惯性的紧蹙，看来需要等待内心足够的阳光来舒展了。公司/工作无关好坏，只有适不适合自己，终日相伴，真的就像伴侣一样。你在这里呼吸和连接，这些氛围最终塑造了我们看到的彼此，我们是彼此的磁场。与其说这里不好，不如说在这里看不到更好的自己。”</p>
<p>那么，再见了，华为！最美的年华相遇，亦不曾辜负。从此开启后青春时代的新生活，遇见幸福，遇见更好的自己！</p>
<h2 id="那些挺尸而过的鸡血岁月"><a href="#那些挺尸而过的鸡血岁月" class="headerlink" title="那些挺尸而过的鸡血岁月"></a>那些挺尸而过的鸡血岁月</h2><p>多年前，一次七天长假过后，我问组里的同事，放假干嘛了。“挺尸七日”，守友说。何谓“挺尸”？就是每天都躺在床上，醒着就打游戏看电影，困了就睡觉，饿得不行了叫个外卖。</p>
<p>挺尸，够形象！虽说夸张了点，却是刚毕业的单身华为男的真实生活。可是为什么要这样呢？26岁的豆蔻年华，手里还有点小钱！</p>
<p>一、两遭</p>
<p>我试图把记忆拉回到2006年，那是四月初，北方春寒料峭。第一次乘飞机，前往深圳总部参加大队培训，就是外界说的洗脑。南国的湿气和热气一起涌来，青翠的草木，湛蓝的天空，那么温暖那么美。华为坂田基地，好阔。俨然非洲大陆华丽分割出的欧式庄园。我的小心脏是一阵乱颤。</p>
<p>早上五点起床，穿着短裤短袖跟着高大帅气的教官跑圈，强度挑战我的极限，反正每天都有人晕倒。然后火速在最近的食堂早饭。再一路狂奔回百草园宿舍冲澡换正装。临近八点，高跟鞋西服裙叮当蹁跹在华为大学培训中心的路上，春风无力杨柳纤，从此粉黛无颜色。上课内容无非是企业文化、信息安全、军训。大家的状态呢，打打瞌睡，悄悄议论下哪个班的教官更帅。这些传说中的国旗班退役士兵，可都颜值爆表。</p>
<p>说好的亮点呢？</p>
<p>每天第一节课前，教官点名，叫到名字的必须立马起立，用丹田之气发出最浑厚有力的“到”。这可难为了那些公主般纤弱矜持的女孩子和高冷忧郁的小王子，往往憋的满脸通红，连喊很多次才能通过。点名都能成为阴影？！女汉子和牲口修炼的第一步。点名完毕，开始分组展现前一天的学习内容。十八般武艺同台竞技，小品相声吹拉弹唱，我有一次也被组长安排朗诵了一首自己写的诗，至今想起来都脸红啊。</p>
<p>紧锣密鼓热血澎湃的两周，以一场辩论赛和一场华丽的文艺汇演结束。辩论赛的主题依旧，正方：“干一行爱一行”，反方：“爱一行干一行”。那当然是我所在的正方赢了，公司的文化导向。重点是，我们每天晚上排练改稿到十二点以后，那个缺觉，缺觉啊！可是我后来发现，我们辩论队的其他队员居然还参加了文艺汇演，午夜继续赶场。还没进入工作状态，已经弓拔弩张。</p>
<p>培训之初，辅导员就告知了加分扣分的规则，并扬言后面百分之五是要被淘汰的。而事实是，培训尚未结束，主动离开的人都占满名额了。公司更怕你走。但是我觉得这次洗脑极其成功，把学校时的一身懒散从筋骨里扒拉出来一顿锤炼，再灌上一脑子的鸡血，从此激情满怀，一颗红心向菊花。</p>
<p>回到上研所，开始为期三个月的实习。头几天，我是逍遥自在，每天八点到公司，然后六点就闪了。没有传说中的硝烟战火和无下限的加班啊。直到周五，阿贵委婉的跟我说：“咱们周二和周四是默认加班的，实习期呢，最好每天都加，多学点”。哦哦哦，我这才醒悟过来，原来我的导师出差不在，还没人跟我讲规则呢。好吧，就此开始加班生活。</p>
<p>导师为我制定了一份三个月的学习计划，Excel表格详细列着每周的学习重点，要有输出。于是，每周一就着主题，从前辈那里收集资料，周一到周四边看边总结，周五写学习笔记。接下来的一周会安排一晚给同事分享，当然，主要是前辈提问，说白了就是检验学习效果。那三个月里，毫无疑问，我是打足了鸡血，所有材料精读总结，学习笔记详尽规范。从第二个月开始，也接手一些简单的工作，不管繁琐还是无聊，我都当做圣旨一样认真完成。然后如愿，实习期结束，转正答辩成绩A，加了500元工资，评为优秀新员工。实习之初说的百分之五淘汰率呢？大概也是人家自己拍拍屁股走了。</p>
<p>二、三招</p>
<p>经过以上两遭，有主见有门路的孩子该走的都走了。留下来的可都根正苗红：接受华为文化、吃苦耐劳，关键是也没有其他退路可选，继续在这个大熔炉里修炼，不出两年活脱脱一个“华为人”。以下简称“华为男挺尸速成绝招”：</p>
<p>第一招：断网。公司不能上外网，不能用带摄像头的手机（华为智能手机横空出世后取消了），当然那会手机上网还没有，非工作电话不能超过五分钟。于是大家唯一的娱乐，就是午休前看行政服务之窗，主要是征婚栏目，一起品评美女。那个时候华为男挺受欢迎，有女人喜欢的几个优良品质：话少钱多闷骚。于是乎，审美社交慢慢也就局限在这个小圈子里了。江湖传言：如果你有同学长期联系不到，要么是死了，要么就是在华为。言之凿凿。</p>
<p>第二招：午睡。不是趴在桌上小憩。每个人方寸大小的办公桌底下卷着铺盖，午饭过后，铺盖一拉，关灯，男男女女相邻而眠，壮观且有仪式感，想起初中在学校的桌子椅子午睡的盛况。从医学角度来讲，午睡对身体有好处。对公司而言，午睡可以保证下午精力充沛的工作，这种精力还可以延续到晚上加班。反正午睡时间是从工作时长中扣除的，何乐而不为呢。完美实现所有醒着的时间都交给公司。</p>
<p>第三招：黑布鞋。不知道大队培训的时候为什么要着正装，装B两周后，来到自己工作的办公室，傻眼了。人家都是黑衣黑裤黑布鞋，你整个西装领带白衬衣，要不是挂着工牌还真像卖房的。从此这身行头压箱子底，从此跟时尚说Byebye。身处煤坑里的为数不多的小女子我也就不动穿衣打扮的念头了。这可省了不少银子，两年逛街的次数一只手都能数过来。那个时候人家老说我看起来还像个学生，现在才反应过来，言下之意就是你好土。</p>
<p>在闭关修炼的路上，每天的日子快得只能以眼睛的一开一合来记。全身心交给了公司，学习能力也前所未有的强大。带着项目边学边干，一个人跑供应商的生产线现学现卖，在自己的领域建立起品牌人脉。这种感觉就是竹子在地下伸展根茎四年后，呼啸而出，一日冲天。累是累，但丹田有股气心中有种希望，人是绽放的。有人说这个时候的成长一年顶五年，此言不虚。转眼两年就过去了，华为男挺尸之功练成。</p>
<p>一个普通人家的孩子在华为这个平台上鸡血奋斗的一段历程。表面上沉默着、黯淡着，但是内在悄悄的收获着，也喜悦着。所以当我回首之时，心里热热的，分明看到的是青春的光彩，在暗夜里，微微的闪耀着。这也许是华为能够给予的最值得经历的一段岁月。</p>
<p>初入职场，干货分享：<br>一、谦卑，空杯。不管在学校怎样叱咤风云，初入职场，不熟悉游戏规则，不熟悉业务的情况下，多听多问少说。</p>
<p>二、工作无小事。越是简单的工作越要用心做好，这是取得信任的垫脚石。</p>
<p>三、建立关系网。把自己工作相关的自下而上的链条打通，且先施人与方便。</p>
<h2 id="看上去很美"><a href="#看上去很美" class="headerlink" title="看上去很美"></a>看上去很美</h2><p>图片故事：华为今年初大规模投放的“烂脚”广告，我们的人生，痛，并快乐着。</p>
<p>挺尸而过的两年后，小鲜肉已经形容饱满，到了最好用的时候。配股分红，收入上扬。逢鸡血未凉之时，又是信心满怀之势，大有独步武林之心。看着年终晚会上那些获得总裁金牌的同事，西装革履体面的站在光环下，自己也踌躇满志。如果故事就此发展下去，一切看起来很美！</p>
<p>就像这样的一个下午，阳光刚刚收敛锋芒，我握着一杯从华为Coffee Inn买的柠檬百花红茶，在食堂的窗边坐下，摊开纸笔……</p>
<p>眼前，一整面的玻璃窗临水而落，窗外湖光山色：层次丰富的人工湖，垂柳拂过水面，清波荡漾，湖里随意摆放着石头，任鱼儿嬉戏。湖边缓坡，青草依依，各色树木各就其位。一幢石墙木梁的茅草屋静静伏在山坡上，质朴大气。抬起头，阳光从玻璃的屋顶倾洒下来，暖暖的，柔柔的。</p>
<p>偌大的食堂异常安静。操作间在封闭的区域，看不到大厨烹饪的场景也闻不到油烟。几位阿姨在拖地，远处传来摆放餐盘的碰撞声，几十条不同风味的餐线静候人潮。Coffee Inn小小的角落有些热闹，高脚椅上倚着喝咖啡的同事，或者和客户低声交谈，或者讨论问题。</p>
<p>食堂中心的墙壁上，大幅海报张贴着P7团队的功臣照片，无线的Fellow，高级专家介绍。英气睿智，一副功成名就的光鲜。</p>
<p>第一次以旁观者的身份自外端详，心若恍然。这真的是传说中劳动密集型，盛产屌丝的大菊厂吗？如果我是一个新来的求职者，就这短短的一瞥，或许会爱上这朵菊花。如果我的身份是记者，那么这一瞥以后，文字和舆论导向会发生什么变化呢。</p>
<p>你蜻蜓点水的一瞥，看上去很美。我身居其中，看到了什么？</p>
<p>作为体力好的中流砥柱，频繁被异地研发，少则三个月，多则一年。是和妻儿分离的深深的孤独感，以及无力改变跌入深渊的自责。“再不放我回去老婆就要离婚了”也不能成为筹码，这里最不缺的就是螺丝钉；</p>
<p>担任模块负责人，每每攻关到深夜毫无头绪的无助感，以及担心来日无法交差的焦虑。没有哪个项目是按部就班完成的，抢占先机靠的就是血肉长城；</p>
<p>成为项目经理，向上，应对领导们的一句句“我只要结果”、“不要告诉我理由”。向下，厮杀在各个领域，撞开部门墙，搅动僵化的流程，这是时时处处推动扯皮的支离破碎感。每经历一个项目就是一次皮开肉绽后的重生；</p>
<p>所谓的办公位，一张大长桌十几个人，是肩并肩眼对眼而坐的尴尬和嘈杂；</p>
<p>月末周六的例行加班延伸到每周六跑来公司，永远亏欠家人一个陪伴和假期；<br>婚假拖到快过期的日子才敢开口提出，只为了给伴侣一个交代；</p>
<p>心不甘情不愿的签下“奋斗者协议”，声称自愿放弃带薪年假和加班费时的屈辱。</p>
<p>没有社交没有朋友没有内心丰盈，遗立于世的惶惑不安……</p>
<p>十六万人，十六万个不容易的故事。有爱有恨，有荣耀有失落，有成长蜕变有麻木自弃。</p>
<p>而我，也由于部门业务的拆分，开始了差不多一年的深圳生活。那是蜜月的最后一天，我在丽江，接到领导电话：直接主管调离，由我顶上。在官本位思想盛行的中国，已然是好事。于是假期一结束就奔向深圳。短短一年，经历了三任主管，业务混乱，状况层出不穷。</p>
<p>然后有一天，在上班的途中，边骑自行车边想几件急需解决的棘手的事情，在进入地下车库全是细棱角的大坡时居然没有下车，而想起刹车时发现刹车坏了。然后我就飞了出去，脸朝地降落，顿时血腥四溅。我有点手足无措的站在地库入口，保安跑过来，塞给我一大团卫生纸，然后帮我叫了出租车。素不相识的同事一个个从身边漠然而过，带着华为人典型的目不斜视的表情。自己打车去了医院，车上短信请假交代工作。清洗缝针拍片，我也终于看到了自己的面目：左半边脸几乎全是伤，缝了六针。有一处掉了块肉，没法缝，医生说让它自己长吧，留疤在所难免。再检查其他地方，手掌、胳膊、腿、肩部也有多处创伤，青一块紫一块的。</p>
<p>后来一位我十分敬重的专家讲起，他曾经有一天早上，家中有事耽误了一会，为了赶上自己主持的重要会议，车子骑得飞快，然后在转弯的时候飞了，髋骨碎了。神奇的是，在家休养一年后回来，发现原来他认为极其重要的事情还是在他手里，毫无进展。看来，我们都高估了自己的重要性了。</p>
<p>多么痛的领悟！</p>
<p>再回到题图的“烂脚”，右脚看上去很美，是柔软华贵的鞋子和优美修长的脚踝，而舞者看到的却是左脚，一对变了形的支撑物。就像朋友离开体制内去大理写作经营客栈，你看到的是洱海的湖波和惬意的午后读书时光，而朋友眼里却是主妇般的琐碎劳作和生活脱离主航道的不安。</p>
<p>任老板说：“我们除了比别人少喝咖啡，多干点儿活，其实我们不比别人有什么长处。就是因为我们起步太晚，我们成长的年限太短，积累的东西太少，我们得比别人多吃苦一点，所以我们这有一只是芭蕾脚，一只很烂的脚，我觉得就是华为的人，痛并快乐着，华为就是那么一只烂脚”。</p>
<p>罗曼.罗兰说：“人生是艰苦的。对不甘于平庸凡俗的人那是一场无日无夜的斗争，往往是悲惨的、没有光华的、没有幸福的，在孤独与静寂中展开的斗争。……他们只能依靠自己，可是有时连最强的人都不免于在苦难中蹉跎”。</p>
<p>任何一件超越平凡的事情背后，都是超乎寻常的付出。乔布斯的“只有偏执狂才能生存”，不仅自虐也虐人。富士康无比精准高效的产线，生产着奢侈电子产品的同时，也扼杀着工业时代一个个年轻孩子生命的光芒。而华为，在成长为民族自豪的路上，又践踏着多少普通人的尊严和梦想。他们却在不同的维度推动着文明的发展，丰富着人们的生活。无疑又是伟大的。</p>
<p>夕阳开始下斜，要下班了，好吧，收笔，最后一瞥窗外的惊艳。多么美好的年华，如春林初盛，春草初长，可纵是莺歌燕舞春风十里也不如你呀。前行的路上，好自珍重！</p>
<p>此文初稿于2014.8.22下午，上研所食堂</p>
<p>独挡一面、渐成中流砥柱，干货分享：<br>一、不要拿自己的身体健康当筹码，除非人命关天，否则“必须、马上”是不成立的；</p>
<p>二、察人用人，让团队里的每个人发挥特有的价值，“扬长避短”为上策；</p>
<p>三、做自己长期的职业规划，不适合就转身，机会成本还不算高。</p>
<h2 id="女汉子是怎样炼成的"><a href="#女汉子是怎样炼成的" class="headerlink" title="女汉子是怎样炼成的"></a>女汉子是怎样炼成的</h2><p>一整天的忙碌，会议、电话、问题确认、方案分析…..感觉大脑就像一个立体的交通枢纽，各种交通工具飞驰而过，危险重重又不容喘息懈怠。</p>
<p>突然抬起头，下意识的扫了眼时间，下午五点整。看着办公室里处处忙碌着的同事们，就像刚从一场耗费体力的梦中醒来，有点不真实。我站起身，试图舒展一下僵硬的肩颈，一个女同事吸引了我的目光：她正在和一群高大的男同事讨论问题，个个言辞激烈，瘦瘦小小的她站在中间，极力维持场面。总是这样的，每天的我也是在这样一个男性军团里奋战。我认真注视她的脸，这是一张枯黄的脸，没有血色，缺乏水分，脑子里突然冒出一个词，枯叶。是的，就像无数个加完班的夜晚，我在镜子里近距离看到的自己的脸一样。脸上没有任何粉饰，甚至连润肤露滋润过的痕迹都没有。也许清晨是有高级护肤品涂抹的，经过近十个小时和电脑屏幕的亲密对视，现在已然失效。这张脸除了清瘦的轮廓，扎着的马尾辫，似乎找不到其它女性特质了。我又开始注意她的衣着，中规中矩的毛衣，牛仔裤，平底皮鞋，松松垮垮，色调黯淡。没有明艳和婀娜，更谈不上时尚，跟大多数的研发女孩一样。</p>
<p>目力所及，也活动着其它女同事的身影，我行着注目礼一一扫过。一位新晋级的妈妈，正急匆匆的从水房拿了吸奶器奔进旁边的小黑屋，一个从外研所派过来的新婚燕尔的女孩，灌了一保温杯的白开水离开了。一样心事重重的眼睛，少有神采，是谁说的，就好像蒙着一层灰。哎呦，刚刚应届入职的小龙女走过，气场非凡。稚气未脱的脸上洋溢着光彩，眼里多少有点诚惶诚恐，但还是冒着光。我不禁莞尔，就像看到多年前那个鲜活的自己。</p>
<p>叮铃铃，电话响起，三分钟的走神时间结束。一边拿起电话，一边把小心脏抚慰妥帖。在狼群里混战六年，慢慢学着放过自己。但凡所发之事，一定有解，时间机缘而已。对着电话里的怒吼也好，争辩罢好，平心静气。</p>
<p>转眼，下班时间到了，办公室没有出现瞬间喧闹的景象，反正晚上不是培训就是开会，那种颤抖着小心肝等待下班的事情是没有的。如果你下定决心正常下班，那一定得捱着墙角悄悄开溜，否则拎着包的你会在楼道里在电梯间听到诸如此类的祝福：“好幸福啊，晚上不用加班”、“这么早就走了”、“回家了”……有时候挺羡慕隔离写字楼里的女孩子，踩着恨天高挤在打卡机旁，叽叽喳喳，然后相约逛街呀美食呀，一派世俗的烟火味，却也热气腾腾。而我们，走到几步之遥的公司食堂完成果腹这件事，然后接着工作。</p>
<p>记得刚入职的一天，在办公位接到一个电话，我一应声，人家就问我是不是秘书。“不是的，你为什么这么说呢”？“这个部门除了秘书都是男的呀”。我才知道，一百多人的部门，从我们那年开始，招了三个女的。此后，一批批高学历的理工女，幼时父亲怀里温柔的小情人，求学路上的学霸，前赴后继，投身到这狼性十足的雄性军团。撇去女性特质，收敛起美丽的羽翼，隐匿感性的一面，和男人一起撸起袖子扛仪器、独自海外现场调试、通宵攻关……从一个角度看，这是另一种美，我曾经深深向往的美，经济独立，和男人同工同酬，工作带娃两不误，社会戏称的女汉子。怎么听着跟大跃进时期的“铁姑娘”有点渊源呢。先生说这可是千百年来女人们自己争取的；从另一个角度看，就像今天我从梦魇中跳出来当一个旁观者，看到的是一支支花期错失阳光雨露而过早枯萎的花。</p>
<p>如果说高压工作的磨砺，给了女人一件硬朗的外壳，伪装成汉子，那么妈妈这个身份，使女汉子既成事实。研究生毕业工作个五六年，已过而立，该生孩子了。别人说一孕傻三年，我们是一孕毁三年。没时间让你傻，孕期该干啥干啥，哺乳期那是战斗着的生活。华为规定，女性自怀孕之日起三年内不配股。从此，女汉子的职业生涯急转直下。是的，孩子不在爸爸肚子里，但生出来了也是在同一个家庭里，爸爸却被真空了。妈妈可以一晚上多次哺乳哄睡，然后第二天更努力的工作，以免不被公司待见。爸爸自个在清净地方酣睡。家长会、兴趣班那也是妈妈们的天下。</p>
<p>都说女人的母性是天生的，再经过十个月孕期的亲密共振，一发不可收拾。于是，抚育幼子这事自古而今天然的落到了女人身上，即使在这个女人也同样外出狩猎的年代。而对男人来讲，那颗射中的子弹和其他的并无二致，所以父性是靠社会来培养的。一直以来的社会和职场环境只给了男人狩猎的压力，并没有做父亲的压力。自动自发的父性都不够，就在这不够里还参差不齐。女人就只能自行加血升级，炼成女汉子。随着二胎政策的放开，不知道会有多少女超人横空出世。</p>
<p>“巧笑倩兮，美目盼兮”、“含辞未吐，气若幽兰”，老祖宗笔下的女子若生活在这个时代，想必也虎虎生威了，不过怎么看着那么可爱呢！所谓伊人，即使已经修炼成了女汉子，也不妨时时窥视一下自己的内心：可是二八芳龄时，心之所往的那个人？</p>
<p>此文初稿于2012.12.12，西安研究所</p>
<p>职场妈妈，干货分享：<br>一、能享受到的假期，该请就请，不同阶段，收获不同；</p>
<p>二、如果还准备在职场打拼，孩子的吃喝拉撒能外包的就外包，有限的时间和孩子进行高效的陪伴和精神沟通；</p>
<p>三、不是你对家庭付出的越多就越好，你的快乐明媚更重要。你就是家庭的气场，先照管好自己的身心。</p>
<h2 id="你纵虐我千百遍，我亦待你如初恋"><a href="#你纵虐我千百遍，我亦待你如初恋" class="headerlink" title="你纵虐我千百遍，我亦待你如初恋"></a>你纵虐我千百遍，我亦待你如初恋</h2><p>华为心声社区上有个帖子：一句话说说你对华为的感受，排名第一的是：“Welcome to join the conference”（欢迎加入电话会议）。众望所归吧！一天24小时内，不管何时何地，只要手机开机，都有听到这个美妙声音的可能，是女士甜美又职业的声音，邀您参加不知何故的各种电话会议。</p>
<p>某周六，晚上11:50分，伺候了一天孩子的我，刚收拾完，把自己摆到床上，手机响了（忘记静音了，罪过罪过），一看号码8100，立马接通。里面响起了悦耳的“Welcome to join the conference”，接着是一群男声的争吵。版本经理：“你还记得×××吗”？“不记得了，要查文档”。“那你现在能到公司来一趟吗”？被扰了睡眠的女儿此时正在旁边撕心裂肺的哭喊。“我……”沉默了一下：“这个数据我之前邮件发给过大家了，谁在公司查看一下就可以了”。“还有谁清楚”？……沉默，实在不想拉别人下水。“这个问题今晚必须解决”。“×××”。然后，电话里传来了呼叫别人的声音，“×××，你现在马上到公司来一趟……”“嗯，现在吗？……好吧”。我挂上电话，继续安慰身边哭啼不止的女儿，心有不安。</p>
<p>华为的男人已经沦为牲口，女汉子侥幸为人，窃喜吧。</p>
<p>某周六的下午，我正独自开车载着孩子在拥挤的二环，手机响了，没接。以我开车的水平，不到红灯停车是万不敢接的。过了一会又响了，没接。第三次、第四次响起。天哪，什么十万火急的大事啊！也不顾安危了，拿起手机，8100，接通以后“Welcome to join the conference”。一个男低音响起：“我在写×××特性文档，有个地方想跟你讨论下”。“着急吗？不急的话请发个邮件，我周一处理，这会开车不方便，或者到家了我给你打过去”。“就简单问一句……巴拉巴拉”。“你这个问题我两句话说不清楚，抱歉，回去打给你”。挂电话，还是性命要紧啊。</p>
<p>华为逻辑：我加班的时候，你也在加班吧，不然也得候着！</p>
<p>此般相虐之下，说实话，能在公司待个七、八年的，那必须是真爱。不管怎样的千疮百孔，依然不离不弃。即使最终因为各种各样的原因离开了，也是满怀不舍。更何况，于职场而言，华为还真是我的初恋，虽然并非一见钟情，但我是个没啥追求的人，一旦被相中了，就死心塌地的跟着了，这一恋就是八年。忽而转身，已是貌合神离，渐行渐远。</p>
<p>此篇翻过，再无后文。这个机会我就扎扎实实总结一下：你为何如此成功，又是如何情非所愿的将我抛弃？</p>
<p>第一，老板神一样存在的感召力。八年多的基层老兵，就连远距离瞻仰老板容颜的机会也没有过，但是老人家的那张脸却深深的刻在我的脑海里，如神明一般。记得大队培训的时候，观看老板的讲话视频，活生生一部英雄举重若轻的史诗。然后每人发了一本老板的文集，“华为的冬天”、“我的父亲母亲”等等，笔力洗练简洁又不乏侠骨柔肠，有力道有内涵，让我这个文青崇拜不已。之后每逢岁末或是变革，老板定会书文，指点江山，激扬文字。只要看到老板的文字，就能感受到华为热气腾腾的心跳，华为生命力正旺，老人家眼力正毒，华为大船航道很正。心里满满的安全感。</p>
<p>第二，执行力。上面的两件小事可管中窥豹。多年以来自上而下一脉相承，带着军队的色彩。比如项目变动，大领导会立刻电话给分管的领导，分管的领导再找到责任主管，然后一层层传递到具体的执行人员，往往就是半个小时的事。于是，周末接到主管电话，交代下周一急需处理的事情很常见。我们响应快、效率高，对外深得客户喜欢；但也经常虚惊一场，对内给人的感觉是，领导们闻风而动，甚至草木皆兵。而这种执行力到了基层，往往还要用过头。自称炮灰的基层员工似乎成了成全领导业绩或者产品成功的机器，被用到没有尊严。“忍狠滚”法则顺势而生，基层员工一面隐忍，一面在有机会走上管理层后，更用力的效仿“狠”术，这简直就是职业通道晋升的不二法宝。简单粗暴成风。</p>
<p>第三，团体作战。这是一幅群狼共舞的画卷，势如破竹。常规项目，自运作之日起组成联合舰队，封闭起来头脑风暴，协作开发，头狼拥有绝对的领导权。遇上突发或重量级项目，人力和资源分分钟到位，豪华顶配。接下来就是不眠不休的混战。于是战无不胜攻无不克的神话，对于这个时刻都处于一级战备状态的狼群来说，毫不意外。去年，三星中国撤掉一些研发中心，被裁人员说到以后的出路时笑称：“归顺大华为”。</p>
<p>第四，流程。保证了运作的稳定性，产品的可靠性，缺谁都可以，每个环节的人在上层看来就是流水线上的螺丝钉。这是工业文明发展的必经之路，而我们的文化，却还蒙昧在官本位，管人比做技术有钱途，基层研发人员囿于一隅，却不能沉淀下来深耕，躁动又压抑着。自称研发狗，把公司称为脑力劳动密集型的大菊厂。我“司”改我“厂”，一把辛酸泪。</p>
<p>第五，物质刺激。对付屌丝有奇效。我们多数人来自农村或者小城市，曾经埋头苦读，现在吃苦耐劳，物质上缺乏安全感。就智力见解来讲，我们来自985和211，以西交大、西工大、西电、成电、哈工大居多。也就是说，我们不是最拔尖的一茬，那一茬已经被北大清华收获，毕业后由麦肯锡、四大、微软谷歌等知名外企收割。我们是次高的一茬，卑微的认定了自己的宿命。华为给予的物质刺激，在我们初步建立经济基础阶段，起着至关重要的作用，七到八年，跻身中产阶级，在一线城市站稳脚跟。傍着大船，闷在船舱，很多人就此不再扑闪，一门心思待下去。</p>
<p>第六、折腾。官方术语：艰苦奋斗。再形象点，就是长勺一直在华为的大锅里搅动，谁都别想安分。再或者说大老虎在狼群里追赶，谁都不敢停下喘息。在这里，你别妄想着找到一个又有钱又有闲的位置，然后老婆孩子热炕头的欢乐下去。舒服了会打瞌睡，会丧失斗志，所以稍有苗头就变革。不管是CEO轮值，地区部总裁平调，还是产品线合并重构，又及考评体系变革，无一不是为了人人不爽。为了保持新鲜血液，规避劳动法的十五年终身服役，员工满八年离职重新入职。薪酬体系，工作时间越长固定工资占总收入的比例越低，谁心里都清楚，除了工资，其他收入都是靠绩效获得的，好的绩效从哪里来呢？智力相差不大的时候，那就拼体力拼命吧。</p>
<p>记得工作的头四年，一到周日下午整个人就开始神经质，心跳加快，心神不安，因为宝贵的周末要结束了，接下来的工作就像巨石压在心头。到后来的麻木，因为习惯而麻木，这比当初的神经质更可怕。我心里明白，麻木的时候就是爱已疲劳了。八年多来，活得太用力。爱已淡，身已倦。</p>
<p>罗曼.罗兰说：“世界上只有一种真正的英雄主义，就是在认清生活真相之后仍然热爱生活”。大浪淘沙，向留下来的英雄们致以深深的敬意！</p>
<p>而我，就此别过。 </p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;作者简介：理工女硕，应届华为8年半，目前已经离开一年有余。&lt;br&gt;本文首发于个人公众号：末末书屋&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文章分了五个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;毕业了（为什么离开）&lt;/li&gt;
&lt;li&gt;那些挺尸而过的鸡血岁月（1~2年）&lt;/li&gt;
&lt;li&gt;看上去很美（3~4年）&lt;/li&gt;
&lt;li&gt;女汉子是怎样炼成的（5~6年）&lt;/li&gt;
&lt;li&gt;你纵虐我千百遍，我亦待你如初恋（7~8年）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一年前的十月，我离开了华为，不咸不淡。这个十月，和我一同入职的先生也离开了，心里的五味杂陈却异常凶猛的翻涌起来。过去的一年里，我还是称华为我们公司，因为我还是华为家属，生活里依然弥漫着熟悉的华为味道，还有机会在上研所美丽的园区溜达。可是从此以后，就真的和这里没有关系了，真真的告别了。于是提起笔，整理此刻的情绪和之前在华为的种种，留作纪念。&lt;/p&gt;
&lt;p&gt;青春的纪念，家庭的纪念，一种生活方式的纪念。
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="感言" scheme="http://i90s.vip/tags/%E6%84%9F%E8%A8%80/"/>
    
      <category term="华为" scheme="http://i90s.vip/tags/%E5%8D%8E%E4%B8%BA/"/>
    
      <category term="离职" scheme="http://i90s.vip/tags/%E7%A6%BB%E8%81%8C/"/>
    
  </entry>
  
  <entry>
    <title>理解矩阵</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/15/%E7%90%86%E8%A7%A3%E7%9F%A9%E9%98%B5.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/15/理解矩阵.html</id>
    <published>2019-11-15T13:44:32.000Z</published>
    <updated>2019-12-01T09:44:45.036Z</updated>
    
    <content type="html"><![CDATA[<p>前不久chensh出于不可告人的目的，要充当老师，教别人线性代数。于是我被揪住就线性代数中一些务虚性的问题与他讨论了几次。很明显，chensh觉得，要让自己在讲线性代数的时候不被那位强势的学生认为是神经病，还是比较难的事情。</p>
<p>可怜的chensh，谁让你趟这个地雷阵？！色令智昏啊！<br><a id="more"></a></p>
<p>线性代数课程，无论你从行列式入手还是直接从矩阵入手，从一开始就充斥着莫名其妙。比如说，在全国一般工科院系教学中应用最广泛的同济线性代数教材（现在到了第四版），一上来就介绍逆序数这个“前无古人，后无来者”的古怪概念，然后用逆序数给出行列式的一个极不直观的定义，接着是一些简直犯傻的行列式性质和习题——把这行乘一个系数加到另一行上，再把那一列减过来，折腾得那叫一个热闹，可就是压根看不出这个东西有嘛用。大多数像我一样资质平庸的学生到这里就有点犯晕：连这是个什么东西都模模糊糊的，就开始钻火圈表演了，这未免太“无厘头”了吧！于是开始有人逃课，更多的人开始抄作业。这下就中招了，因为其后的发展可以用一句峰回路转来形容，紧跟着这个无厘头的行列式的，是一个同样无厘头但是伟大的无以复加的家伙的出场——矩阵来了！多年之后，我才明白，当老师犯傻似地用中括号把一堆傻了吧叽的数括起来，并且不紧不慢地说：“这个东西叫做矩阵”的时候，我的数学生涯掀开了何等悲壮辛酸、惨绝人寰的一幕！自那以后，在几乎所有跟“学问”二字稍微沾点边的东西里，矩阵这个家伙从不缺席。对于我这个没能一次搞定线性代数的笨蛋来说，矩阵老大的不请自来每每搞得我灰头土脸，头破血流。长期以来，我在阅读中一见矩阵，就如同阿Q见到了假洋鬼子，揉揉额角就绕道走。</p>
<p>事实上，我并不是特例。一般工科学生初学线性代数，通常都会感到困难。这种情形在国内外皆然。瑞典数学家Lars Garding在其名著Encounter with Mathematics中说：“如果不熟悉线性代数的概念，要去学习自然科学，现在看来就和文盲差不多。”，然而“按照现行的国际标准，线性代数是通过公理化来表述的，它是第二代数学模型，…，这就带来了教学上的困难。”事实上，当我们开始学习线性代数的时候，不知不觉就进入了“第二代数学模型”的范畴当中，这意味着数学的表述方式和抽象性有了一次全面的进化，对于从小一直在“第一代数学模型”，即以实用为导向的、具体的数学模型中学习的我们来说，在没有并明确告知的情况下进行如此剧烈的paradigm shift，不感到困难才是奇怪的。</p>
<p>大部分工科学生，往往是在学习了一些后继课程，如数值分析、数学规划、矩阵论之后，才逐渐能够理解和熟练运用线性代数。即便如此，不少人即使能够很熟练地以线性代数为工具进行科研和应用工作，但对于很多这门课程的初学者提出的、看上去是很基础的问题却并不清楚。比如说：</p>
<ul>
<li><p>矩阵究竟是什么东西？向量可以被认为是具有n个相互独立的性质（维度）的对象的表示，矩阵又是什么呢？我们如果认为矩阵是一组列（行）向量组成的新的复合向量的展开式，那么为什么这种展开式具有如此广泛的应用？特别是，为什么偏偏二维的展开式如此有用？如果矩阵中每一个元素又是一个向量，那么我们再展开一次，变成三维的立方阵，是不是更有用？</p>
</li>
<li><p>矩阵的乘法规则究竟为什么这样规定？为什么这样一种怪异的乘法规则却能够在实践中发挥如此巨大的功效？很多看上去似乎是完全不相关的问题，最后竟然都归结到矩阵的乘法，这难道不是很奇妙的事情？难道在矩阵乘法那看上去莫名其妙的规则下面，包含着世界的某些本质规律？如果是的话，这些本质规律是什么？</p>
</li>
<li><p>行列式究竟是一个什么东西？为什么会有如此怪异的计算规则？行列式与其对应方阵本质上是什么关系？为什么只有方阵才有对应的行列式，而一般矩阵就没有（不要觉得这个问题很蠢，如果必要，针对m x n矩阵定义行列式不是做不到的，之所以不做，是因为没有这个必要，但是为什么没有这个必要）？而且，行列式的计算规则，看上去跟矩阵的任何计算规则都没有直观的联系，为什么又在很多方面决定了矩阵的性质？难道这一切仅是巧合？</p>
</li>
<li><p>矩阵为什么可以分块计算？分块计算这件事情看上去是那么随意，为什么竟是可行的？</p>
</li>
<li><p>对于矩阵转置运算AT，有(AB)T = BTAT，对于矩阵求逆运算A-1，有(AB)-1 = B-1A-1。两个看上去完全没有什么关系的运算，为什么有着类似的性质？这仅仅是巧合吗？</p>
</li>
<li><p>为什么说P-1AP得到的矩阵与A矩阵“相似”？这里的“相似”是什么意思？</p>
</li>
<li><p>特征值和特征向量的本质是什么？它们定义就让人很惊讶，因为Ax =λx，一个诺大的矩阵的效应，竟然不过相当于一个小小的数λ，确实有点奇妙。但何至于用“特征”甚至“本征”来界定？它们刻划的究竟是什么？</p>
</li>
</ul>
<p>这样的一类问题，经常让使用线性代数已经很多年的人都感到为难。就好像大人面对小孩子的刨根问底，最后总会迫不得已地说“就这样吧，到此为止”一样，面对这样的问题，很多老手们最后也只能用：“就是这么规定的，你接受并且记住就好”来搪塞。然而，这样的问题如果不能获得回答，线性代数对于我们来说就是一个粗暴的、不讲道理的、莫名其妙的规则集合，我们会感到，自己并不是在学习一门学问，而是被不由分说地“抛到”一个强制的世界中，只是在考试的皮鞭挥舞之下被迫赶路，全然无法领略其中的美妙、和谐与统一。直到多年以后，我们已经发觉这门学问如此的有用，却仍然会非常迷惑：怎么这么凑巧？</p>
<p>我认为，这是我们的线性代数教学中直觉性丧失的后果。上述这些涉及到“如何能”、“怎么会”的问题，仅仅通过纯粹的数学证明来回答，是不能令提问者满意的。比如，如果你通过一般的证明方法论证了矩阵分块运算确实可行，那么这并不能够让提问者的疑惑得到解决。他们真正的困惑是：矩阵分块运算为什么竟然是可行的？究竟只是凑巧，还是说这是由矩阵这种对象的某种本质所必然决定的？如果是后者，那么矩阵的这些本质是什么？只要对上述那些问题稍加考虑，我们就会发现，所有这些问题都不是单纯依靠数学证明所能够解决的。像我们的教科书那样，凡事用数学证明，最后培养出来的学生，只能熟练地使用工具，却欠缺真正意义上的理解。</p>
<p>自从1930年代法国布尔巴基学派兴起以来，数学的公理化、系统性描述已经获得巨大的成功，这使得我们接受的数学教育在严谨性上大大提高。然而数学公理化的一个备受争议的副作用，就是一般数学教育中直觉性的丧失。数学家们似乎认为直觉性与抽象性是矛盾的，因此毫不犹豫地牺牲掉前者。然而包括我本人在内的很多人都对此表示怀疑，我们不认为直觉性与抽象性一定相互矛盾，特别是在数学教育中和数学教材中，帮助学生建立直觉，有助于它们理解那些抽象的概念，进而理解数学的本质。反之，如果一味注重形式上的严格性，学生就好像被迫进行钻火圈表演的小白鼠一样，变成枯燥的规则的奴隶。</p>
<p>对于线性代数的类似上述所提到的一些直觉性的问题，两年多来我断断续续地反复思考了四、五次，为此阅读了好几本国内外线性代数、数值分析、代数和数学通论性书籍，其中像前苏联的名著《数学：它的内容、方法和意义》、龚升教授的《线性代数五讲》、前面提到的Encounter with Mathematics（《数学概观》）以及Thomas A. Garrity的《数学拾遗》都给我很大的启发。不过即使如此，我对这个主题的认识也经历了好几次自我否定。比如以前思考的一些结论曾经写在自己的blog里，但是现在看来，这些结论基本上都是错误的。因此打算把自己现在的有关理解比较完整地记录下来，一方面是因为我觉得现在的理解比较成熟了，可以拿出来与别人探讨，向别人请教。另一方面，如果以后再有进一步的认识，把现在的理解给推翻了，那现在写的这个snapshot也是很有意义的。</p>
<p>因为打算写得比较多，所以会分几次慢慢写。也不知道是不是有时间慢慢写完整，会不会中断，写着看吧。</p>
<hr>
<p>今天先谈谈对线形空间和矩阵的几个核心概念的理解。这些东西大部分是凭着自己的理解写出来的，基本上不抄书，可能有错误的地方，希望能够被指出。但我希望做到直觉，也就是说能把数学背后说的实质问题说出来。</p>
<p>首先说说空间(space)，这个概念是现代数学的命根子之一，从拓扑空间开始，一步步往上加定义，可以形成很多空间。线形空间其实还是比较初级的，如果在里面定义了范数，就成了赋范线性空间。赋范线性空间满足完备性，就成了巴那赫空间；赋范线性空间中定义角度，就有了内积空间，内积空间再满足完备性，就得到希尔伯特空间。</p>
<p>总之，空间有很多种。你要是去看某种空间的数学定义，大致都是“存在一个集合，在这个集合上定义某某概念，然后满足某些性质”，就可以被称为空间。这未免有点奇怪，为什么要用“空间”来称呼一些这样的集合呢？大家将会看到，其实这是很有道理的。</p>
<p>我们一般人最熟悉的空间，毫无疑问就是我们生活在其中的（按照牛顿的绝对时空观）的三维空间，从数学上说，这是一个三维的欧几里德空间，我们先不管那么多，先看看我们熟悉的这样一个空间有些什么最基本的特点。仔细想想我们就会知道，这个三维的空间：1. 由很多（实际上是无穷多个）位置点组成；2. 这些点之间存在相对的关系；3. 可以在空间中定义长度、角度；4. 这个空间可以容纳运动，这里我们所说的运动是从一个点到另一个点的移动（变换），而不是微积分意义上的“连续”性的运动，</p>
<p>上面的这些性质中，最最关键的是第4条。第1、2条只能说是空间的基础，不算是空间特有的性质，凡是讨论数学问题，都得有一个集合，大多数还得在这个集合上定义一些结构（关系），并不是说有了这些就算是空间。而第3条太特殊，其他的空间不需要具备，更不是关键的性质。只有第4条是空间的本质，也就是说，容纳运动是空间的本质特征。</p>
<p>认识到了这些，我们就可以把我们关于三维空间的认识扩展到其他的空间。事实上，不管是什么空间，都必须容纳和支持在其中发生的符合规则的运动（变换）。你会发现，在某种空间中往往会存在一种相对应的变换，比如拓扑空间中有拓扑变换，线性空间中有线性变换，仿射空间中有仿射变换，其实这些变换都只不过是对应空间中允许的运动形式而已。</p>
<p>因此只要知道，“空间”是容纳运动的一个对象集合，而变换则规定了对应空间的运动。</p>
<p>下面我们来看看线性空间。线性空间的定义任何一本书上都有，但是既然我们承认线性空间是个空间，那么有两个最基本的问题必须首先得到解决，那就是：</p>
<ol>
<li><p>空间是一个对象集合，线性空间也是空间，所以也是一个对象集合。那么线性空间是什么样的对象的集合？或者说，线性空间中的对象有什么共同点吗？</p>
</li>
<li><p>线性空间中的运动如何表述的？也就是，线性变换是如何表示的？</p>
</li>
</ol>
<p>我们先来回答第一个问题，回答这个问题的时候其实是不用拐弯抹角的，可以直截了当的给出答案。线性空间中的任何一个对象，通过选取基和坐标的办法，都可以表达为向量的形式。通常的向量空间我就不说了，举两个不那么平凡的例子：</p>
<p>L1. 最高次项不大于n次的多项式的全体构成一个线性空间，也就是说，这个线性空间中的每一个对象是一个多项式。如果我们以x0, x1, …, xn为基，那么任何一个这样的多项式都可以表达为一组n+1维向量，其中的每一个分量ai其实就是多项式中x(i-1)项的系数。值得说明的是，基的选取有多种办法，只要所选取的那一组基线性无关就可以。这要用到后面提到的概念了，所以这里先不说，提一下而已。</p>
<p>L2. 闭区间[a, b]上的n阶连续可微函数的全体，构成一个线性空间。也就是说，这个线性空间的每一个对象是一个连续函数。对于其中任何一个连续函数，根据魏尔斯特拉斯定理，一定可以找到最高次项不大于n的多项式函数，使之与该连续函数的差为0，也就是说，完全相等。这样就把问题归结为L1了。后面就不用再重复了。</p>
<p>所以说，向量是很厉害的，只要你找到合适的基，用向量可以表示线性空间里任何一个对象。这里头大有文章，因为向量表面上只是一列数，但是其实由于它的有序性，所以除了这些数本身携带的信息之外，还可以在每个数的对应位置上携带信息。为什么在程序设计中数组最简单，却又威力无穷呢？根本原因就在于此。这是另一个问题了，这里就不说了。</p>
<p>下面来回答第二个问题，这个问题的回答会涉及到线性代数的一个最根本的问题。</p>
<p>线性空间中的运动，被称为线性变换。也就是说，你从线性空间中的一个点运动到任意的另外一个点，都可以通过一个线性变化来完成。那么，线性变换如何表示呢？很有意思，在线性空间中，当你选定一组基之后，不仅可以用一个向量来描述空间中的任何一个对象，而且可以用矩阵来描述该空间中的任何一个运动（变换）。而使某个对象发生对应运动的方法，就是用代表那个运动的矩阵，乘以代表那个对象的向量。</p>
<p>简而言之，在线性空间中选定基之后，向量刻画对象，矩阵刻画对象的运动，用矩阵与向量的乘法施加运动。</p>
<p>是的，矩阵的本质是运动的描述。如果以后有人问你矩阵是什么，那么你就可以响亮地告诉他，矩阵的本质是运动的描述。（chensh，说你呢！）</p>
<p>可是多么有意思啊，向量本身不是也可以看成是n x 1矩阵吗？这实在是很奇妙，一个空间中的对象和运动竟然可以用相类同的方式表示。能说这是巧合吗？如果是巧合的话，那可真是幸运的巧合！可以说，线性代数中大多数奇妙的性质，均与这个巧合有直接的关系</p>
<p>上一篇里说“矩阵是运动的描述”，到现在为止，好像大家都还没什么意见。但是我相信早晚会有数学系出身的网友来拍板转。因为运动这个概念，在数学和物理里是跟微积分联系在一起的。我们学习微积分的时候，总会有人照本宣科地告诉你，初等数学是研究常量的数学，是研究静态的数学，高等数学是变量的数学，是研究运动的数学。大家口口相传，差不多人人都知道这句话。但是真知道这句话说的是什么意思的人，好像也不多。简而言之，在我们人类的经验里，运动是一个连续过程，从A点到B点，就算走得最快的光，也是需要一个时间来逐点地经过AB之间的路径，这就带来了连续性的概念。而连续这个事情，如果不定义极限的概念，根本就解释不了。古希腊人的数学非常强，但就是缺乏极限观念，所以解释不了运动，被芝诺的那些著名悖论（飞箭不动、飞毛腿阿喀琉斯跑不过乌龟等四个悖论）搞得死去活来。因为这篇文章不是讲微积分的，所以我就不多说了。有兴趣的读者可以去看看齐民友教授写的《重温微积分》。我就是读了这本书开头的部分，才明白“高等数学是研究运动的数学”这句话的道理。</p>
<p>不过在我这个《理解矩阵》的文章里，“运动”的概念不是微积分中的连续性的运动，而是瞬间发生的变化。比如这个时刻在A点，经过一个“运动”，一下子就“跃迁”到了B点，其中不需要经过A点与B点之间的任何一个点。这样的“运动”，或者说“跃迁”，是违反我们日常的经验的。不过了解一点量子物理常识的人，就会立刻指出，量子（例如电子）在不同的能量级轨道上跳跃，就是瞬间发生的，具有这样一种跃迁行为。所以说，自然界中并不是没有这种运动现象，只不过宏观上我们观察不到。但是不管怎么说，“运动”这个词用在这里，还是容易产生歧义的，说得更确切些，应该是“跃迁”。因此这句话可以改成：</p>
<p>“矩阵是线性空间里跃迁的描述”。</p>
<p>可是这样说又太物理，也就是说太具体，而不够数学，也就是说不够抽象。因此我们最后换用一个正牌的数学术语——变换，来描述这个事情。这样一说，大家就应该明白了，所谓变换，其实就是空间里从一个点（元素/对象）到另一个点（元素/对象）的跃迁。比如说，拓扑变换，就是在拓扑空间里从一个点到另一个点的跃迁。再比如说，仿射变换，就是在仿射空间里从一个点到另一个点的跃迁。附带说一下，这个仿射空间跟向量空间是亲兄弟。做计算机图形学的朋友都知道，尽管描述一个三维对象只需要三维向量，但所有的计算机图形学变换矩阵都是4 x 4的。说其原因，很多书上都写着“为了使用中方便”，这在我看来简直就是企图蒙混过关。真正的原因，是因为在计算机图形学里应用的图形变换，实际上是在仿射空间而不是向量空间中进行的。想想看，在向量空间里相一个向量平行移动以后仍是相同的那个向量，而现实世界等长的两个平行线段当然不能被认为同一个东西，所以计算机图形学的生存空间实际上是仿射空间。而仿射变换的矩阵表示根本就是4 x 4的。又扯远了，有兴趣的读者可以去看《计算机图形学——几何工具算法详解》。</p>
<p>一旦我们理解了“变换”这个概念，矩阵的定义就变成：</p>
<p>“矩阵是线性空间里的变换的描述。”</p>
<p>到这里为止，我们终于得到了一个看上去比较数学的定义。不过还要多说几句。教材上一般是这么说的，在一个线性空间V里的一个线性变换T，当选定一组基之后，就可以表示为矩阵。因此我们还要说清楚到底什么是线性变换，什么是基，什么叫选定一组基。线性变换的定义是很简单的，设有一种变换T，使得对于线性空间V中间任何两个不相同的对象x和y，以及任意实数a和b，有：<br>T(ax + by) = aT(x) + bT(y)，<br>那么就称T为线性变换。</p>
<p>定义都是这么写的，但是光看定义还得不到直觉的理解。线性变换究竟是一种什么样的变换？我们刚才说了，变换是从空间的一个点跃迁到另一个点，而线性变换，就是从一个线性空间V的某一个点跃迁到另一个线性空间W的另一个点的运动。这句话里蕴含着一层意思，就是说一个点不仅可以变换到同一个线性空间中的另一个点，而且可以变换到另一个线性空间中的另一个点去。不管你怎么变，只要变换前后都是线性空间中的对象，这个变换就一定是线性变换，也就一定可以用一个非奇异矩阵来描述。而你用一个非奇异矩阵去描述的一个变换，一定是一个线性变换。有的人可能要问，这里为什么要强调非奇异矩阵？所谓非奇异，只对方阵有意义，那么非方阵的情况怎么样？这个说起来就会比较冗长了，最后要把线性变换作为一种映射，并且讨论其映射性质，以及线性变换的核与像等概念才能彻底讲清楚。我觉得这个不算是重点，如果确实有时间的话，以后写一点。以下我们只探讨最常用、最有用的一种变换，就是在同一个线性空间之内的线性变换。也就是说，下面所说的矩阵，不作说明的话，就是方阵，而且是非奇异方阵。学习一门学问，最重要的是把握主干内容，迅速建立对于这门学问的整体概念，不必一开始就考虑所有的细枝末节和特殊情况，自乱阵脚。</p>
<p>接着往下说，什么是基呢？这个问题在后面还要大讲一番，这里只要把基看成是线性空间里的坐标系就可以了。注意是坐标系，不是坐标值，这两者可是一个“对立矛盾统一体”。这样一来，“选定一组基”就是说在线性空间里选定一个坐标系。就这意思。</p>
<p>好，最后我们把矩阵的定义完善如下：</p>
<p>“矩阵是线性空间中的线性变换的一个描述。在一个线性空间中，只要我们选定一组基，那么对于任何一个线性变换，都能够用一个确定的矩阵来加以描述。”</p>
<p>理解这句话的关键，在于把“线性变换”与“线性变换的一个描述”区别开。一个是那个对象，一个是对那个对象的表述。就好像我们熟悉的面向对象编程中，一个对象可以有多个引用，每个引用可以叫不同的名字，但都是指的同一个对象。如果还不形象，那就干脆来个很俗的类比。</p>
<p>比如有一头猪，你打算给它拍照片，只要你给照相机选定了一个镜头位置，那么就可以给这头猪拍一张照片。这个照片可以看成是这头猪的一个描述，但只是一个片面的的描述，因为换一个镜头位置给这头猪拍照，能得到一张不同的照片，也是这头猪的另一个片面的描述。所有这样照出来的照片都是这同一头猪的描述，但是又都不是这头猪本身。</p>
<p>同样的，对于一个线性变换，只要你选定一组基，那么就可以找到一个矩阵来描述这个线性变换。换一组基，就得到一个不同的矩阵。所有这些矩阵都是这同一个线性变换的描述，但又都不是线性变换本身。</p>
<p>但是这样的话，问题就来了如果你给我两张猪的照片，我怎么知道这两张照片上的是同一头猪呢？同样的，你给我两个矩阵，我怎么知道这两个矩阵是描述的同一个线性变换呢？如果是同一个线性变换的不同的矩阵描述，那就是本家兄弟了，见面不认识，岂不成了笑话。</p>
<p>好在，我们可以找到同一个线性变换的矩阵兄弟们的一个性质，那就是：</p>
<p>若矩阵A与B是同一个线性变换的两个不同的描述（之所以会不同，是因为选定了不同的基，也就是选定了不同的坐标系），则一定能找到一个非奇异矩阵P，使得A、B之间满足这样的关系：</p>
<p>A = P-1BP</p>
<p>线性代数稍微熟一点的读者一下就看出来，这就是相似矩阵的定义。没错，所谓相似矩阵，就是同一个线性变换的不同的描述矩阵。按照这个定义，同一头猪的不同角度的照片也可以成为相似照片。俗了一点，不过能让人明白。</p>
<p>而在上面式子里那个矩阵P，其实就是A矩阵所基于的基与B矩阵所基于的基这两组基之间的一个变换关系。关于这个结论，可以用一种非常直觉的方法来证明（而不是一般教科书上那种形式上的证明），如果有时间的话，我以后在blog里补充这个证明。</p>
<p>这个发现太重要了。原来一族相似矩阵都是同一个线性变换的描述啊！难怪这么重要！工科研究生课程中有矩阵论、矩阵分析等课程，其中讲了各种各样的相似变换，比如什么相似标准型，对角化之类的内容，都要求变换以后得到的那个矩阵与先前的那个矩阵式相似的，为什么这么要求？因为只有这样要求，才能保证变换前后的两个矩阵是描述同一个线性变换的。当然，同一个线性变换的不同矩阵描述，从实际运算性质来看并不是不分好环的。有些描述矩阵就比其他的矩阵性质好得多。这很容易理解，同一头猪的照片也有美丑之分嘛。所以矩阵的相似变换可以把一个比较丑的矩阵变成一个比较美的矩阵，而保证这两个矩阵都是描述了同一个线性变换。</p>
<p>这样一来，矩阵作为线性变换描述的一面，基本上说清楚了。但是，事情没有那么简单，或者说，线性代数还有比这更奇妙的性质，那就是，矩阵不仅可以作为线性变换的描述，而且可以作为一组基的描述。而作为变换的矩阵，不但可以把线性空间中的一个点给变换到另一个点去，而且也能够把线性空间中的一个坐标系（基）表换到另一个坐标系（基）去。而且，变换点与变换坐标系，具有异曲同工的效果。线性代数里最有趣的奥妙，就蕴含在其中。理解了这些内容，线性代数里很多定理和规则会变得更加清晰、直觉.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前不久chensh出于不可告人的目的，要充当老师，教别人线性代数。于是我被揪住就线性代数中一些务虚性的问题与他讨论了几次。很明显，chensh觉得，要让自己在讲线性代数的时候不被那位强势的学生认为是神经病，还是比较难的事情。&lt;/p&gt;
&lt;p&gt;可怜的chensh，谁让你趟这个地雷阵？！色令智昏啊！&lt;br&gt;
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="矩阵" scheme="http://i90s.vip/tags/%E7%9F%A9%E9%98%B5/"/>
    
      <category term="线性代数" scheme="http://i90s.vip/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>如果让我重读一次研究生————王泛森院士</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/14/%E5%A6%82%E6%9E%9C%E8%AE%A9%E6%88%91%E9%87%8D%E8%AF%BB%E4%B8%80%E6%AC%A1%E7%A0%94%E7%A9%B6%E7%94%9F.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/14/如果让我重读一次研究生.html</id>
    <published>2019-11-14T08:00:37.000Z</published>
    <updated>2019-12-01T09:43:37.057Z</updated>
    
    <content type="html"><![CDATA[<h2 id="研究生与大学生的区别"><a href="#研究生与大学生的区别" class="headerlink" title="研究生与大学生的区别"></a>研究生与大学生的区别</h2><p>首先跟大家说明一下研究生和大学生的区别。大学生基本上是来接受学问、接受知识的，然而不管是对于硕士时期或是博士时期的研究而言，都应该准备要开始制造新的知识，我们在美国得到博士学位时都会领到看不懂的毕业证书，在一个偶然的机会下，我问了一位懂拉丁文的人，上面的内容为何？他告诉我：「里头写的是恭喜你对人类的知识有所创新，因此授予你这个学位。」在中国原本并没有博硕士的学历，但是在西方他们原来的用意是，恭贺你已经对人类普遍的知识有所创新，这个创新或大或小，都是对于普遍的知识有所贡献。这个创新不会因为你做本土与否而有所不同，所以第一个我们必须要很用心、很深刻的思考，大学生和研究生是不同的。<br><a id="more"></a></p>
<h3 id="选择自己的问题取向，学会创新"><a href="#选择自己的问题取向，学会创新" class="headerlink" title="选择自己的问题取向，学会创新"></a>选择自己的问题取向，学会创新</h3><p>你一旦是研究生，你就已经进入另一个阶段，不只是要完全乐在其中，更要从而接受各种有趣的知识，进入制造知识的阶段，也就是说你的论文应该有所创新。由接受知识到创造知识，是身为一个研究生最大的特色，不仅如此，还要体认自己不再是个容器，等着老师把某些东西倒在茶杯里，而是要开始逐步发展和开发自己。做为研究生不再是对于各种新奇的课照单全收，而是要重视问题取向的安排，就是在硕士或博士的阶段里面，所有的精力、所有修课以及读的书里面都应该要有一个关注的焦点，而不能像大学那般漫无目标。大学生时代是因为你要尽量开创自己接受任何东西，但是到了硕士生和博士生，有一个最终的目的，就是要完成论文，那篇论文是你个人所有武功的总集合，所以这时候必须要有个问题取向的学习。 </p>
<h3 id="尝试跨领域研究，主动学习"><a href="#尝试跨领域研究，主动学习" class="headerlink" title="尝试跨领域研究，主动学习"></a>尝试跨领域研究，主动学习</h3><p>提出一个重要的问题，跨越一个重要的领域，将决定你未来的成败。我也在台大和清华教了十几年的课，我常常跟学生讲，选对一个领域和选对一个问题是成败的关键，而你自己本身必须是带着问题来探究无限的学问世界，因为你不再像大学时代一样泛滥无所归。所以这段时间内，必须选定一个自己有兴趣及关注的主题为出发点，来探究这些知识，产生有机的循环。由于你是自发性的对这个问题产生好奇和兴趣，所以你的态度和大学部的学生是截然不同的，你慢慢从被动的接受者变成是一个主动的探索者，并学会悠游在这学术的领域。<br>我举一个例子，我们的中央研究院院长李远哲先生，得了诺贝尔奖。他曾经在中研院的周报写过几篇文章，在他的言论集里面，或许各位也可以看到，他反复提到他的故事。他是因为读了一个叫做马亨教授的教科书而去美国柏克莱大学念书，去了以后才发现，这个老师只给他一张支票，跟他说你要花钱你尽量用，但是从来不教他任何东西。可是隔壁那个教授，老师教很多，而且每天学生都是跟着老师学习。他有一次就跟那个老师抱怨：「那你为什么不教我点东西呢？」那个老师就说：「如果我知道结果，那我要你来这边念书做什么？我就是因为不知道，所以要我们共同探索一个问题、一个未知的领域。」他说其实这两种教法都有用处，但是他自己从这个什么都不教他，永远碰到他只问他「有没有什么新发现」的老师身上，得到很大的成长。所以这两方面都各自蕴含深层的道理，没有所谓的好坏，但是最好的方式就是将这两个方式结合起来。我为什么讲这个故事呢？就是强调在这个阶段，学习是一种「 self-help 」，并且是在老师的引导下学习「 self-help 」，而不能再像大学时代般，都是纯粹用听的，这个阶段的学习要基于对研究问题的好奇和兴趣，要怀着一颗热忱的心来探索这个领域。<br>然而研究生另外一个重要的阶段就是 Learn how to learn ，不只是学习而已，而是学习如何学习，不再是要去买一件很漂亮的衣服，而是要学习拿起那一根针，学会绣出一件漂亮的衣服，慢慢学习把目标放在一个标准上，而这一个标准就是你将来要完成硕士或博士论文。如果你到西方一流的大学去读书，你会觉得我这一篇论文可能要和全世界做同一件问题的人相比较。我想即使在台湾也应该要有这样的心情，你的标准不能单单只是放在旁边几个人而已，而应该是要放在领域的普遍人里面。你这篇文章要有新的东西，才算达到的标准，也才符合到我们刚刚讲到那张拉丁文的博士证书上面所讲的，有所贡献与创新。 </p>
<h2 id="一个老师怎么训练研究生"><a href="#一个老师怎么训练研究生" class="headerlink" title="一个老师怎么训练研究生"></a>一个老师怎么训练研究生</h2><p>第二个，身为老师你要怎么训练研究生。我认为人文科学和社会科学的训练，哪怕是自然科学的训练，到研究生阶段应该更像师徒制，所以来自个人和老师、个人和同侪间密切的互动和学习是非常重要的，跟大学部坐在那边单纯听课，听完就走人是不一样的，相较之下你的生活应该要和你所追求的知识与解答相结合，并且你往后的生活应该或多或少都和这个探索有相关。 </p>
<h3 id="善用与老师的伙伴关系，不断-Research"><a href="#善用与老师的伙伴关系，不断-Research" class="headerlink" title="善用与老师的伙伴关系，不断 Research"></a>善用与老师的伙伴关系，不断 Research</h3><p>我常说英文 research 这个字非常有意义， search 是寻找，而 research 是再寻找，所以每个人都要 research ，不断的一遍一遍再寻找，并进而使你的生活和学习成为一体。中国近代兵学大师蒋百里在他的兵学书中曾说：「生活条件要跟战斗条件一致，近代欧洲凡生活与战斗条件一致者强，凡生活与战斗条件不一致者弱。」我就是藉由这个来说明研究生的生活，你的生活条件与你的战斗条件要一致，你的生活是跟着老师与同学共同成长的，当中你所听到的每一句话，都可能带给你无限的启发。<br>回想当时我在美国念书的研究生生活，只要随便在楼梯口碰到任何一个人，他都有办法帮忙解答你语言上的困难，不管是英文、拉丁文、德文、希腊文 …… 等。所以能帮助解决问题的不单只是你的老师，还包括所有同学以及学习团体。你的学习是跟生活合在一起、成为一体的。当我看到有学生呈现被动或是懈怠的时候，我就会用毛泽东的「革命不是请客吃饭！」来跟他讲：「作研究生不是请客吃饭。」 </p>
<h3 id="藉由大量阅读和老师提点，进入研究领域"><a href="#藉由大量阅读和老师提点，进入研究领域" class="headerlink" title="藉由大量阅读和老师提点，进入研究领域"></a>藉由大量阅读和老师提点，进入研究领域</h3><p>怎样进入一个领域最好，我个人觉得只有两条路，其中一条就是让他不停的念书、不停的报告，这是进入一个陌生的领域最快，又最方便的方法，到最后不知不觉学生就会知道这个领域有些什么，我们在不停念书的时候常常可能会沉溺在细节里不能自拔，进而失去全景，导致见树不见林，或是被那几句英文困住，而忘记全局在讲什么。藉由学生的报告，老师可以讲述或是厘清其中的精华内容，经由老师几句提点，就会慢慢打通任督二脉，逐渐发展一种自发学习的能力，同时也知道碰到问题可以看哪些东西。就像是我在美国念书的时候，我修过一些我完全没有背景知识的国家的历史，所以我就不停的念书、不停逼着自己吸收，而老师也只是不停的开书目，运用这样的方式慢慢训练，有一天我不再研究它时，我发现自己仍然有自我生产及蓄发的能力，因为我知道这个学问大概是什么样的轮廓，碰到问题也有能力可以去查询相关的资料。所以努力让自己的学习产生自发的延展性是很重要的。 </p>
<h3 id="循序渐进地练习论文写作"><a href="#循序渐进地练习论文写作" class="headerlink" title="循序渐进地练习论文写作"></a>循序渐进地练习论文写作</h3><p>到了硕士或博士最重要的一件事，是完成一篇学位论文，而不管是硕士或博士论文，其规模都远比你从小学以来所受的教育、所要写的东西都还要长得多，虽然我不知道教育方面的论文情况是如何，但是史学的论文都要写二、三十万字，不然就是十几二十万字。写这么大的一个篇幅，如何才能有条不紊、条理清楚，并把整体架构组织得通畅可读？首先，必须要从一千字、五千字、一万字循序渐进的训练，先从少的慢慢写成多的，而且要在很短的时间内训练到可以从一万字写到十万字。这么大规模的论文谁都写得出来，问题是写得好不好，因为这么大规模的写作，有这么许多的脚注，还要注意首尾相映，使论述一体成型，而不是散落一地的铜钱；是一间大礼堂，而不是一间小小分割的阁楼。为了完成一个大的、完整的、有机的架构模型（学位论文），必须要从小规模的篇幅慢慢练习，这是一个最有效的办法。<br>因为受计算机的影响，我发现很多学生写文章能力都大幅下降。写论文时很重要的一点是，文笔一定要清楚，不要花俏、不必漂亮，「清楚」是最高指导原则，经过慢慢练习会使你的文笔跟思考产生一致的连贯性。我常跟学生讲不必写的花俏，不必展现你散文的才能，因为这是学术论文，所以关键在于要写得非常清楚，如果有好的文笔当然更棒，但那是可遇不可求的，文彩像个人的生命一样，英文叫 style ， style 本身就像个人一样带有一点点天生。因此最重要的还是把内容陈述清楚，从一万字到最后十万字的东西，都要结构严谨、论述清楚、文笔清晰。<br>我在念书的时候，有一位欧洲史、英国史的大师 Lawrence Stone ，他目前已经过世了，曾经有一本书访问十位最了不起的史学家，我记得他在访问中说了一句非常吸引人注意的话，他说他英文文笔相当好，所以他一辈子没有被退过稿。因此文笔清楚或是文笔好，对于将来文章可被接受的程度有举足轻重的地位。内容非常重要，有好的表达工具更是具有加分的作用，但是这里不是讲究漂亮的 style ，而是论述清楚。 </p>
<h2 id="研究生如何训练自己"><a href="#研究生如何训练自己" class="headerlink" title="研究生如何训练自己"></a>研究生如何训练自己</h2><h3 id="尝试接受挑战，勇于克服"><a href="#尝试接受挑战，勇于克服" class="headerlink" title="尝试接受挑战，勇于克服"></a>尝试接受挑战，勇于克服</h3><p>研究生如何训练自己？就是每天、每周或每个月给自己一个挑战，要每隔一段时间就给自己一个挑战，挑战一个你不一定能做到的事情。你不一定要求自己每次都能顺利克服那个挑战，但是要全力以赴去尝试。我在我求学的生涯中，碰到太多聪明但却一无所成的人，因为他们很容易困在自己的障碍里面，举例来说，我在普林斯顿大学碰到一个很聪明的人，他就是没办法克服他给自己的挑战，他就总是东看西看，虽然我也有这个毛病，可是我会定期给我自己一个挑战，例如：我会告诉自己，在某一个期限内，无论如何一定要把这三行字改掉，或是这个礼拜一定要把这篇草稿写完，虽然我仍然常常写不完，但是有这个挑战跟没这个挑战是不一样的，因为我挑战三次总会完成一次，完成一次就够了，就足以表示克服了自己，如果觉得每一个礼拜的挑战，可行性太低，可以把时间延长为一个月的挑战，去挑战原来的你，不一定能做到的事情。不过也要切记，硕士生是刚开始进入这一个领域的新手，如果一开始问题太小，或是问题大到不能控制，都会造成以后研究的困难。 </p>
<h3 id="论文的写作是个训练过程，不能苛求完成精典之作"><a href="#论文的写作是个训练过程，不能苛求完成精典之作" class="headerlink" title="论文的写作是个训练过程，不能苛求完成精典之作"></a>论文的写作是个训练过程，不能苛求完成精典之作</h3><p>各位要记得我以前的老师所说的一句话：「硕士跟博士是一个训练的过程，硕士跟博士不是写经典之作的过程。」我看过很多人，包括我的亲戚朋友们，他之所以没有办法好好的完成硕士论文，或是博士论文，就是因为他把它当成在写经典之作的过程，虽然事实上，很多人一生最好的作品就是硕士论文或博士论文，因为之后的时间很难再有三年或六年的时间，沉浸在一个主题里反复的耕耘，当你做教授的时候，像我今天被行政缠身，你不再有充裕的时间好好探究一个问题，尤其做教授还要指导学生、上课，因此非常的忙碌，所以他一生最集中又精华的时间，当然就是他写博士、或是硕士论文的时候，而那一本成为他一生中最重要的著作也就一点都不奇怪了。<br>不一定要刻意强求，要有这是一个训练过程的信念，应该清楚知道从哪里开始，也要知道从哪里放手，不要无限的追求完美。当然我不是否认这个过程的重要性，只是要调整自己的心态，把论文的完成当成一个目标，不要成为是一种的心理障碍或是心理负担。这方面有太多的例子了，我在普林斯顿大学念书的时候，那边旧书摊有一位非常博学多文的旧书店老板，我常常赞叹的对他说：「你为什么不要在大学做教授。」他说：「因为那篇博士论文没有写完。」原因在于他把那个博士论文当成要写一本经典，那当然永远写不完。如果真能写成经典那是最好，就像《美丽心灵》那部电影的男主角 John Nash 一样，一生最大的贡献就是博士那二十几页的论文，不过切记不要把那个当作是目标，因为那是自然而然形成的，应该要坚定的告诉自己，所要完成的是一份结构严谨、论述清楚与言之有物的论文，不要一开始就期待它是经典之作。如果你期待它是经典之作，你可能会变成我所看到的那位旧书摊的老板，至于我为什么知道他有那么多学问，是因为那时候我在找一本书，但它并没有在旧书店里面，不过他告诉我：「还有很多本都跟他不相上下。」后来我对那个领域稍稍懂了之后，证明确实如他所建议的那般。一个旧书店的老板精熟每一本书，可是他就是永远无法完成，他梦幻般的学位论文，因为他不知道要在哪里放手，这一切都只成为空谈。 </p>
<h3 id="论文的正式写作"><a href="#论文的正式写作" class="headerlink" title="论文的正式写作"></a>论文的正式写作</h3><ol>
<li>学习有所取舍<br>到了写论文的时候，要能取也要能舍，因为现在信息爆炸，可以看的书太多，所以一定要建构一个属于自己的知识树，首先，要有一棵自己的知识树，才能在那棵树挂相关的东西，但千万不要不断的挂不相关的东西，而且要慢慢的舍掉一些挂不上去的东西，再随着你的问题和关心的领域，让这棵知识树有主干和枝叶。然而这棵知识树要如何形成？第一步你必须对所关心的领域中，有用的书籍或是数据非常熟悉。 </li>
<li>形成你的知识树<br>我昨天还请教林毓生院士，他今年已经七十几岁了，我告诉他我今天要来作演讲，就问他：「你如果讲这个题目你要怎么讲？」他说：「只有一点，就是那重要的五、六本书要读好几遍。」因为林毓生先生是海耶克，还有几位近代思想大师在芝加哥大学的学生，他们受的训练中很重要的一部份是精读原典。这句话很有道理，虽然你不可能只读那几本重要的书，但是那五、六本书将逐渐形成你知识树的主干，此后的东西要挂在上面，都可以参照这一个架构，然后把不相干的东西暂放一边。生也有涯，知也无涯，你不可能读遍天下所有的好书，所以要学习取舍，了解自己无法看遍所有有兴趣的书，而且一但看遍所有有兴趣的书，很可能就会落得普林斯顿街上的那位旧书店的老板一般，因为阅读太多不是自己所关心的领域的知识，它对于你来说只是一地的散钱。 </li>
<li>掌握工具<br>在这个阶段一定要掌握语文与合适的工具。要有一个外语可以非常流畅的阅读，要有另外一个语文至少可以看得懂文章的标题，能学更多当然更好，但是至少要有一个语文，不管是英文、日文、法文 …… 等，一定要有一个语文（外语）能够非常流畅的阅读相关书籍，这是起码的前提。一旦这个工具没有了，你的视野就会因此大受限制，因为语文就如同是一扇天窗，没有这个天窗你这房间就封闭住了。为什么你要看得懂标题？因为这样才不会有重要的文章而你不知道，如果你连标题都看不懂，你就不知道如何找人来帮你或是自己查相关的数据。其它的工具，不管是统计或是其它的任何工具，你也一定要多掌握，因为你将来没有时间再把这样的工具学会。 </li>
<li>突破学科间的界线<br>应该要把跨学科的学习当作是一件很重要的事，但是跨学科涉及到的东西必须要对你这棵知识树有帮助，要学会到别的领域稍微偷打几枪，到别的领域去摄取一些概念，对于本身关心的问题产生另一种不同的启发，可是不要泛滥无所归。为什么要去偷打那几枪？近几十年来，人们发现不管是科学或人文，最有创新的部份是发生在学科交会的地方。为什么会如此？因为我们现在的所有学科大部分都在西方十九世纪形成的，而中国再把它转借过来。十九世纪形成这些知识学科的划分的时候，很多都带有那个时代的思想跟学术背景，比如说，中研院的李院长的专长就是物理化学，他之所以得诺贝尔奖就是他在物理和化学的交界处做工作。像诺贝尔经济奖，这二十年来所颁的奖，如果在传统的经济学奖来看就是旁门走道，古典经济学岂会有这些东西，甚至心理学家也得诺贝尔经济奖，连 John Nash 这位数学家也得诺贝尔经济奖，为什么？因为他们都在学科的交界上，学科跟学科、平台跟平台的交界之处有所突破。在平台本身、在学科原本最核心的地方已经 search 太多次了，因此不一定能有很大的创新，所以为什么跨领域学习是一件很重要的事情。<br>常常一篇硕士论文或博士论文最重要、最关键的，是那一个统摄性的重要概念，而通常你在本学科里面抓不到，是因为你已经泡在这个学科里面太久了，你已经拿着手电筒在这个小仓库里面照来照去照太久了，而忘了还有别的东西可以更好解释你这些材料的现象，不过这些东西可遇而不可求。 John Nash 这一位数学家为什么会得诺贝尔数学奖？为什么他在赛局理论的博士论文，会在数十年之后得诺贝尔经济奖？因为他在大学时代上经济学导论的课，所以他认为数学可以用在经济方面来思考，而这个东西在一开始，他也没有想到会有这么大的用处。他是在数学和经济学的知识交界之处做突破。有时候在经济学这一个部分没有大关系，在数学的这一个部分也没有大关系，不过两个加在一起，火花就会蹦出来。 </li>
<li>论文题目要有延展性<br>对一个硕士生或博士生来说，如果选错了题目，就是失败，题目选对了，还有百分之七十胜利的机会。这个问题值得研一、博一的学生好好思考。你的第一年其实就是要花在这上面，你要不断的跟老师商量寻找一个有意义、有延展性的问题，而且不要太难。我在国科会当过人文处长，当我离开的时候，每次就有七千件申请案，就有一万四千个袋子，就要送给一万四千个教授审查。我当然不可能看那么多，可是我有个重要的任务，就是要看申诉。有些申诉者认为：「我的研究计划很好，我的著作很好，所以我来申诉。」申诉通过的大概只有百分之十，那么我的责任就是在百分之九十未通过的案子正式判决前，再拿来看一看。有几个印象最深常常被拿出来讨论的，就是这个题目不必再做了、这个题目本身没有发展性，所以使我更加确认选对一个有意义、有延展性、可控制、可以经营的题目是非常重要的。<br>我的学生常常选非常难的题目，我说你千万不要这样，因为没有人会仔细去看你研究的困难度，对于难的题目你要花更多的时间阅读史料，才能得到一点点东西；要挤很多东西，才能筛选出一点点内容，所以你最好选择一个难易适中的题目。<br>我写过好几本书，我认为我对每一本书的花的心力都是一样，虽然我写任何东西我都不满意，但是在过程中我都绞尽脑汁希望把他写好。目前为止很多人认为我最好的书，是我二十几岁刚到史语所那一年所写的那本书。我在那本书花的时间并不长，那本书的大部分的稿子，是我和许添明老师同时在当兵的军营里面写的，而且还是用我以前旧的笔记写的。大陆这些年有许多出版社，反复要求出版我以前的书，尤其是这一本，我说：「不行。」因为我用的是我以前的读书笔记，我怕引文有错字，因为在军队营区里面随时都要出操、随时就要集合，手边又没有书，怎么可能好好的去核对呢？而如果要我重新校正一遍，又因为引用太多书，实在没有力气校正。<br>为什么举这个例子呢？我后来想一想，那本书之所以比较好，可能是因为那个题目可延展性大，那个题目波澜起伏的可能性大。很多人都认为，我最好的书应该是剑桥大学出的那一本，不过我认为我最好的书一定是用中文写的，因为这个语文我能掌握，英文我没办法掌握得出神入化。读、写任何语文一定要练习到你能带着三分随意，那时候你才可以说对于这一个语文完全理解与精熟，如果你还无法达到三分的随意，就表示你还在摸索。<br>回到我刚刚讲的，其实每一本书、每一篇论文我都很想把它写好。但是有些东西没办法写好，为什么？因为一开始选择的题目不够好。因此唯有选定题目以后，你的所有训练跟努力才有价值。我在这里建议大家，选题的工作要尽早做，所选的题目所要处理的材料最好要集中，不要太分散，因为硕士生可能只有三年、博士生可能只有五年，如果你的材料太不集中，读书或看数据可能就要花掉你大部分的时间，让你没有余力思考。而且这个题目要适合你的兴趣和专长，如果你不会统计学或讨厌数字，但却选了一个全都要靠统计的论文，那是不可能做得好。 </li>
<li>养成遵照学术格式的写作习惯<br>另一个最基本的训练，就是平时不管你写一万字、三万字、五万字都要养成遵照学术规范的习惯，要让它自然天成，就是说你论文的脚注、格式，在一开始进入研究生的阶段就要培养成为你生命中的一个部份。如果这个习惯没有养成，人家就会觉得这个论文不严谨，之后修改也要花很多时间，因为你的论文规模很大，可能几百页，如果一开始弄错了，后来再从头改到尾，一定很耗时费力，因此要在一开始就养成习惯，因为我们是在写论文而不是在写散文，哪一个逗点应该在哪里、哪一个书名号该在哪里、哪一个地方要用引号、哪一个要什么标点符号，都有一定的规定，用中文写还好，用英文有一大堆简称。在 1960 年代台湾知识还很封闭的时候，有一个人从美国回来就说：「美国有个不得了的情形，因为有一个人非常不得了。」有人问他为什么不得了，他说：「因为这个人的作品到处被引用。」他的名字就叫 ibid 。所谓 ibid 就是同前作者，这个字是从拉丁文发展出来的，拉丁文有一大堆简称，像 et. al. 就是两人共同编的。英文有一本 The Chicago Manual of Style 就是专门说明这一些写作规范。各位要尽早学会中英文的写作规范，慢慢练习，最后随性下笔，就能写出符合规范的文章。 </li>
<li>善用图书馆<br>图书馆应该是研究生阶段最重要的地方，不必读每一本书，可是要知道有哪些书。我记得我做学生时，新进的书都会放在图书馆的墙上，而身为学生最重要的事情，就是要把书名看一看。在某些程度上知道书皮就够了，但是这仍和打计算机是不一样的，你要实际上熟悉一下那些书，摸一下，看一遍目录。我知道现在从计算机就可以查到书名，可是我还是非常珍惜这种定期去 browse 新到的书的感觉，或去看看相关领域的书长成什么样子。中研院有一位院士是哈佛大学信息教授，他告诉我他在创造力最高峰的时候，每个礼拜都到他们信息系图书室里，翻阅重要的信息期刊。所以图书馆应该是身为研究生的人们最熟悉的地方。不过切记不重要的书或文献不要花时间去看，你们生活在信息泛滥的时代，跟我生长在信息贫乏的时代是不同的，所以生长在这一个信息泛滥的时代，你要学会有所取舍。我常常看我的学生引用一些三流的论文，却引得津津有味，我都替他感到难过，因为我强调要读有用、有价值的东西。 </li>
<li>留下时间，精致思考<br>还要记得给自己保留一些思考的时间。一篇论文能不能出神入化、能不能引人入胜，很重要的是在现象之上作概念性的思考，但我不是说一定要走理论的路线，而是提醒大家要在一般的层次再提升两三步， conceptualize（概念化） 你所看到的东西。真切去了解，你所看到的东西是什么？整体意义是什么？整体的轮廓是什么？千万不要被枝节淹没，虽然枝节是你最重要的开始，但是你一天总也要留一些时间好好思考、慢慢沉淀。 conceptualize 是一种非常难教的东西，我记得我念书时，有位老师信誓旦旦说要开一门课，教学生如何 conceptualize ，可是从来都没开成，因为这非常难教。我要提醒的是，在被很多材料和枝节淹没的时候，要适时跳出来想一想，所看到的东西有哪些意义？这个意义有没有广泛连结到更大层面的知识价值。<br>傅斯年先生来到台湾以后，同时担任中央研究院历史语言研究所的所长及台大的校长。台大有个傅钟每小时钟声有二十一响、敲二十一次。以前有一个人，写了一本书叫《钟声二十一响》，当时很轰动。他当时对这二十一响解释是说：因为台大的学生都很好，所以二十一响是欢迎国家元首二十一响的礼炮。不久前我发现台大在每一个重要的古迹下面竖一个铜牌，我仔细看看傅钟下的解释，才知道原来是因为傅斯年当台大校长的时候，曾经说过一句话：「人一天只有二十一个小时，另外三小时是要思考的。」所以才叫二十一响。我觉得这句话大有道理，可是我觉得三小时可能太多，因为研究生是非常忙的，但至少每天要留个三十分钟、一小时思考，想一想你看到了什么？学习跳到比你所看到的东西更高一点的层次去思考。 </li>
<li>找到学习的楷模<br>我刚到美国念书的时候，每次写报告头皮就重的不得了，因为我们的英文报告三、四十页，一个学期有四门课的话就有一百六十页，可是你连脚注都要从头学习。后来我找到一个好办法，就是我每次要写的时候，把一篇我最喜欢的论文放在旁边，虽然他写的题目跟我写的都没关系，不过我每次都看他如何写，看看他的注脚、读几行，然后我就开始写。就像最有名的男高音 Pavarotti 唱歌剧的时候都会捏着一条手帕，因为他说：「上舞台就像下地狱，太紧张了。」他为了克服紧张，他有习惯性的动作，就是捏着白手帕。我想当年那一篇论文抽印本就像是我的白手帕一样，能让我开始好好写这篇报告，我学习它里面如何思考、如何构思、如何照顾全体、如何用英文作脚注。静下心来，好好的把一位大师的作品或一本经典的论文读完，开始模仿和学习它，是入门的最好方法。逐步的，你也开始写出自己的东西。我也常常鼓励我的学生，出国半年或是一年到国外看看，像现在国科会有各式各样的机会，可以增长眼界，可以知道现在的餐馆正在卖些什么菜，回来后自己要作菜也才知道要如何着手。 </li>
</ol>
<h2 id="用两条腿走路，练习培养自己的兴趣"><a href="#用两条腿走路，练习培养自己的兴趣" class="headerlink" title="用两条腿走路，练习培养自己的兴趣"></a>用两条腿走路，练习培养自己的兴趣</h2><p>最后还有一点很重要的，就是我们的人生是两只脚，我们不是靠一只脚走路。做研究生的时代，固然应该把所有的心思都放在学业上，探索你所要探索的那些问题，可是那只是你的一只脚，另外还有一只脚是要学习培养一、两种兴趣。很多人后来会发现他的右脚特别肥重（包括我自己在内），也就是因为忘了培养左脚。很多很有名的大学者最后都陷入极度的精神困扰之中，就是因为他只是培养他的右脚，他忘了培养他的左脚，他忘了人生用两只脚走路，他少了一个小小的兴趣或嗜好，用来好好的调节心情或是排遣自己。<br>去年夏天，香港《亚洲周刊》要访问我，我说：「我不想接受访问，我不是重要的人。」可是后来他们还是把一个简单的对话刊出来了，里面我只记得讲了一段话：做一个研究生或一个学者，有两个感觉最重要 – 责任感与罪恶感。你一定要有很大的责任感，去写出好的东西，如果责任感还不够强，还要有一个罪恶感，你会觉得如果今天没有好好做几个小时的工作的话，会有很大的罪恶感。除非是了不得的天才，不然即使爱因斯坦也是需要很努力的。很多很了不得的人，他只是把所有的努力集中在一百页里面，他花了一千小时和另外一个人只花了十个小时，相对于来说，当然是那花一千个小时所写出来的文章较好。所以为什么说要赶快选定题目？因为如果太晚选定一个题目，只有一年的时间可以好好耕耘那个题目，早点选定可以有二、三年耕耘那个题目，是三年做出的东西好，还是一年的东西好？如果我们的才智都一样的话，将三年的努力与思考都灌在上面，当然比一年还要好。 </p>
<h2 id="营造卓越的大学，分享学术的氛围"><a href="#营造卓越的大学，分享学术的氛围" class="headerlink" title="营造卓越的大学，分享学术的氛围"></a>营造卓越的大学，分享学术的氛围</h2><p>现在很多人都在讨论，何谓卓越的大学？我认为一个好的大学，学校生活的一大部份（如咖啡厅、餐厅等），以及校园的许多活动，直接或间接都与学问有关。同学在咖啡厅里面谈论的，直接或间接也都会是学术相关的议题。教授们在餐厅里面吃饭，谈的是「有没有新的发现」？或是哪个人那天演讲到底讲了什么重要的想法？一定是沉浸在这种氛围中的大学，才有可能成为卓越大学。那种交换思想学识、那种互相教育的气氛不是花钱就有办法获得的。我知道钱固然重要，但不是唯一的东西。一个卓越的大学、一个好的大学、一个好的学习环境，表示里面有一个共同关心的焦点，如果没有的话，这个学校就不可能成为好的大学。<br>虽然文章写的貌似很长，看完的人也是褒贬不一，总的来说，作为一个研究生，在国内需要2年或3年的时间，国外是1年或2年的时间，其实，在读研之前，大家的憧憬也许是好的，看着看那，但是在大家真正进入到学习中一段时间后，就会发现自己的期望值在一点点的降低，这个降低并不是自己价值观的降低，实际上是被客观实际情况所柔化了，我们憧憬的所谓研究真正落实到每个人头上的时候，也许很多时候是不理想的，也许枯燥，也许重复，也许碰到不负责任的老师，也许这个课题不符合实际情况，也许碰到假课题，这些情况时有发生，在不同程度的打击着我们。读研对于不同的人来说有时候是辛苦，有时候是娱乐，这完全取决于个人。重要的是你能保持对于你做的事情的热情，并认真的去完成它。<br>     我理解的研究生的整个学习过程是一个提升自己的一个过程，而并不仅仅是为了研究出什么东西，实际来讲，硕士生实际上是没有什么创新的（特别是在国内），更多的是在训练自己的素质，正由自身的素质上去了，你在做课题的同时才能想到更多，收获也越大，不管怎么样，如果你能在毕业的时候回顾自己走过的几年，能够觉得比你刚入学时成熟了很多，并且学会了很多原则性的潜意识的东西的话，就算是一种比较成功的过程。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;研究生与大学生的区别&quot;&gt;&lt;a href=&quot;#研究生与大学生的区别&quot; class=&quot;headerlink&quot; title=&quot;研究生与大学生的区别&quot;&gt;&lt;/a&gt;研究生与大学生的区别&lt;/h2&gt;&lt;p&gt;首先跟大家说明一下研究生和大学生的区别。大学生基本上是来接受学问、接受知识的，然而不管是对于硕士时期或是博士时期的研究而言，都应该准备要开始制造新的知识，我们在美国得到博士学位时都会领到看不懂的毕业证书，在一个偶然的机会下，我问了一位懂拉丁文的人，上面的内容为何？他告诉我：「里头写的是恭喜你对人类的知识有所创新，因此授予你这个学位。」在中国原本并没有博硕士的学历，但是在西方他们原来的用意是，恭贺你已经对人类普遍的知识有所创新，这个创新或大或小，都是对于普遍的知识有所贡献。这个创新不会因为你做本土与否而有所不同，所以第一个我们必须要很用心、很深刻的思考，大学生和研究生是不同的。&lt;br&gt;
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="研究生" scheme="http://i90s.vip/tags/%E7%A0%94%E7%A9%B6%E7%94%9F/"/>
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>pythonの读取excel内容</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/10/python%E3%81%AE%E8%AF%BB%E5%8F%96excel%E5%86%85%E5%AE%B9.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/10/pythonの读取excel内容.html</id>
    <published>2019-11-10T13:58:06.000Z</published>
    <updated>2019-12-01T09:54:10.847Z</updated>
    
    <content type="html"><![CDATA[<h2 id="任务要求：读取excel内数据，并对数据进行校验后返回数据"><a href="#任务要求：读取excel内数据，并对数据进行校验后返回数据" class="headerlink" title="任务要求：读取excel内数据，并对数据进行校验后返回数据"></a>任务要求：读取excel内数据，并对数据进行校验后返回数据</h2><a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> xlrd</span><br><span class="line"><span class="comment">#类使用方法：用来查询excel表中数据名称（name）、数据类型(type_code)、数据大小(internal_size)</span></span><br><span class="line"><span class="comment">#return [状态位，错误信息,col_data]</span></span><br><span class="line"><span class="comment">#col_data=[name, type_code internal_size]</span></span><br><span class="line"><span class="comment">#状态位 0为正确 1为错误</span></span><br><span class="line"><span class="comment">#若状态位为0，则错误信息为空，</span></span><br><span class="line"><span class="comment">#若状态位为1，则只返回错误信息，不返回查询值</span></span><br><span class="line"><span class="comment">#-------目前只支持一下数据类型的插入----------</span></span><br><span class="line"><span class="comment">#         oracle_type=["CHAR","VARCHAR2","NCHAR",</span></span><br><span class="line"><span class="comment">#                      "NVARCHAR2","DATE","TIMESTAMP",</span></span><br><span class="line"><span class="comment">#                      "LONG","RAW","LONG RAW",</span></span><br><span class="line"><span class="comment">#                      "BLOB","CLOB","NCLOB",</span></span><br><span class="line"><span class="comment">#                      "BFILE","ROWID","NROWID",</span></span><br><span class="line"><span class="comment">#                      "NUMBER","DECIMAL","INTEGER",</span></span><br><span class="line"><span class="comment">#                      "FLOAT","REAL"]</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EXCEL_ALL</span>:</span>    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Open_Excel</span><span class="params">(self,excel_name,excel_sheet=<span class="string">"Sheet1"</span>)</span>:</span></span><br><span class="line">        self.fname = excel_name.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">        self.fsheet = excel_sheet</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.bk = xlrd.open_workbook(self.fname)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,<span class="string">"no %s named excel"</span> % self.fname]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sh = self.bk.sheet_by_name(self.fsheet)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,<span class="string">"no sheet in %s named %s"</span> % (self.fname,self.fsheet)]</span><br><span class="line">        <span class="comment">#获取行数</span></span><br><span class="line">        nrows = sh.nrows</span><br><span class="line">        <span class="comment">#获取列数</span></span><br><span class="line">        ncols = sh.ncols</span><br><span class="line"><span class="comment">#-----------校验----------</span></span><br><span class="line">    <span class="comment">#---校验数据是否完整 是否有空值---</span></span><br><span class="line">        <span class="comment">#获取各列数值  </span></span><br><span class="line">        col_0=sh.col_values(<span class="number">0</span>)</span><br><span class="line">        col_1=sh.col_values(<span class="number">1</span>)  </span><br><span class="line">        col_2=sh.col_values(<span class="number">2</span>)</span><br><span class="line">        col_3=sh.col_values(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,nrows):</span><br><span class="line">            <span class="keyword">if</span>(col_0[i]==<span class="string">''</span> <span class="keyword">or</span> col_1[i]==<span class="string">''</span> <span class="keyword">or</span> col_2[i]==<span class="string">''</span> <span class="keyword">or</span> col_3[i]==<span class="string">''</span>):  </span><br><span class="line">                msg=<span class="string">'Data length is not consistent'</span></span><br><span class="line">                <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">    <span class="comment">#---校验导入数据类型---</span></span><br><span class="line">        <span class="comment">#获取第一列数值</span></span><br><span class="line">        col_1=sh.col_values(<span class="number">1</span>)  </span><br><span class="line">        n_col_1=len(col_1)</span><br><span class="line">        <span class="comment">#ORACLE 数据库所有数据类型</span></span><br><span class="line">        oracle_type=[<span class="string">"CHAR"</span>,<span class="string">"VARCHAR2"</span>,<span class="string">"NCHAR"</span>,</span><br><span class="line">                     <span class="string">"NVARCHAR2"</span>,<span class="string">"DATE"</span>,<span class="string">"TIMESTAMP"</span>,</span><br><span class="line">                     <span class="string">"LONG"</span>,<span class="string">"RAW"</span>,<span class="string">"LONG RAW"</span>,</span><br><span class="line">                     <span class="string">"BLOB"</span>,<span class="string">"CLOB"</span>,<span class="string">"NCLOB"</span>,</span><br><span class="line">                     <span class="string">"BFILE"</span>,<span class="string">"ROWID"</span>,<span class="string">"NROWID"</span>,</span><br><span class="line">                     <span class="string">"NUMBER"</span>,<span class="string">"DECIMAL"</span>,<span class="string">"INTEGER"</span>,</span><br><span class="line">                     <span class="string">"FLOAT"</span>,<span class="string">"REAL"</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,n_col_1):</span><br><span class="line">            col_type=col_1[i].upper()   <span class="comment">#最大化</span></span><br><span class="line">            <span class="keyword">if</span> col_type <span class="keyword">not</span> <span class="keyword">in</span> oracle_type:</span><br><span class="line">                msg=<span class="string">"Some data type does not belong to the oracle database"</span></span><br><span class="line">                <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">    <span class="comment">#---校验第三、四列是否为整数类型----</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,nrows): </span><br><span class="line">            cc_2=sh.cell_value(i,<span class="number">2</span>)</span><br><span class="line">            cc_3=sh.cell_value(i,<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">if</span> cc_2%<span class="number">1</span>!=<span class="number">0</span> <span class="keyword">or</span> cc_3%<span class="number">1</span>!=<span class="number">0</span>:</span><br><span class="line">                msg=<span class="string">'internal_size is not int'</span></span><br><span class="line">                <span class="keyword">return</span> [<span class="number">1</span>,msg]</span><br><span class="line">                  </span><br><span class="line">        col_data = [[<span class="number">0</span> <span class="keyword">for</span> col <span class="keyword">in</span> range(ncols)] <span class="keyword">for</span> row <span class="keyword">in</span> range(nrows)]  </span><br><span class="line">        <span class="comment">#获取各行数据</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,nrows):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>,ncols):</span><br><span class="line">                col_data[i][j]=str(sh.cell_value(i,j)).decode(<span class="string">'utf-8'</span>).encode(<span class="string">'gb2312'</span>)       </span><br><span class="line">        <span class="keyword">return</span> [<span class="number">0</span>,<span class="string">''</span>,col_data]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;任务要求：读取excel内数据，并对数据进行校验后返回数据&quot;&gt;&lt;a href=&quot;#任务要求：读取excel内数据，并对数据进行校验后返回数据&quot; class=&quot;headerlink&quot; title=&quot;任务要求：读取excel内数据，并对数据进行校验后返回数据&quot;&gt;&lt;/a&gt;任务要求：读取excel内数据，并对数据进行校验后返回数据&lt;/h2&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="python" scheme="http://i90s.vip/tags/python/"/>
    
      <category term="excel" scheme="http://i90s.vip/tags/excel/"/>
    
  </entry>
  
  <entry>
    <title>渐行渐远的你我，渐行渐远的友情</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/10/%E6%B8%90%E8%A1%8C%E6%B8%90%E8%BF%9C%E7%9A%84%E4%BD%A0%E6%88%91%EF%BC%8C%E6%B8%90%E8%A1%8C%E6%B8%90%E8%BF%9C%E7%9A%84%E5%8F%8B%E6%83%85.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/10/渐行渐远的你我，渐行渐远的友情.html</id>
    <published>2019-11-10T13:36:36.000Z</published>
    <updated>2019-12-01T09:44:38.183Z</updated>
    
    <content type="html"><![CDATA[<p>最近越发觉得，生活没意思，跟宿舍的同学探讨这个话题，说着说着就觉得“还是死了的好”。我问宿舍一贯以读书为乐趣的同学：人活着有什么意思？他说，人活着就没意思啊。另一个同学说：那为什么不去死呢？他说：因为还没到时间啊。最近一段时间，我的各种观就套在这个圈子里，欲罢不能。<a id="more"></a></p>
<p>我也想过，人既然活着没意思，那就找些有意思的事情做吧。于是，拾起来落下很久的BBC，每天听来听去也没听出个啥，拾起来很久没写的文字，重新一篇一篇跟记日记般写出来，下载一些歌曲期待能够遇见爱听的好声音。就这样过着日子，在自己的世界里也慢慢地走出了一点路。</p>
<p>前天晚上QQ被盗，在我熟睡中，盗号者删掉了我所有的好友，我估计盗号者失眠严重，实在无聊了吧。第二天早上，有同学留言告诉我的号有异常，中午回宿舍打开电脑，顿时心里气血翻涌，有一种昏死过去的冲动。我的130号好友被删，留下18个人。中午放弃了午休来处理这个问题，直到晚上的时候QQ还是显示有些异常。</p>
<p>今天终于一切正常了。看着被删的一干二净的QQ，我心里倒是清静了不少，没有时时刻刻的闪动，没有头像的跳动，给了我太多的清静啊。然而，我还是要加回来一部分好友，因为有些业务上的联系，或者是我有求于他们，或者是他们有求于我的事情还没有完全解决。而真正为了不失去联系的，并没有几个。</p>
<p>对于友情，我比较喜欢珍惜现下的光阴。那些过去的故事，过去的友谊，大约只能在未来的相见之后才能继续吧。从小到大的那几个好朋友，一年难得联系几次，谁也不会想着主动去联系谁，偶尔打个电话，为了某件事情，或者只是聊聊天，无需太多的问候，见面也依旧以各种损名相称，谁也不会觉得别扭。</p>
<p>QQ重新定义了好友，让友情以文字的形式表现出来。翻出好友聊天记录，看着和某些人的几十页聊天记录，从彼此试探的尊重到肆无忌惮，再到后来的逐渐陌生，终于渐行渐远。当我尝试着冷落别人的时候，我知道他肯定和我一样，也非常的不适应，也许他和我一样，正在翻看着几十页的聊天记录，看看我们是如何相熟，我们交流了什么，因为什么原因有了共鸣。</p>
<p>我曾经在无比没落的时候，一个人守在电脑跟前，内心苦闷。那时候，我还没有学会用文字来化解这样的尴尬，所以，我尝试着去骚扰那些曾经相熟的人。带着忐忑的心情发过去一个表情，等了半天，回过来一句“呵呵”。我终于也就明白了，友情这东西，不论是在网上，还是在现实中，都需要那些所谓的经营。那些曾经良好的关系，时间让它们都消失了。</p>
<p>我也想过要努力挽回那些友谊，毕竟，它曾经代表一段或美好，或悲催的过去，与青春有关，又哭又笑的日子呢。然而，看着那些文字中的处处遮掩，和处处提防，我也不由得收起本想展示给他们的软弱和伤疤还没有结痂的心。我曾经和习惯在朋友面前揭开自己的伤疤给他们看，他们也能轻柔地抚摸，让我在颤栗的疼痛中泪如雨下。这样的动作缓解了我的疼痛，也连通了我们的心。而现在，展示给他们一个硬巴巴的东西可能会吓他们一跳，于我的疼痛而言，他们早已忘记。</p>
<p>我们之间，终于也只剩下了简单的问候。“你好吗？”“我很好，你呢？”“那就好，我也很好。”“再见。”“再见。”就这样变成陌生人，也是个不错的选择。他日再相遇，看着熟悉而又陌生的你们，我内心大概也不会起太多涟漪。他日若能真相见，在某个咖啡店，喝着一杯苦咖啡，若无其事的说一句“好久不见”，然后谈谈天气，也就足够了。</p>
<p>而现在，和一群人的友情，恰到好处。相同的环境，类似的处境，差不离的生活状态，我们在这样的环境下形成稳定的关系。在这样的状态下，我恰好和你有共同的爱好，你恰好喜欢听我损人，于是我们便成了好朋友。刚开始的时候，我们只是维持简单的关系，心中并无太多牵挂。时间让这一切都变质了。于是，某一天，你突然离开一段时间，我心里觉得空落落的，或者，我突然离开，你嚷着说，下次见面我们还要一起做些猥琐的事情。</p>
<p>想念，这个东西，真奇怪。莫名其妙的感觉，莫名其妙的就来了。我正想念此刻的你，然后你从门里闯了进来。于是，我只好说一句，“哎呀，你居然能活着回来。”不用矫情，这样的话你懂得。我想念你们，那些和我关系正好的好朋友，你们带给我现在的欢乐，我珍惜你们现在的好。</p>
<p>然而，这一切，在有一天也即将成为过去。临近毕业，宿舍晚上每天都摆上几桌子，借着某些人的离开来祭奠着某些东西。吃过饭上来的时候，楼下的三个大男人正在告别，两个箱子三个包，三个男人抱了抱。画面感人，此刻信誓旦旦地说着某些话，泪眼婆娑地说着对友情忠贞的誓言。只有我们自己知道，我们这么做是因为从今天起，从离开的那一分一秒开始，这一切都结束了。</p>
<p>在下次碰上之前，我们的关系再也不能像现在这般好了。我们彼此怀念是因为彼此的我们留给彼此一段特别的回忆。而这段时间的过去，毫无疑问地带走了它。从走出去，离开的那一个时刻，剩下的路便没有了彼此，于是，对彼此的念只能留在回忆中了。这段友情注定要淡下去。然而，这并不妨碍我们现在风风火火，彼此熟识，彼此相爱。</p>
<p>在以后的路上，也会遇见不同的人，和不同的人建立一些联系，产生一些友谊。直到有一日，我们中的某些人突然相遇，惊喜地发现，我们可能要在一起过某段日子，于是，我们的友谊便重新开始，好像一个毫无瑕疵的连接，虽然间断了好长时间，这并不妨碍曾经的默契。</p>
<p>我们注定都将在自己的路上越走越远，这是命中注定的事情，活着大概也就这么点事儿。路上遇到的你们，我心中感激，你们带给我的一切，我都将铭记。你们在你们的路上依然出发，大步向前，前面是你们渴望的终点。我站在分别的路口，看看来时的路，那路上有你们，再看看未来的路，那路上有陌生人，也许将来会变成熟悉的人，变成好朋友，和曾经的你们一样。</p>
<p>我喜欢你们，也感谢你们喜欢我。我讨厌你们，也感谢你们嫌弃我。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近越发觉得，生活没意思，跟宿舍的同学探讨这个话题，说着说着就觉得“还是死了的好”。我问宿舍一贯以读书为乐趣的同学：人活着有什么意思？他说，人活着就没意思啊。另一个同学说：那为什么不去死呢？他说：因为还没到时间啊。最近一段时间，我的各种观就套在这个圈子里，欲罢不能。
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="心情" scheme="http://i90s.vip/tags/%E5%BF%83%E6%83%85/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter链接Oracle数据库</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/11/03/Jmeter%E9%93%BE%E6%8E%A5Oracle%E6%95%B0%E6%8D%AE%E5%BA%93.html"/>
    <id>http://i90s.vip//软件笔记/2019/11/03/Jmeter链接Oracle数据库.html</id>
    <published>2019-11-03T09:14:20.000Z</published>
    <updated>2019-12-01T09:46:59.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JmeterのJDBC-Request"><a href="#JmeterのJDBC-Request" class="headerlink" title="JmeterのJDBC Request"></a>JmeterのJDBC Request</h2><blockquote>
<p>JDBC Request：这个sqmpler可以向数据库发送一个jdbc请求（SQL语句），并获取返回的数据库数据的操作，它经常需要和JDBC Connertion Configuration配置原件一起使用，主要是配置数据库的相关属性，比如ip，帐号，密码，链接数等。</p>
</blockquote>
<ol>
<li>添加数据库jar包</li>
</ol>
<p>不同的数据库，需要添加的jar包不同，需要根据需求下载自己需要的jar包。<br>下载完成后，可以通过以下两种方式安装jar包<a id="more"></a><br>1）直接将jar包复制到jmeter的lib目录下（推荐）<br>2）通过Tset Plan添加<br>在’add directory or jar to classpath’里面把jar包的路径添加进去</p>
<ol>
<li>配置JDBC Connection Configuration</li>
</ol>
<p>参数含义;<br>. Variable Name:数据库连接池的名称，可以添加多个JDBC Connection Configuration，每个可以七个不同的名称，再jdbc request中可以通过这个名字选择不同的连接池<br>. Database URL：数据库url，具体配置如下<br>. JDBC Driver class:JDBC驱动<br>. username：数据库登录用户名<br>. password：数据库登录密码</p>
<p>不同数据库填写表格：</p>
<table>
<thead>
<tr>
<th>Database</th>
<th>Driver calss</th>
<th>Database URL</th>
</tr>
</thead>
<tbody>
<tr>
<td>MySQL</td>
<td>com.mysql.jdbc.Driver</td>
<td>jdbc:mysql://host:port/{dbname}</td>
</tr>
<tr>
<td>PostgreSql</td>
<td>org.postgresql.Driver</td>
<td>jdbc:postgresql:{dbname}</td>
</tr>
<tr>
<td>Oracle</td>
<td>oracle.jdbc.driver.OracleDriver</td>
<td>jdbc:oracle:thin:user/pass@//host:port/service</td>
</tr>
<tr>
<td>ingres(2006)</td>
<td>ingres.jdbc.IngresDriver</td>
<td>jdbc:ingres://host:port/db[;attr=value]</td>
</tr>
<tr>
<td>MSSQL</td>
<td>com.microsoft.sqlserver.jdbc.SQLServerDriver</td>
<td>jdbc:sqlserver://ip:1433;databaseName=DBname</td>
</tr>
</tbody>
</table>
<ol>
<li>配置JDBC Request</li>
</ol>
<p>参数含义：<br>. variable Name：数据连接池名字，需要和JDBC Connection Configuration的Variable Name保持一致<br>. Query：填写的SQL语句，末尾不需要加‘;‘<br>. Parameter values：参数值<br>. Parameter types:参数类型，可参考 ：javadoc for java.sql。types<br>. variable names：保存sql语句返回结果的变量名<br>. Result variable name: 创建一个对象变量，保存所有返回的结果<br>. Query timeout：查询超时时间<br>. Handle result set：定义如何处理由callable statements语句返回的结果</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JmeterのJDBC-Request&quot;&gt;&lt;a href=&quot;#JmeterのJDBC-Request&quot; class=&quot;headerlink&quot; title=&quot;JmeterのJDBC Request&quot;&gt;&lt;/a&gt;JmeterのJDBC Request&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;JDBC Request：这个sqmpler可以向数据库发送一个jdbc请求（SQL语句），并获取返回的数据库数据的操作，它经常需要和JDBC Connertion Configuration配置原件一起使用，主要是配置数据库的相关属性，比如ip，帐号，密码，链接数等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;添加数据库jar包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不同的数据库，需要添加的jar包不同，需要根据需求下载自己需要的jar包。&lt;br&gt;下载完成后，可以通过以下两种方式安装jar包
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
      <category term="Oracle" scheme="http://i90s.vip/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>从加州理工到高盛银行</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/01/%E4%BB%8E%E5%8A%A0%E5%B7%9E%E7%90%86%E5%B7%A5%E5%88%B0%E9%AB%98%E7%9B%9B%E9%93%B6%E8%A1%8C.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/01/从加州理工到高盛银行.html</id>
    <published>2019-11-01T15:21:56.000Z</published>
    <updated>2019-12-01T09:52:15.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>整十年前，我妈妈洪冬桂博士写「我家胖比」一书，造成很大轰动。那个小名「胖比」的女孩，就是我─艾丽斯，粟 (Alyce Su)，粟耀莹。那本书写了我从降生到大学毕业的许多趣事，把我塑造成一个很逗人喜欢、奋发上进的小姑娘。我还记得那书最后的结论是：“人们不会怀疑十年之后的科学家名单中有粟耀莹的名字，可是到那时候，除了她爸爸粟教授外，很少人会知道世界上曾有一个名叫『粟胖比』的女孩”！</p>
<p>妈妈这个结论，是根据我当年表现出的性向而下的。<a id="more"></a>我在科学方面的天赋确实很高，举个例子，我进入大学四年级的时候，由于已修完了所有物理系的应修学分，便到研究所去选修公认最难的课：量子物理学和相对性天文学，结果我前者拿了九十九分，后者拿了九十八分，满分都是一百。 我也拿到朱经武奖学金。那时我非常自信，认为此生应可拿到一项诺贝尔奖。</p>
<p>以前台大物理系的恩师们，丘宏毅教授，李文中教授，林清凉教授，扬信男教授，黄伟彦教授，张国龙教授，都对我诸多期许与鼓励。尤其是林清凉教授，在上量子物理时，总是以我作例子，教训和我同班上课不够认真的台大物理研究所的学长们。</p>
<p>后来很多人问我，Alyce，你拿了加州理工这么难念的博士，怎么不教书或作研究? 这个问题，自我从商开始，已经回答了N遍，答案是：我从来没有想要教书或作研究，我去加州理工，这个在世界上诺贝尔奖得主密度最大的地方，是为了接受其熏陶，以悟出如何得到诺贝尔奖的道理，并对我当年的偶象Feynman费因曼（著名的物理诺贝尔奖得主，著有Surely You’re Joking，Mr。Feynman 一书）生前待过最久的地方，进行模拜。</p>
<p>当年因为家庭环境的缘故，不知道还有Bill Gates，Larry Ellison，Warren Buffet，这种人，不然一定早就打算如何进华尔街或硅谷，作交易员或向风险投资家融资来创业。后来知道世界上原来还有这些白手起家的富豪，二话不说，在加州理工学院修得生物科技/物理学博士，也就是受完最好的自然科学训练之后，马上跳出了科学方面的职场，慨然踏进了金融行业。</p>
<h2 id="19岁走出台湾赴美"><a href="#19岁走出台湾赴美" class="headerlink" title="19岁走出台湾赴美"></a>19岁走出台湾赴美</h2><p>大学四年级时，我还不到二十岁，考完托福和GRE后 (多谢来欣补习班的方有毅老师，当年我的GRE 是全台湾考出的前三高分)，申请学校的结果，得到多所美国名校的入学许可。加州理工，哈佛，哥伦比亚，柏克莱，康奈尔，芝加哥，等等。加州理工物理系历年为全美物理排名第一。哥伦比亚给我诺贝尔奖得主李政道奖学金。柏克莱给我全额奖学金，其天文系第一把手徐遐生教授来台湾演讲时，还特地安排与我见面，希望要我选择柏克莱，以为中国天文物理界培育接班人。康奈尔也派出钟威，当年台湾清大有名的资优生，向我招手。钟威在康奈尔学的是最难的“超弦论” (Super-String Theory)，但后来也投身华尔街。</p>
<p>我和父亲特别到美国这些学校都看过，才决定加州理工。</p>
<h2 id="进入加州理工"><a href="#进入加州理工" class="headerlink" title="进入加州理工"></a>进入加州理工</h2><p>一九九二年六月，我正告别了深爱我的家人，要到加州理工学院这所精致的大学深造。临行前一天，有缘和当年台湾最有名的天才，扬柏因见面。扬柏因刚从MIT回台湾，以4年时间修完博士，为台湾历史上最年轻的博士。在台大时，扬维哲教授是学生最喜欢的老师，扬柏因为扬维哲教授之子，又是台大物理系的学长及当年有名的资优生，未见面前很多人告诉我很多传闻，听说是又矮又小。结果一见之下，居然又高又大。我们聊的很开心，可惜第二天我就飞美国了。</p>
<p>本来怀这雄心壮志到加州理工学院，结果才发现学物理的找不到工作，去拜见物理系的教授，不是不收学生，就是研究经费减少，然后就造就了许多10年的研究生，不时没毕业，就是一直留在实验室作同一个教授的博士后研究员。从商业的角度来看，怪不得读博士学校付奖学金，读MBA则要交学费。</p>
<p>当时我连计算机都不会用，只是理论很行，为了在研究中能生存，一九九二年夏天，一天晚到校园的计算机中心泡在计算机前苦练计算机。有一天，我计算机屏幕上有人从另一台计算机上给我写字，约我和他去喝COFFEE。我望那一台计算机一看，看到一个中国人，个头不高。原来他是中国大陆少年班出来的，12 岁进安徽的科技大学，16岁大学毕业到加州理工学院博士班。我还以为我 19岁来加州理工学院博士班多了不起，原来人外有人，天外有天。但他已经来加州理工4年了，正在写博士论文。</p>
<p>他的指导教授是Tom Prince在美国的计算机天文学中是领导。他们一天到晚有一大堆的资料，从看星星得来，要作数据处理。因为数据真的太多了，他们有时要用PARAGON也就是“超级并行计算机”来作”并行计算”(Parallel Computing)。那时全美国也只有５个地方有这样大计算容量的计算机，加州理工为其中之一。</p>
<p>他告诉我，暑假还是准备开学的考试。考过了，就不必花一年的时间修物理课。越早开始做研究越好。我听他的话，专心准备。</p>
<p>1992年9月，学校便给我们这些新生一个考试，要测定所有新入学者的真实程度，以确定对每个人如何安排，如是要念硕士还是直攻博士甚至是不是要转系。考试的科目为 (1) 古典物理 (2) 量子物理 (3) 数学物理。我前两门得了全班前五高分，数学物理得了第二高分。数学物理最高分的是一位哈佛Harvard来的，大学就和教授做“超弦论” (Super-String Theory)的研究，大学毕业论文就相关的题目，还发表在Physics Review。我虽然一个最高分都没那到，和以前在台大物理系很不一样，我很高兴没丢台湾人的脸。我们那一年受了30个左右的新生，是从全球来的精英。</p>
<p>物理博士生第一年，主要是修课，谁要是不想修也可以，但又得参加免修考试，考过了就可免修考试考的都是很难的题目，那目的可能是要挫一下想免修的人的锐气，要人知难而退，乖乖修读所有课程。考试的科目为 (1) 古典物理 (2) 量子物理 (3) 高等应用数学 (4) 高能物理 (5) 核物理。其中我后4门都用考过的，只有第一们古典物理特别去上Kip Thorne的课。Kip Thorne是近代相对论的始祖，其嫡传弟子包括台湾清华大学名教授倪维斗。</p>
<p>考试证明实力之后，物理系的系主任及教授们都认识我，也给我比较多的自由。系主任有几次请我去爬山，我带朋友一起去。 </p>
<p>这一年我因此而有比较多的空档时间，我把这些时间用来扫描物理学门中比较有发展前途的课题，以决定自己的研究方向。我曾去拜见过叶乃裳教授，叶乃裳教授是台湾有名的才女，当年上过Time Magazine，一个星期工作100小时，以作超导体著名。我一看，她实验室的博士生就是收在机器旁边等数据。我问这位女博士生，何必守在旁边和机器一起等数据，她说机器还是有可能故障，一出故障，数据收集要从新来过。这个女博士生出身不凡，是印度的公主。堂堂印度的公主在自然的面前也没有特权，可见这科学科技真的是凭真本事。</p>
<p>这时我发现，物理学本身几乎处于饱和状态，倒是物理学与生物学交界的学问，很值得研究。那时在这个部门用心的人极少，这就是今天全球正在热炒的生物科技，或称生物工程。</p>
<p>我打定主意，要以生物科技为自己的研究主题。但是问题来了，我根本没有修过大学有关生物学的课程。没有这方面的基础，而想进行生物科技研究，并要取得成绩，实在是不可能的。</p>
<h2 id="从物理转生物科技"><a href="#从物理转生物科技" class="headerlink" title="从物理转生物科技"></a>从物理转生物科技</h2><p>说到这儿，我就要感谢加州理工弹性的教学体制。当我把我的研究计划提出来后，我要求到大学部去上生物课程，这在别的学校几乎是不可能的事，但是加州理工竟然准了，让我用一年的时间，跟生物系的大学生一道修生物方面的专业课，并学习基本的实验。加州理工大学部是有名的天才班，很多11的12 岁的小孩确问最犀利的问题，或能答出教授所问最难的问题。我20岁坐在那儿，已经算老了。这时候我才知道以前和我同学的学长姐们，有何感想。</p>
<p>所谓隔行如隔山，到我亲身从物理学界跨进生物学界，才真正了解这句话的真正涵义。在此之前，我从高中就不念生物，生物只有国中程度，对生物学所知真是有限，待进了大学生物系的课堂，才发现要学的东西多着呢。但加州理工毕竟不一样，教授讲生物思考模式，而不是琐碎的事件，常讲最新的发现，或是自己研究的发现。每一子科的课本中，重大的研究成果好像都从加州理工作出来，课本上面的某某，要嘛是加州理工学校的教授，或是同学的父母亲或亲戚，读起来真的很带劲，让人有一个有为者亦若是的抱负。</p>
<p>虽然物理和生物两门学问，不论在思考学习的模式或实验方法主体上，在科学?相邻最远，但我觉得物理于生物学交叉的部分真是蕴藏着无限的学问，故很愿意花时间下工夫。</p>
<p>但是，任何时候、任何地方，一定有所谓「保守势力」，他们对于具创新意义的事，总有些抵触情绪，连加州理工生物系也不例外。学校批准我这个物理博士生到生物系大学部修课，有些老师、同学都当笑话看，不知道学校在弄什么花样。直到我生物学修课了好成绩，并且用所学得的这方面的知识与物理学结合，做出了很有价值的实验，且取得了可以实用的专利，投射在我身上的异样眼光才收敛掉，这是后话。</p>
<h2 id="得到芯片之父Carver-Mead及诺贝尔奖得主Rudi-Marcus的鼓励"><a href="#得到芯片之父Carver-Mead及诺贝尔奖得主Rudi-Marcus的鼓励" class="headerlink" title="得到芯片之父Carver Mead及诺贝尔奖得主Rudi Marcus的鼓励"></a>得到芯片之父Carver Mead及诺贝尔奖得主Rudi Marcus的鼓励</h2><p>加州理工有一个新建的系，叫 Computation and Neural Systems 计算及神经系统系。这个系的创办人之一叫做Carver Mead，所有电机系出身的没有不认识他的，他是超大型机体电路VLSI之父，也是Intel创始人Gordon Moore的好朋友。Carver Mead是Feynman费因曼在加州理工最好的朋友之一，因为两人的程度都不是一般人的智力能及。Feynman费因曼在死前，在加州理工最喜欢的研究题目，已经不在纯物理的范围，而在Nano-Technology一类用做原子做工程的应用，以及物理和生物的交界尤其是神经科学这种和电有关系的，这正是Carver Mead 毕生研究的范围。</p>
<p>正像很多最杰出的工程师一样，他们觉得最了不起的计算机设计无他 – 就是人脑! 故Carver Mead就想做chips that can see会看的芯片，chips that can hear会听的芯片。Carver Mead觉得要能理解人脑，一定要能建造一个，才表示懂。而人脑如此复杂，一定要把他分成几块，于是能看的这一块，和能听的这一块，都被他抽出来磨拧。Carver Mead用他的研究成果开了很多家公司，多在北加州，靠进旧金山及史旦佛大学一带。有一个公司取名叫Synaptic神经突触，其意不言自明。他在加州理工开课，就是为他的公司培训以后的员工。</p>
<p>Carver Mead曾指导过一个天才女学生，Misha Mohawald，她是第一个加州理工获得最优秀博士论文的女性，也上过美国全国电视网介绍杰出女科学家的节目。Carver Mead和Misha Mohawald 共同作出了第一片能看到芯片。Misha博士后到Oxford拜师Rodney Douglas名下。Rodney为Misha 在瑞士最好的理工大学ETH开了一个系，叫Neuro-morphic Engineering仿神经网络的工程系。Misha于30岁出头，自杀结束了她精彩但短暂的一生。</p>
<p>我研究生第一年修Carver Mead的课。Carver Mead在加州理工是研究生心目中的神。每堂课爆满不说，每个学生都枪要坐前面，而且枪者回答Carver Mead的问题，希望引起Carver Mead的重视。那些学生多是电机系的，而且是加州理工的电机系，功力之高可想而知。我也属于坐前排枪答Carver Mead问题的学生，但高手环视之下，我大学又不是学这个的，出头很难。</p>
<p>不过，全班大概就我一个中国女生。期末，有一次，Carver Mead画了一个很难的线路图，很多平常的高手，不是没回答，或是答错。我一看原来那些答案是错的，我便举手，用了消去法，猜出了一个答案。Carver Mead一听，很高兴，觉得孺子可教也，课后就请我去Athenaem喝一杯小酒。那时快要过Christmas 圣诞节了，去喝一杯小酒很正常，校园大家都在开舞会。</p>
<p>Carver Mead的课是5:00 pm上到 7:00 pm。那一天晚上，7:00多，天色很暗，Carver和我在走在到Athenaem (Athenaem 是加州理工一个教员学生吃饭的地方) 的路上，我向Carver 问起我的偶象Feynman 生前的情形。在Feynman已经去世的情况下，Carver这位Feynman生前最亲近的朋友，感觉上是与Feynman 最相近的人。</p>
<p>我们在Athenaem找了个位置坐了下来。Carver 告诉我许多 Feynman 生前的事情，言语中充满怀友之情。Carver问我打算选那一个研究方向或题目? 我说生物物理方面，但还不确定那一个题目。我物理考试都高分考过，重新和大学学生一起学生物，也修电机系您的课，就是想多了解这个领域。Carver说: 我在班上有注意到你，你一看就是那种很努力，一天到晚想要跳得更高的人，你需要一个教练。Carver 再说: 这样吧，我时间有限，不能亲自指导你，但我的另一个好友，Rudi Marcus，刚的化学诺贝尔奖的那一位，身在学术界，应该有多一些时间与你讨论，你不妨去找他谈谈。</p>
<p>我第二学期就去修Rudi Marcus开的课。Rudi是个很有儒家修养的教授，身为诺贝尔奖得主，并无改变他的生活。Rudi对我非常赏识，提我写了很好的推荐信。</p>
<h2 id="到生物系找指导教授"><a href="#到生物系找指导教授" class="headerlink" title="到生物系找指导教授"></a>到生物系找指导教授</h2><p>1993年，加州理工已公认我是本校物理系与生物系合作的拓荒者。在我之前，这所全美首屈一指的理工名校，还不曾有过一个扮演这种角色的人。至拓出什么名堂来，很多人还在看。但我的名气是不缺，所有生物系的教授都认识我。我很欣慰的是，1998年我博士毕业那一年，加州理工生物系特别成立了一个“生物物理奖学金”，开放给所有希望在物理与生物交界处作研究的博士生，就是像我这种人。</p>
<p>1993年的万圣节，我参加加州理工校园举办的万圣节Halloween Party。加州理工本来就是有名的怪，再加上万圣节这个作怪的节日，怪上加怪可想而知。每个人的装扮不止是面具，披风，有人用玻璃和晶体管把自己围住，装扮成计算机司服器computer server，引起很多人围观。那真的很厉害，从外面看还真的以为是计算机司服器。</p>
<p>我就是在那个舞会上，遇见Steve Mayo我后来的博士论文指导教授，和他的第一个研究生Bassil Dahiyat。</p>
<p>Steve Mayo那时刚被加州理工聘进来当助理教授，他想做一个可以做蛋白质设计的计算机软件。Steve在大学时就写过一软件程序做分子模型模拟，在加州理工念博士时，就是把大学写的软件程序推广，后来和他的指导教授一起成立了一家公司专卖这个软件给学术机构和大公司的研究部门。最后这家公司被 Pharmacopia收购，Steve的股票大赚了一笔。</p>
<p>Bassil Dahiyat大学念的是约翰-霍普金斯，三年就毕业，后来在约翰-霍普金斯又待了两年，不但拿了硕士，还替他的指导教授成立实验室，发表多篇论文。Bassil的专长是Biomedical Engineering生医工程，理论实验都非常厉害，是那一年加州理工有名的高材生。</p>
<p>这两人1993就有一个远景，要把这个蛋白质设计的计算机软件做出来，并且商业化。</p>
<p>我一听，觉得这就是我想做的方向，第二天就去Steve Mayo的实验室和他谈，他也欣然答应受我作学生。因为他就是要找对生物有兴趣，但又能用理论的方式建立模型的人。</p>
<p>那时我是Steve Mayo的第三个门生，Steve Mayo 的第二个门生叫做Jay，是中国科大的高材生，得过科大的最高荣誉之一的郭末若奖学金。但Jay没有选择做蛋白质设计的计算机软件，作别的博士题目。</p>
<p>Steve Mayo，Bassil Dahiyat，和我，三个人就展开了几年蛋白质工程的科技商业化之路。</p>
<h2 id="我做出了一个经典生物物理模型"><a href="#我做出了一个经典生物物理模型" class="headerlink" title="我做出了一个经典生物物理模型"></a>我做出了一个经典生物物理模型</h2><p>Steve Mayo的实验室才刚开张，由于Steve在计算机方面的功力和成功的科技商业化 (Technology Commercialization) 成功经验，实验经费相当宽裕，尤其是私营的研究经费。Steve用了这些经费先买了好几台计算机，SGI，Sun，Mac，各种版本的都有，编译器也是有Fortran和C语言的。也买了一台600的NMR全美只有最专业的地方才有。其它的实验器材在慢慢的采购之中，实验室每天茁壮成长，渐渐成型。</p>
<p>那时，有个名气很大、人也非常好的犹太教授亨利-乐斯特 (Henry Lester) 和他一个超强的，从以色列来的犹太博士后研究生瑟拉-美革 (Sela Mager) 他们有非常稀有的数据，从某稀有蛋白质 (neuro-transmitter transporter)上量到。这种蛋白质，对了解药物上隐，有很重要的药理功能。他们希望对这一类的蛋白质输送分子的行为，做一个动力模型，以方便日后科学家对药物上隐学的研究。有一天，他两走进我们的实验室，找Steve谈。因为这个模型的建立需要用计算机，写程序，是Steve的专长。</p>
<p>Steve那时正亲手写一个快速寻找的计算机程序，没有这个程序，蛋白质设计的计算机软件是无方运做的，故在等这个程序的过程中，Bassil和我都先做其它的项目。Bassil和Beckman Institute 的一个实验室合作，做实验。我则在Steve，Henry和 Sela，的同意和指导下，开始我的第一个研究计划，为他们的实验数据做一个模型。</p>
<p>制作生物学模型须依助计算机。当时我的计算机功力还不强，还没有完成过高级的设计。正在这时候，一个计算机方面的厉害角色，出现在我的身边。</p>
<p>这个人叫Erik Winfree，是个德国裔的犹太人，只比我大两岁。他在计算机方面不是普通的高强，真称得上是圣手级。Erik的父亲Art Winfree是有名的教授，得过McArthur (Genius) Award，在美国那个叫天才奖。Erik也替 Mathematica 的创办人，也是加州理工前校友，另一个天才 Steve Wolfram 做过程序及研究。这种背景，计算机与逻辑的功力真是无庸置疑。Erik在拿到博士学位后，立刻被加州理工聘为教授，这是极少极少有的事。有其父必有其子，他后来也拿了一个McArthur (Genius) Award。</p>
<p>Erik和我常常就这个模型讨论，也在计算机方面给我的指导。Henry和 Sela 也很够意思，每有新资料就喂给我的模型。Sela 和我也经常就这个模型进行讨论。讨论到一定程度是，就报告给Henry看还有没有要改进的地方。他们本来只要解释他们自己的数据，结果看哪个模型越来越厉害，连他们还没测量到数据也可以预测，就变本加厉把别的实验室量到，有关这种新潮蛋白质的资料也拿来看我们的模型是否能解释。给他们这样一搞，这个模型把那时所有的数据都不但解释，而且预测到了。</p>
<p>我所做出的这模型，不但可以解释Henry和Sela他们发现的现象，还可预测一些别的新的实验现象，这些预测到的现象，后来在其它的实验室如UCLA的名实验室中被发现，因此我做的模型在生物学界相当轰动，Henry 和 Sela到那一阵到什么地方都讲这模型。</p>
<p>Henry 和 Sela 这两个老犹对我完成的工作满意极了，他们在我毕业后为我写求职推荐信时，把我写得非常完美。 Henry 和 Sela是很典型的犹太人 (Henry 的儿子取名叫 Ben，可想而知) 我为此不但对他俩，也爱屋及乌，对所有的犹太人充满预先的敬意。</p>
<p>1995年，我从加州理工发表的第一篇科学论文，就是说明这个模型所统合的各种现象。</p>
<h2 id="我用分子生物学的方法从事蛋白质工程研究"><a href="#我用分子生物学的方法从事蛋白质工程研究" class="headerlink" title="我用分子生物学的方法从事蛋白质工程研究"></a>我用分子生物学的方法从事蛋白质工程研究</h2><p>我和Henry 和 Sela的合作，实验资料是他们提供，我自己是一个实验也不用做。生物学为何初学时感觉是很多片面的知识，因为实验是生物学的基础，生物学便是由这些实验结果基类出来的。如果只是用记忆实验结果的方式，而不去探讨为何会去做那样的实验，是无法了解其精髓而为己所用的。</p>
<p>蛋白质工程和一个纯生物物理模型的差别，是一定要有实验数据来证实或推翻一些假设。用已证实或推翻的假设为基础，再往上堆积。我从 1993 年到 1994 年，陆续修了一些大学部的实验课程，从最基本的 Pipetting (一种实验仪器)开始学。这是最基本的蹲马步，问题是这些学会了之后，和真正能设计自己的实验，并完成这些实验取得可信的实验结果，是两回事。</p>
<p>实验最恐怖的是变因太多，当你以为都想好时，可能结果跟你预期的不一样，因为还有你没想到的变量。故可能要多做几次，才看到所有没考虑到的因素。这时，一要耐心和体力，二要经费。实验是非常耗费金钱与资源的。随着实验越做越多，技巧越好，越能越快得到好的数据。所以一般的指导教授喜欢找有经验的实验研究生，如果以前没有做过实验，没有经费的指导教授是不愿意让这些学生浪费钱的。因此，我从进入 Steve 的实验室开始，无时无刻在想我要如何说服 Steve 和 Bassil 能让我做实验。</p>
<p>Bassil 是做化学实验出身，可以在不用仪器之下，做出很长的蛋白质。但若要更有效的做出更大的蛋白质，必须买仪器 (peptide synthesizer)。但再大的蛋白质，就的用分子生物的方法，买 Oligonucleautide 用 PCR 技术备份，再把这些 DNA 和载体 (Plasmid) 都用效素在特定的地方切，再用粘效素 (ligase) 把 DNA和载体结合。这种 Recombinant DNA 进入细胞以后，就利用细胞现成的机制，把 DNA 变成蛋白质。这个蛋白质从细胞中做出来，到纯化，到干干净净又大量的能进入试管中，做生物物理的定量研究，如 Circular Dichroism 或 NMR 核磁共震，又需要很多人力。 这就是所谓的 Genetic Engineering 基因工程，是蛋白质工程?面很重要的一环。</p>
<p>为了让这个蛋白质设计软件不止是个理论软件，其设计结果有实际用途，我们必须把软件设计出的蛋白质序列从实验室中做出来，然后用生物工程的仪器，如Circular Dichroism 或 NMR 核磁共震等，测出所设计蛋白质的性质，如抗热性，稳定性，结构，等等，来看看软件设计的结果如何。软件设计的结果如果不如预期，我们便要调整软件?的参数，重新再预测新的蛋白质序列，重新再做实验，看结果如何，一直到软件?的参数能够值得信赖地预测出设计者要的蛋白质。</p>
<p>在我开始做实验之前，Bassil 都是用化学的方式，用 Peptide Synthesizer 把蛋白质做出来。这个方法对于小一点的蛋白质可以，但对于大到 60 个 amino acids 左右的蛋白质就不行了，因为 coupling efficiency 不够，产量太低。所以非得用基因工程的方法。我们实验室?，从来还没有人用这种方法做成功过。</p>
<p>我因为设计的蛋白质有 56个amino acids，起初用Peptide Synthesizer 做产量太低，根本无法量产到够做后来的测试实验。而且这种方法非常贵。我只好想办法用基因工程的方法。</p>
<p>我们实验室有一个学生，以前是 UC Davis 生物系大学部的高才生，她不做蛋白质设计的软件，做别的题目。我和她研究这个基因工程要如何做法。她给我画出了实验步揍，我去买了实验原料，照着她画的步揍做。一开始总是做不成，前面的几个不揍还可以，但到了粘接的步揍总是不成。我再查了其它的书，和其它实验室的朋友请教，把每个实验步揍需要的时间，非常精准地写下来。然后带着一个定时器，只要定时器一响，就算是凌晨 3:00，我也照样从床上爬起来，从宿舍走到实验室进行下一个步揍。很多时后我干脆睡在实验室。这样过了几个星期，居然被我弄成了第一个蛋白质成品。这也是我们实验室第一次用基因工程的方法做出来 – 被一个理论物理出身从没作过生物实验的人做出来。从此 Steve和Bassil对我刮目相看，不但不阻止我做实验，还尽量鼓励我多做几个。</p>
<p>原来以前实验室没有半个人做出成果，是因为不按照时间来。可能凌晨 3:00 该起来做下一步时，他睡到上午 8:00。或者星期五晚上，该做下一步实验是，他去吃饭跳舞。只有我这个笨蛋，愿意随身戴一个定时器，照着自然的规矩来。等我熟能生巧后，我就可以安排做实验的时间，而不必再过那种非人的生活了。</p>
<p>这样的日子足足过了三年。那段时间，有两次爸爸、妈妈从台北到美国来看我，我竟然抽不出时间到旅舍去会他们，他们到学校?来，我也只能匆匆跟他们打个照面。他们心疼得不得了，尤其是我妈妈，我看到她的眼睛一离开我，就在掉眼泪。</p>
<p>很多人也问我，Alyce，你为何一个博士花了那么久才拿到。其实，如果我愿意选一些无足轻重的题目，随便弄个计算机模型跑一跑，也可以毕业。这种博士有很多的。但我选择了硬干，从一个理论物理学家，一个生物实验都不懂，到做出实验室第一个基因工程的实验，我向一个重要却困难的题目挑战，而得到了好的成果。现在很多人知道我是台湾最历史上最年轻的女博士，一来现在大家都去念 MBA 了，二来，如果那是我入加州理工的志愿，我还可以更早毕业。</p>
<p>现在，「蛋白质工程」在学术界已是很红、很热的题目，可是在我起步的那时候，我却是孤独的。</p>
<h2 id="蛋白质工程研究成果得奖"><a href="#蛋白质工程研究成果得奖" class="headerlink" title="蛋白质工程研究成果得奖"></a>蛋白质工程研究成果得奖</h2><p>1997 年初，我还没有完成博士学位论文，也就是尚未毕业，但我发表的蛋白质工程相关论文，已使美国的学术界注意到我这个人。麻州理工学院有个大大有名的教授卡尔-柏波(Carl Pabo)，是诺贝尔奖评审团的委员之一。我的博士论文指导教授Steve Mayo由于只是助理教授 Assistant Professor，要升正教授，其研究成果必须得到美国研究领域最上层的认可。卡尔-柏波就是这类权威人士的代表。于是Steve Mayo便请 Carl Pabo由东岸的麻州理工学院飞到西岸的加州理工学院来亲自审核我们实验室的研究成果。</p>
<p>Carl Pabo来时，时间排得很紧。既有安排他的专题演讲，每个加州理工学院的教授们，尤其是年轻的助理教授，都排队要见他。应届毕业的研究生们，想继续在科学界找工作的，都抢着要当他的招待。那时因为Carl Pabo是我的博士论文指导教授请来的，而我的研究成果，和Bassil Dahiyat 的都是我们实验室研究成果的代表，我有幸和一些应届的精英研究生和Carl Pabo一起用中饭。</p>
<p>我向他解释我的研究题目及结果，他认为我的题目选得很好，不但把古代和现代经典的研究方法连在一起，有实验结果证实这套方法的可行性，并兼具研究及商业的价值。</p>
<p>以他在科学界的地位，能被他注意到，是非常不容易的。经过他一品题，身价就不只暴增十倍了。由于柏波教授的推荐，我得了美国蛋白质学会的学术奖。这个奖颁给我这个二十出头的「黄毛丫头」，让学术界大感意外，因为这个奖在美国蛋白质学术界是很崇高的，许多人在争取，不够天分的科学家可以为它努力了一辈子还得不到。</p>
<h2 id="柏波提示我走从商之路"><a href="#柏波提示我走从商之路" class="headerlink" title="柏波提示我走从商之路"></a>柏波提示我走从商之路</h2><p>当天下午我的博士论文指导教授 Steve Mayo 赶紧把Carl Pabo拉到他的办公室，好好地讲解他的研究成果一番。那天下午我恰好身体不舒服，先回宿舍休息。傍晚忽然来了一个电话，是Steve Mayo打来的，问我晚上去哪里吃饭。我正纳闷，因为Steve Mayo向来不打电话到我宿舍的。结果电话那头忽然转手，Carl Pabo把电话抢了过去，并说“把中间人干掉 (Let’s eliminate the middle-man)”他问我晚上可否和他单独一起用餐。</p>
<p>这个机会是多少人求之不得的，我当然说好，虽然我身体不舒服。</p>
<p>遵照他的吩咐，我替他带来一些素食，到他下榻的Athenaem去。他坐在床上打坐，我坐在和床离一段距离的书桌旁边的椅子上，和他聊天。</p>
<p>我当时知道以自己的能力，不论想往何处发展，总是有志者事竟成，连理论物理都能转到实验生物科技。但我对是否留在科学界，有很大的疑问。我的个性喜欢和人打交道，作研究太孤独了。我那时已经开始看华尔街日报，也觉得华尔街日报的内容很有意思。但加州理工学院是一个非常与世隔绝的地方，连商学院都没有。我不晓得原来我的性向是喜欢从商的。</p>
<p>Pabo告诉我，他在科学界这么久，他觉得科学界和宗教最像。如果我决定在科学界发展，他以爱才之心，愿意全力帮我。但柏波又说：“科学界的天才已够多了，天才们想出来、做出来的东西，要放到市场?，做最好的推广，让许多人能够享用，这件事也要有天才去做”。</p>
<p>他这话让我觉得很有意思，只是我从小到大做的都是科学家梦，现在已到了实现的边缘，这时要换一个大方向，真有点不知从何说起的感觉。</p>
<p>柏波教授再说：“你考虑一下我的建议罢！我有一个学生叫Philip Ma，过去在我的实验室表现得很优秀，但大学在英国牛津念生意的，一天到晚看华尔街日报，后来被招进了麦肯锡公司，居然有更杰出的表现。如果你想走这条路，我可以介绍他跟你谈谈”。</p>
<p>过了几天，柏波的这个学生Philip Ma菲立甫-玛，果然打电话给我。跟菲立甫一谈，我才知道在科学之外，还有一个宽广而多彩的世界，商业是一个足可与科学抗衡的行业。我也才知道了麦肯锡公司是干什么的。这些东西引起我很大的兴趣。</p>
<h2 id="用蛋白质工程研究成果换取美国绿卡"><a href="#用蛋白质工程研究成果换取美国绿卡" class="headerlink" title="用蛋白质工程研究成果换取美国绿卡"></a>用蛋白质工程研究成果换取美国绿卡</h2><p>1997年中，我的博士论文大纲及相关数据都已准备齐全，要写的话可以很快写完，也开始想加州理工毕业之后该做什?。这时我发现没有美国绿卡是多麻烦的一件事。 不但很多奖学金，很多工作，都无法申请，而且也听说很多老板会故意拖延替你申请绿卡的程序或种类，如此他可以多用低薪留住你，使得许多移民都是廉价劳工。一个中国人，在美国只好照美国的规矩。那时我一心想在美国工作，绿卡非常关键。</p>
<p>那时美国也体认到高等智慧移民的有用，故开了一个新的移民种类，叫National Interest Waiver 国家利益豁免，是Alien of Exceptional Ability杰出人才的一种。 </p>
<p>我听说加州理工的华人博士生圈中已有几个案件通过了，以上述的方式得到绿卡。我便向他们请教。原来重点是研究成果和推荐信，这个我不缺。从美国国会议员，诺贝尔奖得主，大公司老板，名教授，都不吝大力推荐。我照着这些华人朋友的范本，把这些推荐信放入。幸运的也通过了，以此获得美国绿卡。</p>
<h2 id="蛋白质工程研究成果申请专利，向创投公司融资，开生物科技公司XENCOR"><a href="#蛋白质工程研究成果申请专利，向创投公司融资，开生物科技公司XENCOR" class="headerlink" title="蛋白质工程研究成果申请专利，向创投公司融资，开生物科技公司XENCOR"></a>蛋白质工程研究成果申请专利，向创投公司融资，开生物科技公司XENCOR</h2><p>1997年底，我的博士论文已全部完工。论文题目是：「Coupling Backbone Flexibility and Amino Acid Sequence Selection in Protein Design」，这已不是物理学的论题，完全偏向生物科技尤其是蛋白质工程方面，但是因为我进学校时是由物理系收我的，所以我仍被列为物理学博士。</p>
<p>Steve和Bassil作的成果也被发表在Science杂志。此时，他俩正积极的为他们的研究成果申请专利，找创投公司融资，开一家公司叫 XENCOR。这时我才发现，我辛苦了这?久，把我的青春放在实验室?这么多年，也为他们作出成果，原来一点股权也没我的份。Bassil说，为了保险起见，他希望为我申请专利，然后XENCOR 可以向我申请专利，付我专利金。这个意思就是希望买断我所做的蛋白质设计的研究成果，以免那一天我自己找到了风险投资家融资，和他们竞争。Steve 也从此不在公开科学发表场合介绍我的研究成果。我一个手无寸铁的博士研究生，能有什么还价的余地呢? </p>
<p>从那时开始，我义无反顾的踏进商业界。</p>
<p>XENCOR 目前是美国生物科技界一个被视为很有前途的事业，Bassil是CEO。很多台湾的风险投资家都知道 XENCOR 这个公司，也很想再去投钱。很多作生物科技创投的朋友，也会把手上的营运计划让我看，让我来帮忙评估，因为像我这样有踏实生物科技背景，再加上有日后 McKinsey 和 Goldman Sachs 的工作经验的，实在不多见。</p>
<h2 id="创办领导加州理工学院的Case-Practice-Group进军麦肯锡"><a href="#创办领导加州理工学院的Case-Practice-Group进军麦肯锡" class="headerlink" title="创办领导加州理工学院的Case Practice Group进军麦肯锡"></a>创办领导加州理工学院的Case Practice Group进军麦肯锡</h2><p>1997年9月到1998年6月的毕业典礼，是我一生很大的转折点。25岁之前，我从来不觉得钱很重重要，甚至对钱一点概念都没有。这一年，一来看到自己的博士论文指导教授在钱的面前，对自己的学生是一点也不保护。同时又开始接到爸妈从台湾的一些电话，问什么时候可以开始找工作，赚钱，买房子。真是废话。我那时只恨为什么没有人早告诉我这些东西，我的那些时间可以用来学如何赚钱的，都被浪费在实验室?。然后，一个加州理工博士又能卖到多少钱? </p>
<p>我以壮士断腕的心态，打定主意，非从商不可。</p>
<p>从商，对一个加州理工博士谈何容易? 所有美国顶尖的大学都有商学院，就是加州理工没有。我那时知道唯一有名的商业团体来做校园征才的就是 McKinsey 麦肯锡咨询公司。我想，加州理工可能有一群想从商的人，我一定要把这一群人找到，聚集在一起，互相学习，分享资源，在最快的时间内找到好的商业工作。</p>
<p>因为麦肯锡在面试时，很重要的一环，就是所谓的Case面试。这些Case是真实商业界里面大公司会遇到的问题。麦肯锡就是以这些 Case来淘汰那些没有商业感business sense的博士生。因为我那时一心想进麦肯锡，故把这个团体取名为Case Practice Group，顾名思义，就是让大家一起来收集，练习，以破解麦肯锡考博士生的Case。</p>
<p>我建了一个网站，解释了Case Practice Group的宗旨，活动方式，也放了一些收集到的考题，我这个创办人的电子邮件以供大家联系。然后做了很多海报，一点也不华丽，就是白纸黑字，把网站的内容及网址放上，然后自己一张张的贴在校园最显眼的地方。1997 年那时网站还在学校酝酿，没有掀起后来的网络疯狂 internet frenzy。我那时就发现加州理工这种地方，用网站和电邮是最方便有效的广告及联系方式。</p>
<p>我一提出这个建议，尚根本不是「登高一呼」，竟然有廿七个人写电邮给我来报名参加。加州理工很少有这样大的社团，特别是以研究商业为目的的社团，我这个物理学博士候选人，理所当然的成了这个社团的头。我举办了第一次的社团聚会。</p>
<p>这时有人在我们的社团活动中提出，现在好像有一种趋势，许多大银行、证券公司、咨询公司，常到学校中来招收学自然科学的人，似乎对数学程度好、反应快的人特别有兴趣。而过去，这类单位只在社会科学的范畴招人。</p>
<p>这个问题提出来后，引起整Group成员强烈关注。因为加州理工的毕业生以往的出路，几乎固定是科技界，而现在科技界似乎有人才饱和现象，不但求职难，而且入了行待遇也不高，比不上金融业，甚至只及四分之一到三分之一。</p>
<p>大家的共同认识是：我们既然是在美国这个大共同体?，无论在那一行服务，都是在促进美国的利益。而资本主义社会?一切价值都是以钱来衡量，包括知识都是如此，获得的待遇高，那意思就是获得社会比较高的肯定。有了这个共识，我们这个Group的成员，就不再把求职的范围限制在修习的本行了。</p>
<p>经过一番酝酿，Group的多数人，竟然把进麦肯锡咨询公司当成了第一志愿。我们觉得这个公司很特别，它本身并没有商业业务，甚至严格禁止它的成员介入工商活动，它只是为各行各业的单位提供咨询，也就是提供卓越的知识，来换取金钱。进入这个单位，我们过去所受的训练及修习得的知识，可以得到比进入本行更好的发挥。</p>
<p>于是，我们开始搜集麦肯锡公司过去招考新人时的考题，加以解析，大家一道研究出最合理的答案。不但如此，我们还想办法请了历届被麦肯锡录取的加州理工学长姐们，分享他们的经验。我设立了一个团体电邮，把这些会员的电邮放在一起，大家要互相联络，就把自己的问题或经验透过这个团体电邮分享。我则把每次搜集到的麦肯锡的考古题和解答提示放到了网上。我们并定期准备相互练习的机会，即大家聚在一起，两两一组，进行角色扮演，互相扮演面试者及应试者。</p>
<p>我可以看网站是谁在看，而知道谁有兴趣。一开始不过是会员在看，后来加州理工 Career Development Center 就业辅导中心也在看。后来这个社团名声大了，连麦肯锡的人都上来看了好几次。</p>
<p>我参加麦肯锡的口试，通过第一轮校园口试。第二轮在旧金山举行。第二轮有一个麦肯锡董事 Principal 问我。他第一句话就说「阿丽丝小姐，你确实很厉害，我们都知道你和你办的 Case Practice Group 但我们希望你回去后，能把麦肯锡公司招人可能考的问题从网上拿掉」。</p>
<p>那年麦肯锡没有录取我，但是，加州理工所有被取的学生，都是我的Group的成员。</p>
<h2 id="麦肯锡McKinsey-amp-Co。梦碎进军华尔街"><a href="#麦肯锡McKinsey-amp-Co。梦碎进军华尔街" class="headerlink" title="麦肯锡McKinsey &amp; Co。梦碎进军华尔街"></a>麦肯锡McKinsey &amp; Co。梦碎进军华尔街</h2><p>当麦肯锡没有录取我之后，我才开始注意到华尔街的校园征才。那时虽然听说高盛公司Goldman Sachs &amp; Co。是华尔街的老大，可惜已经错过高盛公司在加州理工进行的第一轮面试。虽然错过了高盛公司，但幸好还赶上了投资银行Salomon，和避险基金如Long Term Capital Management (LTCM)，和D. E. Shaw等，在加州理工进行的第一轮面试。 </p>
<p>那时康奈尔学“超弦论” (Super-String Theory) 的钟威已经弃物理转华尔街了，在 Morgan Stanley 替人家作金融工程及模型 (Financial Engineering and Modeling)。我打电话向他请教，他说，理工科的博士去华尔街要很小心，在面谈时要注意是面谈金融财务方面的工作 (financial engineering)，像他一样，或者只是提别人写计算机程序 (computer programmer)。 如果只是提人写计算机程序，你可能一辈子都翻不了身。 </p>
<p>Salomon是其分析能力最有名的 Yield Book部门在招人。Yield Book 是Salomon 对所有市场参与者提供的金融软件，上面有华尔街常用的所有金融模型，让使用者都能作产品定价及风险管理。 </p>
<p>Salomon在所有加州理工第一轮面试考了一大堆数学问题，只选了三个人非到San Francisco做第二轮面试。我一到San Francisco 才发现所有西岸有名的学校如Stanford，Berkeley第一轮通过的人，都在一起。这时候Salomon比较资深的长官都出现了，技术上的问题问得少，但重视你对Salomon的了解，和你是否有其它地方的面试。我那时为了Salomon的面试，特别买了一本“Liar’s Poker” 来看。同时我也被华尔街当时最有名的两家LTCM 和D. E. Shaw避险基金请去Greenwich 和New York 做第二轮的面试。 </p>
<p>华尔街是特别讲究市场效率的地方，他们特别喜欢互相抢。他们看上的通常是最好的，也以比谁抢到最好的货色为傲。Salomon 一听我和LTCM 和 D。E。Shaw 都会在东岸进行公司内面试，二话不说，也叫我去 New York 总部面试。我去了New York 之后，才知道我已击败Stanford，Berkeley 的博士们，是西岸的代表。 </p>
<p>Salomon 这份工作不是好拿的，因为这个工作不写计算机程序，而是为 Yield Book Group 作金融模型，尤其是 Term Structure 和 Prepayment Modeling。华尔街在交易方面对金融模型非常注重，因为如果你的模型错了，你就回用高价买进低价货，或用贱价出售高价货，让别人赚钱，你就要关门了。理工科的博士生如果想进华尔街翻身作金融，这是一个很好的跳板，怪不得挤破头。很幸运的，决定这份工作的人是亚洲人，也喜欢我，在所有人都势均力敌的情况下，把唯一的工作承诺给了我，年薪十四万美金。纯写计算机程序的工作，后来给了加州理工的另一个大学毕业生。 </p>
<p>有了Salomon的工作承诺之后，我还是必须与LTCM和D. E. Shaw这些避险基金作最后的面试。“Liar’s Poker” 这本书写的是 Salomon 以前的超级债?交易员 (这些人有个不太雅的统称，叫大老二 Big Swinging Dick)，这些书本上的人物，我竟然在 LTCM 都见到了。LTCM 的合伙人Greg Hawkins 是书中的一员，亲自来加州理工挑人，挑了我和其它两个人去Greenwich。LTCM 的办公室在 Greenwich，是东岸很多有钱人住的地方。但我在西岸天气好的地方住久了，看到不管是Greenwich 或 New York 都很不习惯和害怕。东岸很冷，Greenwich 的树都枯了，New York 人好多又都是摩天楼，让我这个从西岸来的乡吧老很害怕。D。E。Shaw是华尔街有名的 Quant Shop里面全是数学竞赛冠军。我和LTCM 和 D。E。Shaw这些避险基金都谈得很好，因为大家都一样会算数学。LTCM期望我能去日本。当时我因在加州有个很好的做独立电影导演的男友，故希望留在加州。 </p>
<p>1997 到1998 年，加州理工新出炉的博士的行情，一般是八万美金一年，十四万已真是高薪。当我从纽约回到巴沙底那，准备收拾行装去赴任的时候，在校园?碰到一个学长，他向我说，Newport Beach新港有一个叫Pimco的投资管理公司有一个美金廿万年薪的工作机会（Pimco 是Pacific Investment Management Company 太平洋投资管理公司的简称）。 </p>
<p>那个学长来头不小，叫Oleg，俄罗斯人，是加州理工应届独一无二的金融博士，以前代表俄罗斯参加全世界的数学奥林匹克竞试，得过第一名。他去Pimco应试后，Pimco惊为天人，给他美金廿万年薪。但他没有接受，因为他想留在学术界。加州理工内又很多像这样的怪才，天赋异秉，但对钱完全不稀罕。 </p>
<p>我想，他不去，那我去试试看。于是我向那个学长要了Pimco的地址和联络人，马上写信过去。 </p>
<p>我的信发出不过一两天，就接到了公司的回信，要我去面试。 </p>
<h2 id="一星期内搞懂“衍生性金融商品的圣经”进入PIMCO"><a href="#一星期内搞懂“衍生性金融商品的圣经”进入PIMCO" class="headerlink" title="一星期内搞懂“衍生性金融商品的圣经”进入PIMCO"></a>一星期内搞懂“衍生性金融商品的圣经”进入PIMCO</h2><p>新港离巴沙底那不远，开车也就是一个钟头左右。我开着一部1983年美金1500元的Chevy烂车，有点怕半路抛锚。车一开进新港，马上天空澄蓝，马路平坦宽阔，和风徐徐，恍如室外桃园。令我感觉最深的，是和巴沙底那及落山机比起来，忽然好车如龙，BMW，Mercedes，Porche，Jaquar 最多，Ferrari 也偶有。我那一个大Chevy烂车在中间真的格格不入。海边望去，还有许多游艇和帆船。旁边的 Fashion Island 有最贵，最新，最高档的限量欧美服装。 </p>
<p>新港是美国最有钱的人退休圣地之一，和东岸的 Greenwich 并提。怪不得很多退休金管理公司都在这?。在巴沙底那及落山机常见的墨西哥人，新港半个都看不出到。也几乎没有亚洲人，全部是白人。更不用说是非裔美人了。 和东岸华尔街严寒枯黄的景象比起来，新港的感觉真像天堂。我心想，若能在这?工作居住，该有多好。 </p>
<p>在PIMCO见到的第一人是一位金发年轻的帅哥，坐在一个大办公室，年纪么约三十出头，已经是Executive Vice President。他和我寒暄了一下，忽然话锋一转，问我一些数学问题。我回答的很好，他又问了一些金融问题。我对金融的问题其实不很懂，但是我告诉他我会用如何的思想架构去解决这样的问题时，他可以感到我有天分，但没有受过正规的金融训练，故从书架上拿了一本书，向我扬了扬，问我以前看过这本书吗？ </p>
<p>我接过那本书看了看，那本书就是Hull and White on Derivatives，我听过华尔街的钟威学长提过，但在加州理工书店内找不到的书。我老实告诉他，我听过，但从来没有真正见过这本书。 </p>
<p>那位先生说：「我发觉你确实很聪明，数学能力超强，现在我想测试一下你的理能力和吸收能力，你把这本书拿回去，好好念念，一个星期后来跟我们讨论」。说完，我知道这一场口试已结束了。 </p>
<p>那位金发年轻的帅哥是 PIMCO 的大红人，年纪轻轻就爬到很多人一辈子也爬不到的地位，几百万美金的年薪，我离开PIMCO 的那一年，他被封为 Partner 是PIMCO 有史以来最年轻的Partner。他本来在 Upenn 的 Wharton 从大学部直升博士班，是金融科的助教，也教 Executive Education 中的管理层们如何应用金融，Wharton 上上下下都认识他，故博士班才进了一年，就被华尔街挖走了。就是他和加州理工的Oleg学长惺惺相惜，给了Oleg 美金二十万年薪的工作承诺。Oleg 给我 PIMCO 的联络人就是他。 </p>
<p>当天还有两个面试，两个都是 PIMCO的Partner。一个以前在Salomon一个以前在Goldman Sachs。PIMCO 的最上层，很多是以Salomon的超级债权交易员，即 Liar’s Poker中所称的大老二 Big Swinging Dick。他们告诉我，PIMCO 是非常独特的地方，不召中间的管理层，但用比华尔街还高的价钱，华尔街最好的有多年经验的人才做最上层投资管理员 Portfolio Manager。每年新进的金融工程师最多只招一个。在华尔街每年新进的人很多，要和上层的人见面不易。PIMCO 的好处是新进的人少，如果你真的有本事，出头很容易。 </p>
<p>我拿了那本Pimco方面给我的书回到巴沙底那，好好把它翻了一下。所谓隔行如隔山，我对那?的内容几乎没法领会。但是，这件事是我自己找上去的，在这个「难」字面前，我怎么能退缩？时间还有一个礼拜，我就好好拼一下吧！ </p>
<p>中国古训有：「天下无难事，只怕有心人！」那本Hull写的大书，竟被我在一个星期中弄清楚了。我如期前往Pimco。 </p>
<p>Pimco 是一个非常有效率，注重实效的地方，我第二次到公司，二话不说，就被带入一个房间考试。考了一个上午 Hull 那本书的内容。题目是一个俄国人，Yuri，出的。Yuri 比我早进 PIMCO 几年的金融工程师，是 Chicago 物理博士转念 Chicago Business School 的金融MBA，他把以前Chicago Business School 的期末考题目拿来考我。 </p>
<p>我很冷静地定下心来，接受考试，结果，我考了将近满分。这个公司录用了我，年薪比照加州理工的Oleg学长。我不得已告诉 Salomon 那位对我很好的亚洲主管，我选择到 PIMCO。虽然说这句话不容易，尤其Salomon的那个工作承诺也是费尽心血拿下来的，我想，把Salomon 的机会给了另一个需要那份工作的人，也是好事。 </p>
<p>后来我才知道，Hull那本书，在ＭＢＡ课程中要念一年，而且得有教授讲解。我进了Pimco之后，Yuri 这个自负的老俄 Chicago Finance MBA 加物理博士 对我说：「你一个星期能读通那本书，程度还算不错」！ </p>
<p>1998 年最后一个学期，我到加州理工的金融系修了一个 Option Pricing，就是OLEG 的指导教授开的课程，用Hull这本书，我得了一个A+。 </p>
<h2 id="我在PIMCO受的训练"><a href="#我在PIMCO受的训练" class="headerlink" title="我在PIMCO受的训练"></a>我在PIMCO受的训练</h2><p>1998 我年从加州理工毕业之后进入PIMCO，搬到 Newport Beach 新港居住，正式脱离学校的生活，开始了我从商的第一步。PIMCO 给我很好的加入红利 Signing Bonus，我便拿这份钱买了一部金色的敞蓬车，也照着新港的衣着规距 (dress code) 置装。后来麦肯锡台北公司把我评为衣着最优雅 The Most Elegant Dresser，很多高盛的客人也夸我的打扮有高贵有气质，这都拜新港的文化熏陶所赐。 </p>
<p>PIMCO 是个很了不起的公司，因为他付的钱比华尔街还高。在华尔街这种完全金钱导向的文化下，PIMCO 是最了不起的公司之一当之无愧。PIMCO 招进来的人很少，最上层都是重金请来华尔街有多年经验最好的交易员 TRADER 做PIMCO 的 Portfolio Manager。这些华尔街最好的交易员之所以会从华尔街跳槽到PIMCO，没有钱是不可能的。我进来的那一年，他们从高盛招了一个在高盛有名的交易员，他和他在 New York 华尔街的朋友最常用来介绍PIMCO 的字眼，就是 “Upside better than Goldman Sachs 最上层比高盛付得多”。Allianz 把PIMCO买下来时，就以5年美金两亿 US$ 200 mm GURANTEED保证拿到的薪水签下PIMCO的大老板，Bill Gross。 </p>
<p>PIMCO把这些华尔街最贵的交易员买来后，全部放在交易室Trading Room?面。这个交易室是非常小的房间，是 PIMCO 最神圣的地方，所有的客户的资产超过美金两千亿 US$ 200 bn，就是在这个小交易室统一管理。我进PIMCO时，他们给我的头衔是 Financial Engineer 财务工程师，阶级在Portfolio Manager底下，做Portfolio Manager的助手。在我之前，Financial Engineer 是不给进交易室的。那位金发年轻的帅哥 Executive Vice President 对我特别好，把我招进PIMCO后，便安排我进交易室实习。 </p>
<p>PIMCO 的交易室早上4:30就有人在，还不算前一晚上留在交易室的，5:30 每个人一定到齐，6:00 进来就算晚了，每一天都如此。PIMCO有一个非常兢兢业业的投资文化，和军队差不多，重视纪录。害我每天天色还没亮就摸黑爬起来，开着金色敞蓬车从山上下来，一定敞蓬，让冷风把我吹醒。 </p>
<p>我进交易室是见习性质，还不能跟华尔街方面对话，但可以在看了银屏上的数据后，向上级提出意见。PIMCO 对我很好，让我从第二支电话听他们和华尔街的谈话来学习。因为PIMCO是华尔街的大户，一举一动若不小心会移动市场，故行动快速低调。华尔街的大行，对PIMCO非常尊敬和害怕，给PIMCO取名叫“沉没的鲨”（Quiet Sharks）。 </p>
<p>我在交易室待了一段时间，主要负责三个部分，CMO (Collateralized Mortgaged Obligations)，Treasury Derivatives，和International bonds。负责这些产品的 Portfolio Manager 如果想知道产品的实际价值，Financial Engineer 就要用现成或已有的模型算给他们看，让他们比较我们算的价钱和华尔街的价钱差多少，差在哪里，我们和华尔街的假设有什?不同。他们多年的经验给他们很好的直觉和自己的一套方法，他们向我们要的是一种 Bottom Up 由下往上的建议。 </p>
<p>因为PIMCO 是买方，华尔街是卖方，PIMCO 送我到华尔街去受训，一来是买方该尽量利用卖方的资源，二来是要多和华尔街打交道，知道并提升自己的程度，三来是最好把华尔街有名的模型学会，搬到PIMCO来。PIMCO这种公司，要赚他的钱还真不容易。在 Mortgage Backed Securities 方面，Bear Stearns 和 Salomon 两家特别强，所以我就常去。 </p>
<p>Bear Stearns 有一次办完培训后，大家晚上到一个酒吧去，那些Bear Stearns的交易员就开始打撞球，有些打桌球。我和另一个Bear Stearns的男交易员一组，对打对面的两个Bear Stearns的男交易员。交易员可爱的地方就是喜欢比赛，喜欢赢。对家两个男交易员看我不过是一介女子，还穿着套装和高跟鞋，根本不把我放在眼?。被我杀了几个球之后，才发现不对，马上全力以赴。结果我和我的搭挡以 2 比 0 把他们干掉。本来我不以为意，结果马上话就传到PIMCO，那位金发年轻的帅哥 Executive Vice President 在我回PIMCO上班时对我说，没想到你桌球打这?好。 </p>
<p>到Salomon 时，也拜访了当年给我工作承诺的 Yield Book Group，他们对我很好，我也很感谢他们。Salomon 那时有个叫 Y。K。Chan 的有名中国人做模型的。他写了个2-factor的term structure 模型，当年很红的，因为别家的模型都是1-factor，那时因为 Yield Curve 变动的很厉害，很多华尔街的公司因没有2-factor的模型，无法抓住Yield Curve 的变动，输了钱。PIMCO 就派我去看这2-factor的模型到底怎?搞法。Y。K。Chan 写了一篇有名的文章，说明这2-factor的模型是如何做出来的。我在PIMCO看了他的文章以后，打电报和Y。K。Chan讨论，也指出文章有一些看来有心的错别方程式，让读者很难重复他的结果。Y。K。Chan说我是第一个卖方看得懂他在写什?，还能了解他为什?这?做的人。到华尔街时和Y。K。Chan和他的团队讨论了很久，回到PIMCO就作出了一个小模型。第二次到华尔街要和Y。K。Chan讨论时，Y。K。Chan和他的团队就借故回避，派出一些不太懂的人应付我们。因为Y。K。Chan怕照我这种搞法，把他华尔街的赚钱模型全偷走了。 </p>
<p>那时知道PIMCO对亚洲市场的开发有兴趣。便请家母引见PIMCO的业务代表和台湾管党产及退休金的长官见面。那时很多台湾的大的资产管理机构都没有听过PIMCO，但在家母的引见下，那些长官马上对PIMCO留下了很深很好的印象。PIMCO 为了感谢我，特别让我和亚洲商务代表，和那位金发年轻的帅哥 Executive Vice President到北京，香港，新加坡，一起向这些区域最大的资产管理机构推销PIMCO的服务。 </p>
<p>PIMCO 的 Secular Forum 是每季都会举行的投资展望大会。每次大会都会请到全世界的投资权威讲结他们的看法。1999 年请到了香港的 Marc Faber。Marc Faber 提 Forbes 写专栏，对老外而言，是中国的专家。Marc Faber讲完的那天晚上，PIMCO 开了一个 cocktail reception，Faber对我很好，问我等一下要不要和他一起去晚饭。那天晚饭在附近的一个乡村俱乐部举行，同桌的还有PIMCO的一个合伙人。那个合伙人后来告诉我，他一起来晚餐是要来保护我，他怕Faber会对我动手动脚。这个合伙人对我很好，我们一起写了一篇文章，发表在 Investment and Pensions Europe，讲 Treasury Inflation Protected Securities。 </p>
<h2 id="赢得「债券王」Bill-Gross的心"><a href="#赢得「债券王」Bill-Gross的心" class="headerlink" title="赢得「债券王」Bill Gross的心"></a>赢得「债券王」Bill Gross的心</h2><p>Pimco的老板名叫比尔-格罗斯(BILL Gross)，他是美国金融界大大有名的「Bond King」─债券王，他白手起家，靠做债券而聚集了大量财富，我进他的公司时，他已有调拨两千亿美金的实力。他的「债券王」的绰号，有人说是「财富」杂志取的，有人说是在华尔街自然产生的，我比较相信后一种说法。比尔多年来在华尔街只做一样：债券，美国的同业都很敬畏他，公认他是有史以来最有本领的债券操盘手、投资人，他对债券市场的判断几乎没有失误过。 </p>
<p>比尔在公司?说一不二，真的像个「王」一样。比尔人很怪，他的全副精神集中在债券投资上，但他不相信科技，连ＰＣ怎么开都不晓得，他平常只跟几个大头交换意见，所有交易员都跟他说不上话，因而大家都不能直接知道他的意向。 </p>
<p>我来PIMCO 转眼快一年了，与比尔?格罗斯一句话都没说过，只有在交易室?见过他，听他每天对市场的评论及交易，和他与大头们的交谈，间接学习。要知道比尔-格罗斯在想什么，只能从比尔?格罗斯在PIMCO网站上对顾客发表的文章，间接猜测。另外，就是每几个月PIMCO内部开的长期投资策略大会，比尔?格罗斯和大头们都会对全球经济的展望，发表高见。PIMCO最厉害的地方就是预测得很?。 </p>
<p>1999 年5 月，PIMCO觉得利率将会 Range-Bound within a 200 basis point band (在一定的区间内变动，这个区间宽2%)而市场可能还没有把这个看法定价(market has not priced in yet)。在这种情况下，range floater 是一种好的投资工具来表示着个看法。比尔?格罗斯在他的文章?隐约这么说，但没说明白（不然别家就会作这个交易了）。 </p>
<p>我一看，就和我的老板，同事，讨论如何作出一个模型，能把比尔-格罗斯的想法定量化，并有参数让他可以调整他想法的强弱。我把Option Pricing的圣经 Black and Scholes 的模型改了一下，把平常利率的机率分布标?差缩小以符合比尔?格罗斯的想法，而标?差的宽度比尔?格罗斯可以自己决定。 </p>
<p>我很快就做出了那个模式，并透过正式管道给了比尔。我虽然对我的模式很有自信，但不知比尔会有怎样的反应，是不屑一顾还是欣赏。 </p>
<p>不料比尔很快就传下话来，他早就想做一批这样的模式，但找不到人商量，而我做出来的正是他构想中的一种。他竟要我就这个问题，对全公司交易员以上的人，做一次演讲。 </p>
<p>那时我只有廿几岁，而公司的交易员们都是四、五十岁的人，在他们面前讲任何问题，我都太嫩了点。可是，比尔的命令是不能违抗的，我只得以向大家说明我的模式的形式，来做这次演讲。 </p>
<p>没有想到这次演讲很成功，不但大家对我做出的模式兴致很多，比尔更当众称赞我做出的模式很棒，能解决问题。会后，他亲自打电话给我，要我把我做的模式，上到他个人的计算机?。这对比尔这个不相信科技，连ＰＣ怎么开都不晓得的「债券王」而言，意义非凡。 </p>
<p>2000 年底，公司全体开圣诞节舞会Christmas Party。总公司有几百人，相互之间大都不认识。PARTY开始后几分钟，比尔?格罗斯走进会场，他笑眯眯向我走过来，向全体同仁大叫一声：「Alyce，Everybody knows Alyce!」─「阿丽丝，大家都认识阿丽斯！」后来有一位在公司服务多年的同事跟我讲，他从来没见过比尔这样兴奋过。 </p>
<p>我在Pimco从1998 到 2000，表现不错，也得到好的奖金。但是，因为我在公司第一次露脸是由于做出了一个比尔欣赏的模式，因而公司高层便把我的责任范围定在做模式方面，我竟没有别的范围可以发挥。我渐渐有了倦怠感，觉得这份工作没有什么意思。正好那时知道了麦肯锡公司又在招人，我认为麦肯锡的工作应该比 PIMCO 有趣，于是我毅然向PIMCO提出辞呈，而参加了麦肯锡公司2000年的考试。 </p>
<p>　　　　　　　　　　　　　 </p>
<h2 id="我买卖房子一年-１６０-投资报酬率"><a href="#我买卖房子一年-１６０-投资报酬率" class="headerlink" title="我买卖房子一年 １６０% 投资报酬率"></a>我买卖房子一年 １６０% 投资报酬率</h2><p>我从拿到加州理工博士开始，就无时无刻想赶快买个房子，免得爸妈咯索。我在PIMCO工作的时候，由于待遇相当高，存了一些钱，便想在加州买房子。 </p>
<p>从那以后，我在公余就花了一些时间留意加州的房屋市场。将就我的年收入来考虑该买哪里的房子。新港的房子是有名的贵，倒是尔湾 Irvine的房子因为很多人喜欢退休之后在哪里住，有人要 (有 demand)，也不算太贵，有升值的空间，又有些华人区，华人生活方便，我觉得是个可以给爸妈退休后住的地方。到有了一个大概的轮廓之后，在我离开 PIMCO 之后，便邀请爸爸、妈妈加上妹妹，只差一个那时还在服预官役的弟弟，一道来尔湾 Irvine 看房子做决定。 </p>
<p>我们看中了一个四房两厅，前后有院子，附近有购物中心，及散步的树丛小径，离医院不远 (因为爸爸年纪一天比一天大，与医院打交道的机会也就增多)的房子。那户房子定价美金 29万，杀到28 万，头期款 20%要美金五万六。那时我还没那末多现金，大概只拿得出美金三万的存款。PIMCO 的一个合伙人，就是很赏识我，和我一起些过一篇 Treasury Inflation Protected Bond 的那一位，待我不薄，于我们全家人见过面后，慷慨解囊借我两万六凑足头期款。美金两万六对这种身价上亿 (光年薪就美金上千万的人) 真的不算什么。我告诉他以后一定还他。他是难得的好人，他说在美国已经很难看到子女为父母买房子的人，我们有这份心，他愿意帮忙。这位PIMCO 的合伙人，以前在高盛。 </p>
<p>那时我以离开了PIMCO，也因为下一个工作有了着落，知道不会在美国了，房子不但要买，还要租出去。幸好那个地点很好，房租比我付的房贷还高，所以整个交易是所谓的 Self-Financing 自给自足，我除了头款，其它不用再付钱。我有想过一年后可以看能不能变现，但不能变现亦无妨，因为市场还好，房价升值。 </p>
<p>回到台湾一年后，妹妹申请到 MBA要出国，弟弟也要去念 JD，因为平常赚的钱交给母亲还台湾的房贷，手上一点现金都不剩，只好赶快一年后就把尔湾 Irvine的房子卖了。出手的价钱近美金33万，赚了５万。头期款五万六还了PIMCO 的合伙人的两万六，手上净拿美金８万。一年内用３万赚８万，回报率百分之一百六十。 </p>
<p>原来所谓的 LBO，Leverage Buy-Out 就是这样干的。 </p>
<p>８万赶紧先分给了弟弟妹妹。税的事情我再去负责。 </p>
<p>弟弟很争气，他在服完兵役之后，一面准备律师考试，一面申请到美国深造的学校，因为他在台大法律系的成绩很好，各种课外纪录也不弱，哥伦比亚大学都给了他入学许可。律师考试也是全台湾第十七名。 </p>
<p>妹妹念完 MBA 后，也有幸进入台湾最好的创投公司中华开发。 </p>
<h2 id="考入麦肯锡-McKinsey-amp-Co。"><a href="#考入麦肯锡-McKinsey-amp-Co。" class="headerlink" title="考入麦肯锡 McKinsey &amp; Co。"></a>考入麦肯锡 McKinsey &amp; Co。</h2><p>我在前面说过，在进Pimco之前，我考过麦肯锡公司，没有录取。但是我对这个公司怀有高度兴趣。另一方面，要想在美国商业界发展，最好有个ＭＢＡ（企业管理硕士）学位，我没有这个学位，要想念一个，要花两年时间，还要交一大笔学费。而美国企业界有个默契，只要在麦肯锡工作过一年，便视同ＭＢＡ资格，这就不但使我因兴趣而想进麦肯锡，实在还有必要进。<br>这样，我就报名参加麦肯锡的一九九九年底的人才甄试，那年我赶上麦肯锡在全美国招收给大中华两岸三地的人才。经过第一轮在加州理工进行。第二轮在落山机进行。我因以前就准备过麦肯锡的甄试，再加上PIMCO所受的训练，对麦肯锡的口试应付自如，也轻易的进了最后一关。最后一关全美一共只收了 40 个人，送去上海，进行为期五天的培训及最后一轮的甄试。麦肯锡给我们这一群人的绰号叫Insight 2000。 </p>
<p>2000 年初到上海，我马上被这个城市给慑住了。我从 1992年离开台湾，之中只有回去台湾两三趟，中国我倒是一次也没回去过。1992 年到 2000 年的牛市 Bull Market 中，两岸三地发生了多少大事，造就了多少人物，而我却一件事也没赶上，一个人也没遇上。2000 年的上海与我印象中的中国是多么的不一样! </p>
<p>前三天是培训，麦肯锡的顾问们先告诉我们他们的背景，做过的案例 (当然案例都不具名)。然后把我们分组，给我们案例，让我们分组讨论，并上台报告。然后角色扮演，我们扮演麦肯锡的顾问，麦肯锡的顾问们扮演公司的CEO，CFO，VP of Marketing 等，让我们感受实际和公司管理层打交道的压力，并对我们的表现给予讲评。麦肯锡也教我们一些最基本的生意架构 (business framework)。晚上麦肯锡为我们安排到上海有名的饭馆体验当地的生活。这三天的假设是，我们这一批，都是中国在美国受过高等教育的一批，都没有MBA，这三天，就是快速的将一些 MBA 的观念，做麦肯锡顾问最基本的工夫，交给我们，然后要看我们学得如何。 </p>
<p>后两天是非常严格的面试，面试都是案例 Case 看我们前三天学得如何，并看每个人的生意感觉 Business Sense。从这 40 个人中，麦肯锡挑了 10 个人，分别进入北京，上海，香港，及台北，4个办公室。我也顺利进入台北办公室，正式成了麦肯锡公司的一员，圆了我加州理工时代的一个梦。 </p>
<p>我当时知道，我一定要在麦肯锡待上一年，获得训练和实际经验，以换取和 Harvard MBA 同等的对待。有了麦肯锡在我的履历表，别人就不敢老是看我是博士，问我为什?不去做研究员或工程师，因为麦肯锡就是全球最有名的”管理”顾问，专门为 Fortune 500 的CEO 提供战略服务的。 </p>
<h2 id="我在麦肯锡受的训练"><a href="#我在麦肯锡受的训练" class="headerlink" title="我在麦肯锡受的训练"></a>我在麦肯锡受的训练</h2><p>对于像我这样的不是学财经出身，但被证明有 智慧且具博士学位的人，在被麦肯锡招进之后，公司会郑重其事对我们做MINI MBA训练，受训的地点有时候在美国内，有时候在美国外。我受过一次在西班牙的小型MBA训练，还有一次在美国匹兹堡的BASIC CONSULTING READINESS基本咨询准备。两次都是三星期。 </p>
<p>如这本有名的 The McKinsey Way 所言，麦肯锡是个很讲究团队精神的公司，为了使同仁们工作上能充分相互配合，公司?面提倡：无论你个人如何优秀杰出，但你必须能与工作伙伴合作，不能只求一个人表现。大家既然来自不同国度，各有不同的文化背景，而且都是在平辈中顶尖的人物，要形成一个圆融的工作团体真的不简单。我现在回想起来，我所受的两次训练。确实发生了很好的作用，而且决不仅是对我个人如此。 </p>
<p>我们在西班牙受训，第一个星期是讲「微观经济」，告诉我们单一企业的特质， 企业的运作要领；第二个星期讲「公司融资」，第三个星期讲「公司策略」，所有的讲员都是全球各名校的最好的MBA教授，从星期一到星期五，我们这些不同国籍、不同肤色的学员，过的可以说是海军陆战队的新兵般的地狱生活，听讲、讨论、做习题、交报告，没有一分一秒浪费，那时间的安排，比我在加州理工修博士时还要紧凑。巧妙的是那最后的报告，一定要用集体的智慧才能完成，参加撰写报告的人，都会感觉到并且承认，那?面蕴含着一些自己提不出的、确实比自己高明的意见。我想，这是训练充实我们的知识之外，另一个具启发性的目的。 </p>
<p>在受训的时候，麦肯锡公司允许并且鼓励我们学员在周末心情放松，一道游玩。这样使我们在成为深有默契的工作伙伴之外，也成为很好的朋友。在西班牙的三个星期训练，给了我终身难忘的回味。 </p>
<p>在匹兹堡的三个星期训练，题目叫做BCR，即「BASIC CONSULTING READINESS」，基本咨询准备。这是麦肯锡公司的本业训练，先由公司仿真一些客户状况，由一组学员把这些问题承接下来，然后由一个人做头，把问题分割成几「块」，每个人负责解决一「块」的问题，各人先就自己负责的一「块」去搜集资料及思考，然后用集体智慧将这些「块」整合起来，再成为整体，提出解决的策略及方案。在训练中每个成员都有做「头」的机会，没有畸轻畸重的情况。这是一种比在西班牙所受训练更深一层的团队工作训练，进一步教给学员对伙伴智慧的重视。另外的重点是学画图，即所谓的 CHARTS 图表，因为顾问和客户的沟通工具是用特别的CHARTS，要如何用言简意亥的方式画出你要传达的意思。 </p>
<p>麦肯锡的训练是按照个人在公司中的职业成长设计的，譬如，一个刚进来的顾问，可能需要小型MBA训练或 基本咨询准备。等这个顾问做了三个案例或进来一年以后，要接受别的训练，升到 Engagement Manager 或 Principal 或Director 后也有配合不同的训练，真是活到老学到老。有个很有名的训练每个参加过的顾问都喜欢谈，就是将每个人做性向测验，把人的个性分成 16 类，然后每个人在身上挂名牌，写上自己的类别。你在与别人交谈时，要针对对方的个性类别说话。如此重复几天。俗语说，见人说人话，可能是同样的道理。 </p>
<p>我最怀念麦肯锡的是每三个月举办的 GCO Square，GCO 是 Greater China Offices 的简称，包含北京，上海，香港，台湾。GCO Square 都选在上海办。全部4个办公室的顾问都聚集在上海，受训，联谊，分享为顾客解决案例的成果，大家讨论，看下次如何可以做得更好。 </p>
<p>最难忘的是2000年底在海南三亚的天域酒店， 麦肯锡举办的GCO Retreat，全部大中华4个办公室的顾问聚在美丽的三亚，开会，联谊，受训，讨论麦肯锡未来的发展方向几长官们对新顾问们的期许，然后对所有新的顾问排名，决定顾问一年的红利。 </p>
<h2 id="在麦肯锡McKinsey-amp-Co。的日子"><a href="#在麦肯锡McKinsey-amp-Co。的日子" class="headerlink" title="在麦肯锡McKinsey &amp; Co。的日子"></a>在麦肯锡McKinsey &amp; Co。的日子</h2><p>如 The McKinsey Way 所言，麦肯锡内部的顾问分成几个等级，人数分布为金字塔型，由长而幼为依序为: Director，Principal，Engagement Manager，Associate，Analyst。每一个等级间大约是两年。但由于是采用所谓的 “Up or Out (上或淘汰)” 系统，很多人两年一到升不上去，就得走路。因为这个缘故，对所有同一年的顾问，上面的人都会做 forced ranking 强迫排名。新进来的顾问，罩子要放亮一点，赶快看上面有那些年资较深的顾问愿意带你，把你认作他的人，因为麦肯锡仍是所谓的 Partner 制，所有向上的晋升一定要有人从上面给你投票。麦肯锡?面本来 Harvard MBA 就最多，在这种体系下，毕业学校就成了一个自然组织集团的方式。我进麦肯锡是 Associate，新的Harvard MBA 近来也叫Associate。 </p>
<p>麦肯锡是以顾客故而“案子” (engagement) 导向。“Director” 从顾客手中接过案子时的，公司就针对顾客的要求设计“案子”的长短，然后从麦肯锡的顾问群中挑选最适合这个案子的 “Principal”，“Engagement Manager”，“Associate”，“Analyst” 的组合。这个过程叫“staffing案子征才”。对一个案子，整个大中华区是统一的案子征才，最上面的Principal也可能从其它亚洲办公室，或者全球的其它办公室找人。这是麦肯锡独特的地方，永远找公司?最好的人才，组成最好的团队，为顾客服务。在这种制度下，新进人员像我，不但有机会从团队中年资深的顾问学习，更有机会互相认识其它大中华办公室的新近人员。麦肯锡对外注重为顾客服务，对内注重学习。 </p>
<p>2000 年初到 2001 年初，在麦肯锡做事一年，我接过三个案例。第一个案例在香港，第二个案例还在香港，第三个案例在台湾。我在香港最好的酒店之一 Grand Hyatt 东方君悦酒店住了半年以上，住到酒店服务人员和旁边的JJ俱乐部收票员都认识我，并直到现在还会对我打招呼。 </p>
<p>第一个案子是为香港第二大集团作公司融资与战略顾问。首先，对中国一出版公司价格作评估，评估方法包含现金流量折现法，市场乘数法，用不同的折现率及收益乘数来划出估值的范围。其次，为此集团的网络投资分部准备与另一个香港大集团销售部门的合作协商档。最后，替集团在新加坡，马来西亚，台湾寻找并购对象。 </p>
<p>第二个案子是为全球最大农化公司的亚太地区高层主管提供并购后重组服务。对亚太地区共13个国家的业务进行分析，然后估计两个公司间的生意互利及重迭。对互利实行及重迭消除方面作出了执行计划及里程碑。此计划为亚太地区最高指导委员会同意并执行。麦肯锡的3人小组在5个月间整合了3000个员工。 </p>
<p>第三个案子是为台湾最大的金融集团等设计并购策略及并购后资源的整合方案。2000 底，台湾金融界因法律改变允许 Financial Holdings Company 的成立，一连串的改变正在酝酿。我们看中这一批改革风潮会带来台湾金融界的震撼，与各集团积极展开讨论合作的可能性。 </p>
<p>我们打交道的对象是各行各业大企业的CEO - Chief Executive Officer翻成中文是「执行长」，也就是他那企业掌握最后决定权的人。这些人在他那行业多有许多年的经历，自然那方面都内行，我们这些麦肯锡的顾问，要他们出高价聘请提供咨询，当然大大不简单。他们一定是遭逢到了棘手的问题，才来找我们，而我们这些人也许对他那一行了解并不深刻，但是一经他们礼聘，短期内就要拿得出能解决问题、令他们折服的方案，这种事的难度可想而知。<br>麦肯锡的顾问，理论上应是「万事通」，随便什么问题，一谈就要能进入状况。这要求有高度的领悟力和学习能力。ＣＥＯ们都忙，没有时间听空话，所以跟他们谈话，一定要很快领会他们的意图，明白困扰他们的问题何在。把他们的意图摸清楚了，找出「当局者迷」迷在何处，才能对症下药求解。 </p>
<p>除了这份聪明，还得十分认真、努力，吃得了苦。因为解决问题的方案要很快做出来，这要查阅非常多的相关数据，并做合理消化。因此，接案之后，顾问的工作几乎是不分日夜，一天十六、十八小时都有可能，每分每秒都是挑战。 </p>
<p>这份工作，对极了我的味口，我的性格就是喜欢捕捉新的、一般人看起来艰涩无解的问题，找出别人找不出或不易找出的答案，挑战越多、越尖锐，我不但不以为苦，反而觉得是一种享受。 </p>
<h2 id="进入高盛公司-Goldman-Sachs-amp-Co。"><a href="#进入高盛公司-Goldman-Sachs-amp-Co。" class="headerlink" title="进入高盛公司 Goldman Sachs &amp; Co。"></a>进入高盛公司 Goldman Sachs &amp; Co。</h2><p>我向麦肯锡公司递出辞呈的时候，许多人都觉得不可思议，因为进入这家公司是那样困难，而我进入公司之后又表现得非常好，留在公司几乎确定有光明的未来。因此有人劝我慎重考虑，不要急于离开。 </p>
<p>对于这些好心人的意见，我没有采纳。因为我最初放弃学术岗位而选择金融行业，就是想在「银海」中求得发展，在赚得足够的钱之后，再凭我的所学，不管是在生物科技方面创业，闯出一片天地，或是找好的投资伙伴们，一起入股收购物美价廉的公司。在麦肯锡公司任职只能出卖智慧，赚钱是有限的，而且我在这公司工作已超过一年，在熟悉美国企业界行情的人眼中，我已具有像 HARVARDＭＢＡ的资格了。 </p>
<p>离开麦肯锡，我向美国最大而著名的投资银行Goldman Sachs &amp; Co，中文译名「高盛公司」求职。进这公司的难度，不下于进麦肯锡。我之所以选择投向高盛，是想弄清楚投资银行是怎样聚合资金，而后又是怎样运用资金的。高盛公司是这方面国际性的佼佼者，一旦投身进去，应可学得一些这方面的学问。 </p>
<p>在很多坊间的书局中，可以见到一本书，叫做?Goldman Sachs，the Culture of Success (高盛，成功的文化)”。如此书所言，要进高盛公司，每个人最少要10个以上的面试，20 几个面试，是常事。因为高盛公司，如此书所言，重视团队工作。一定要大多数人觉得可以与你共事，才有进公司的可能。 </p>
<p>我在高盛台北及香港的公司，都被面试。来来往往也见了十几二十个人。其中让我印象最深的，是台湾投资银行界的教父，宋学仁先生。宋先生话不多，但一针见血，又愿意和你讲最好，最诚实，最中肯的建议。怪不得是所有大企业家最倚重的 Advisor咨询者。没进高盛前，就听说宋先生进高盛，是带兵投靠，把所有大华证?的客户，化为高盛所有。高盛在台湾，从零开始，到台湾成为高盛全球重视的收入来源重镇之一，宋先生扮演了很重要的角色。宋先生不但自己贵为高盛亚洲的副主席，更重要的是，他培育了一批台湾人，都为高盛立下了汗马功劳，而位居高位。我一辈子觉得最可惜的是没赶上那一波追随宋先生的机会，不然我也不会提早离开高盛。 </p>
<p>我面试的结果，Investment Banking投资银行部 和Investment Management投资管理部，两个部门都表示要录用我。后来有人告诉我，这样的情形是不多见的。我选择了投资管理部，因为 2001 年的资本市场不太好，一般的理解下，投资银行部在市场不好时裁员最快最多，而且是后进先出。我当时希望在高盛待十年以上，故选择了投资管理部门。 </p>
<h2 id="我在高盛受的训练"><a href="#我在高盛受的训练" class="headerlink" title="我在高盛受的训练"></a>我在高盛受的训练</h2><p>从麦肯锡转到高盛，几乎是变换了一个世界。我在前面介绍过，麦肯锡公司只给别人出主意，本身不用资本市场的工具为客户融资，这是个原则，所有的工作人员都不能违反。高盛除了可以提供麦肯锡的战略服务之外，还可以用资本市场的工具为客户融资，或从事资本市场的交易。 </p>
<p>就是因为特质有异，所以这两个公司对职业的训练也有很大的不同。高盛在每年的夏天，将当年从全世界招来的新生送到纽约，集中训练。这时通常会包下一家大旅馆，做训练场地，那气派的豪华，令新进人员感到震慑，觉得自己投身的果然是一家不同凡响的大企业。 </p>
<p>高盛训练的第一课，是把整个企业摊开给新进人员看，告诉你高盛有哪些部门，如投资银行、贸易部、资产管理部等，向大家介绍这些部门如何操作。这时的讲员多是高盛的资深高级主管，他们不但熟知高盛的各项业务，而且都对高盛银行有感情、有贡献。透过他们的讲述，新进人员不但了解了这家投资银行本身，对于全球的投资银行业，也会有一个深刻的印象。 </p>
<p>高盛为期数月的新人训练，主要目的之一是给那一年的全球新进人员有一个相互认识的机会，并对自己部门的人员，规矩，专业知识，有所了解，还要测试。在纽约那个夏天，我有幸认识那年全球进高盛的新生，亚洲，美洲，欧洲，有幸和几位德国的新生做了好朋友。晚上上完课后，及周末，我们都一起到纽约去玩，纽约真是个非常美丽又好玩的地方。 </p>
<p>我的部门特别给我们做电话对谈训练，是很有意思也很实用的一个训练项目。不但像我这种学自然科学出身的，即使是名校的MBA，也未必受过电话对谈专门训练，不一定知道那?面有那样大的学问。因为高盛每一个分支机构的业务辖区都很大，做行销的时候，如果都由人上门去洽谈，那成本势必很高，这样就有必要通过电话来接触客户，高盛可以把它的行员训练到只要客户一开口，就知道他的问题在哪里。心中要马上形成为客户解决他所悬问题的腹案，那笔生意八九不离十就能做成。高盛不是教行员骗人，而是提高行员捕捉问题、消弭问题、解决问题的能力。我在接受了这方面的训练之后，经历了好几个相当大的案子，是用电话谈成的交易。 </p>
<h2 id="在高盛公司-Goldman-Sachs-amp-Co。的日子"><a href="#在高盛公司-Goldman-Sachs-amp-Co。的日子" class="headerlink" title="在高盛公司 Goldman Sachs &amp; Co。的日子"></a>在高盛公司 Goldman Sachs &amp; Co。的日子</h2><p>我在高盛公司的工作地点，被安排在香港长江集团中心六十八楼，即公司的亚洲总部，被委负大中华地区─大陆、台湾、香港、澳门─吸收资金的责任。对我来说，这真是个极大的挑战。我在这个地区的人脉并不广，主要是在麦肯锡公司工作时建立的一些关系，现在既然承担了高盛公司赋予的这份责任，只有尽一切力量来建立人际网络。 </p>
<p>2001 年到2003年我是高盛资产管理部大中华区业务负责人。虽然我上面的外国老板来来去去两年内换了三个，因为整个部门只有我一个中国人，所有大中华区有关的事务都是我实际在做。我为大中华区美金现金管理业务开发首席代表，负责美金近十亿。 </p>
<p>我与大中华区重要Chairman，CEO及CFO们谈投资和公司买卖交易的机会。带领高盛投资银行部门美国，欧洲的产业专家，与大中华区公司领导们讨论全球经济局势展望，产业趋势，及竞争者分析。 </p>
<p>我负责大中华区投资者关系管理及新生意发展。与投资者沟通以理解其投资需要，根据其投资需要，量身订做资产配置，并找寻最好的固定收益，股票，避险基金，及其它种投资产品，来满足投资着需求。 </p>
<p>和同仁一起，我们调查并设计中外合资公司资产管理合作的可行性和合作模型。我们也设计，组织，并召开两届为期一星期的亚洲机构投资者培训课程，培训与资产管理相关的重点项目。 </p>
<p>在当代经理人杂志社办的中国成长企业一百强CEO峰会中，我应邀为主讲者及专题主持人。 讲题为中国企业如何引进国外战略投资者，及比较各国资本市场的融资渠道。 </p>
<p>我打交道的对象，是一等一的富人，或者是有钱在库而又想生出利润的机关。高盛公司有一套严谨的制度，它的工作人员必须按照这套制度工作。我们代表公司与人接触，只要做出了承诺，就要百分之百做到，绝不能打折扣，总之一切要顾全公司的信用。这对于我这个学科学出身的人并不难，因为我长期所受的训练就是求「真」，无论说话、做事，都以「不假」为原则，因而我打从进入高盛公司起，就没有违规过。 </p>
<p>由于管理的范围太大，我在外旅行的时间很多，有时一个星期要坐好几次飞机。我惯于独来独往，常常是一个手提箱就出远门。每次到台北，我习惯住到爸妈家?而不住旅馆，妈妈看我来也匆匆、去也匆匆的样子，心疼得不得了，总得我安慰她，她才能回过神来。其实，我东飞西跑，并不觉得如何疲累，反而是看到爱女心切的妈妈那难受的样子，我才心疼。 </p>
<p>由于在高盛公司工作，我认识了很多富豪。我发觉这类人几乎都有很精准的投资眼光。我能有这样的机会，和大中华区最优秀的企业家交流，不但觉得他们的这套本事，很值得我学习，真是三生有幸。 </p>
<h2 id="我与「甲骨文」老板的一段交往-初遇北京"><a href="#我与「甲骨文」老板的一段交往-初遇北京" class="headerlink" title="我与「甲骨文」老板的一段交往: 初遇北京"></a>我与「甲骨文」老板的一段交往: 初遇北京</h2><p>世界的软件业者，没有不知道「ORACLE」（甲骨文）公司。这家公司的老板叫LARRY˙ELLISON拉瑞-爱理逊，一度是被富比士杂志排名全球第一、超过「微软公司」老板比尔-盖兹的富人，后来有几年排名第二，二○○二年则排名第九。这位先生很有意思，他是以特立独行、傲视全球闻名的人物，但却对我非常欣赏，在百忙之中亲自给我发过很多电子邮件，并在与我晤面时给我很多的褒奖。 </p>
<p>甲骨文公司对于出身加州理工学院的人绝不陌生，多年来这个公司在加州理工招聘科技界的新人，出价都很高，被它挑中的加州理工大学毕业生，年薪达六万五千美元，博士则给八万美元，因此许多加州理工大学部最优秀的毕业生都参加了这个公司。只是这家公司的老板很特别，他很少直接接触公司的新进人员，一般职员只能在报刊上看到他放言高论，及他与比尔-盖兹之间的竞争，很少人见过他，跟他面谈过的人更少。 </p>
<p>我是在加州理工相邻的书店中，看到一本名叫 <a href="爱理逊与神的区别—甲骨文公司内部的观察">The Difference Between God and Larry Ellison</a>」的书，买来看了之后，才知道爱理逊其人的。那书把爱理逊写的十分有趣。看完书之后，我以 “日本来的 Alternative Shuksa” 的名字在亚马逊网上书店 (www。amazon。com) 发表读后感。日本是Ellison最喜欢的国家之一，因为Oracle全球卖得第二多的国家就是日本。Alternative Shuksa和Alyce Su的开头都是一样。Shuksa是犹太语“女朋友”的意思。以后约莫有两年时间，我不管在什么报刊上看到有关爱理逊的言论，或者对他的报导，总会一口气看完。我既读过那么多来源不同的有关爱理逊的资料，有时在跟朋友闲聊时谈到他，朋友们都很惊异我怎么知道这么多有关爱理逊的细微之处，于是有人称我为「爱理逊专家」。 </p>
<p>2002年三月某日，我忽然在报上看见，爱理逊六月份要到北京一行。我一算那时间，那时我也会在北京。我想，既然这样，我何不设法与他见上一面，看看我的偶像的卢山真面目。Oracle 成立这么多年来Larry Ellison 上次亲临北京已绖是快十年前了。 </p>
<p>六月初，我试着给爱理逊发了一封电子信，问他能否在六月十日，在北京与我一晤。我当然知道自己的份量，在他这种国际大财阀面前，我算老几？因此，在信发出之后，我并不真的期待他会有回音。 </p>
<p>可是，出乎我所料，他竟很快覆信给我：「I would love to meet you，you are most interesting。」（我很高兴与你会晤，你太有意思了！） </p>
<p>Larry Ellison，Mike Milken [Junk Bond King 垃圾债券王]，Rupert Murdoch [媒体大王梅铎] 三人合作一个公司叫 Knowledge Universe [ 知识宇宙 ]。以前我在 Los Angeles 时，在我离开 PIMCO 去 McKinsey &amp; Co。之前，曾向Mike Milken递过我的简历，结果这份简历落在 Steve Fink，与Mike Milken 私交甚深的好友桌上。自从 Mike Milken被判终身不得从事证?交易之后，所有与商业有?的活动均由 Steve Fink 负责。Steve Fink也是 Forbes 杂志专访过的对象， 其兄弟 Larry Fink 为华尔街著名公司 Blackrock 的创办人及总裁。 Larry Fink 和 PIMCO 的创办人像 Bill Gross 或 Chris Dialynas 十几年前在华尔街交手时就互相认识。华尔街是个小圈子，这些身价上美金亿的大老们都互相认识，再见过我之后，多谢他们都记得有 Alyce Su 这一号女博士。我一直不确定为何像 Larry Ellison 这?德高望重的巨富，竟然会亲自回我的电子邮件。我猜想，但没有证据肯定，可能是这些华尔街巨头的推荐。 </p>
<p>爱理逊的回信当然令我兴奋。但是，我考虑到，我并没有跟他确定谈话的主题，及参与谈话的人，这些事不落实，他随时可能取消这一约会。于是我立刻联系平常在大中华地区接触密切的各方要人，问他们有不有兴趣跟爱理逊谈谈。这一切都是以私人事务的方式进行，和高盛的业务无关。 </p>
<p>这个讯息发出之后，通过电话和电子邮件回来的讯息大量涌至， 政府官员，财经，高科技豪杰，及北京最成功的民营企业家们，莫不想与这位巨头一谈。我过滤了他们的各种要求，整理成两大主题，然后把它发给了爱理逊。 </p>
<p>很快，爱理逊的回信来了，他完全同意我所建议的谈话内容，但他表示，六月十日他尚未到达北京，与我们会面，以六月十二或十三日为宜。 </p>
<p>爱理逊一向以善变著名，这分钟答应的事，下分钟可能就变挂，更何况是六月十二日“或”十三日，这到底是几日呢? 如果这些大中华区的名流真的冲 Larry Ellison 的面子而来，而被放鸽子，那我以后怎么混呢? </p>
<p>我想到，如果爱理逊真是想跟我会面，他一定会还有电子邮件发给我，我可以稍等一下。结果，在几天之内，爱理逊发来很多封电邮，确定要与我在北京见面。他在电邮中，并与我交换了私人电号号码。他也把日期确定在六月十二日。但是最确定的只到日期了，至于时间地点，完全不知。 </p>
<p>六月十日我到北京，机场到处是 Oracle 的旗子，气派的确不凡。 </p>
<p>六月十一日晚上，我还是不晓得 Larry Ellison 到底会不会和我见面，我也没敢再麻烦大中华的名流。 </p>
<p>六月十二日早上九点多钟，我忽然接到爱理逊的私人秘书从他的美国总部打来一个电话，告诉我 Larry希望今天下午6:00 pm 和我及我的朋友们吃饭。她说，Larry wants it to happen，马上 Larry 就要在北京的Oracle 大会发表他的 Keynote Speech。Larry 演讲过后，Larry 的北京私人秘书 Judy 就会打电话再和我联络。 </p>
<p>从这个电话算起，Larry 总算确定了。但是从上午九点多钟到下午6:00已经没多久了。我马上给我的合作伙伴们打电话，请他们待命。我也亲自打了几通电话给重要的人，请问他们6:00 是否有空。 </p>
<p>近中午，Larry 的北京私人秘书 Judy 打给我，说 Larry 要把晚饭由下午6:00改到 4:00。这个变动太突然，令我暗暗叫苦。因为我所约的人无不各有要公，要调整两个小时的业务不是容易的事。但是我想到，爱理逊若不是有绝对必要，他不会提这个要求。我只得先承诺下来，然后再来考验我自己的协调能力。 </p>
<p>我开始一个一个跟预定参加会见爱理逊的朋友打电话，告诉他们这个变动，并希望他们能重新安排时间，不要放弃这个与美国软件大王?谈的机会。大家或许是感于我的诚恳，竟都答认重新安排行程，来共襄这欢迎美国大财阀的盛举。 </p>
<p>当天下午三点五十分，我所约请的与爱理逊欢谈的客人，一个不少出现在北京东方君悦酒店。我先将客人们带到会见的会议厅，然后爱理逊的秘书打了一个电话给爱理逊。不一会儿，Larry 从一个隐密的地方走出来。 </p>
<p>我是第一次见到这个我在报刊上细读了两年多的产业界的大人物，觉得他真是很「酷」，气宇果然不凡。对我而言，他好似从书籍、杂志中走出来。 </p>
<p>那天的聚会真是很热烈，一开始人数算少了，位子不够，还要叫餐厅加椅子，加到后来那个桌子加不下那末多椅子，只好请一位晚到的朋友先出去等，我告诉他若有位置，马上通知。 </p>
<p>晚饭是 4:00 开始的，5:30，有位中国最大电信公司的COO 要先走，我便走出房，打算请那一位晚到的朋友入座。才一出门，马上有人给我递名片，原来中国前三大投资银行的CEO已经在门外等了一个半小时了。这位CEO干过中国第一大，第二大，及第三大投资银行的CEO，当年中国最大的电信公司，就是由他做幕后推手推上市，风头一时无量，被人誉为 Deal Maker。这位CEO带了两个他的左右手，在门外等了一个半小时就为见Larry。我带他们三人进房，请Larry 起身，介绍这为中国最有名望的Deal Maker (the Greatest Deal Maker in China)。这位CEO坐在Larry的右手边，我坐在 Larry 左手边。同桌的还有一位全球最好的投资银行的中国首代，坐在我左手下面两个位置。 </p>
<p>爱理逊口才，风度，真是一级棒。他在桌上，没有人能跟他比，他讲了好多笑话给我们听，也讲了许多商场上的战略。 </p>
<p>他对于我安排事情及协调的能力非常激赏，故透过它的公司在亚太地区的负责人问我愿不愿意到他旗下工作。在我婉谢了他的好意。 </p>
<p>从那以后，我与爱理逊之间一职保持着联系，2002年九月，有幸到他旧金山的家作客。 </p>
<h2 id="我与「甲骨文」老板的一段交往-再见旧金山"><a href="#我与「甲骨文」老板的一段交往-再见旧金山" class="headerlink" title="我与「甲骨文」老板的一段交往: 再见旧金山"></a>我与「甲骨文」老板的一段交往: 再见旧金山</h2><p>Larry 和我自2002年六月初北京一别之后，只有靠电子邮件沟通。他问我如何才能飞去旧金山见他。我知道这是不太可能的是，在大中华区我有这么多的事情要忙，不可能一下子飞去看他。我于是想到了在 Case Practice Group 中义结金兰的好友，Polly Preventza。我想把Polly介绍个Larry，因为Polly在 Morgan Staney 的西岸办公市，做高科技的投资银行家。 Polly 在加州理工时就是有名的大美人。我虽不能身在旧金山，但希望因地缘关系Polly能就近陪Larry。 </p>
<p>Larry 有时也会给我写一些令人感动的信。 </p>
<p>终于，2002 年九月中的某一天，我忽然想飞到旧金山见他。另一个原因是，我身怀美国绿卡，必须每半年入美国一次。 上次是 2002 年4月初入美国，九月中该再去了。 Larry 写信告诉我与他见面的时间地点。 </p>
<p>我和 Polly 下午3:00到了 Larry 的家，一个长得很像Larry 的人来开门，Larry还没来，他说。Polly和我，先到房?坐。桌上有一盆很漂亮的花，这个人告诉我们这花是三天前Larry吩咐送来的。我一听，心?有一点感动，因为三天前我还坐在香港的办公室?想着真的能和Larry在他家见面吗。三天后我就坐在他的房子?。世界上的事情有时是说不定的。 </p>
<p>过了一会儿，Larry 从外面三步并作两步的跑了进来，身上穿着一件很薄的T-Shirt，上面写满了 “America’s Cup” 和 “Oracle” 的标记，原来Larry 一整天都努力的在和他的船员们一起训练，为2002 年冬季在澳大利亚的初赛而准备。他花了 US$ 85 mm 造了最好的船，请了最帮的船员及船长，就为了要赢得这个America’s Cup。 </p>
<p>Larry 好心的带我和Polly参观这个日本设计家做的房子。Larry的左右都是有名的富豪，如Getti Museum 的Getti。房子面向海和旧金山的跨海大桥全部是玻璃，有一片视野很大的海景，有很多帆船。他指向他的帆船，说方才他就在那?练习。但Larry对防地震非常重视，玻璃的材质陪上高级金属做的栏杆，这个房子在几次地震中都没事。 对着这一片海景，Larry说 “对 美丽的事物 我是永远不会厌倦的 – I can never get tired of beauty”。 </p>
<p>房子?有一个电梯，可以通到不同的楼层。每一层楼都有不同的材质和颜色设计。 有一层楼放了Larry最心爱的帆船缩影模型Sayonara。这架Sayonara 的长宽比很漂亮，像一个模特儿一样，颀长秀丽。在上面的层楼旁边还有一个很大露天洗三温暖的池子，旁边有树荫稍微挡着，因为这个池子比较高，故池?的人可以看两旁的邻居，但两旁的邻居不能看到池?的人。 </p>
<p>这间房子虽然漂亮，但看得出不是 Larry 常住的地方，倒更像是给记者参观的地方。屋子?没有他家人的照片，唯一的一张照片，是和新闻集团的总裁 Rupert Murdoch 梅铎一起赛船的。 </p>
<p>Larry，Polly 和我，三个人谈天说地，Larry的学识真的很渊博，天文地理，Information Technology，金融，生物科技， 丛 London 到深圳各地的文化他都能朗朗上口，真的非常厉害。我们从下午聊到晚上天暗了，他说他还要去和他女儿用晚饭。 </p>
<p>临走前，Larry在一楼为我们表演了几首吉他，一楼除了吉他之外，还有一台 Steinway 史坦威钢琴。Larry 应该会弹钢琴，因为他用吉他弹了许多钢琴名曲，有 Bach 巴哈也有 Beethovan贝多芬，尤其是贝多芬的”Fur Elise 给艾丽斯”，我听了很感动。我也上去这一台 Steinway弹琴帮他伴奏，我知道他一定不喜欢别人强他的风头，故我用高很多个八度试着提他伴奏，感觉一下为Larry伴奏是什?滋味。十八年前，我就是参加旧金山的儿童天才才艺比赛，用钢琴得到全旧金山的冠军。十八年后，我竟有幸用钢琴为我最崇拜的人 (My Favorite Billionaire) 在旧金山伴奏，我告诉自己，有一天我一定会再回到旧金山来。 </p>
<p>我很珍惜这一段缘分。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;整十年前，我妈妈洪冬桂博士写「我家胖比」一书，造成很大轰动。那个小名「胖比」的女孩，就是我─艾丽斯，粟 (Alyce Su)，粟耀莹。那本书写了我从降生到大学毕业的许多趣事，把我塑造成一个很逗人喜欢、奋发上进的小姑娘。我还记得那书最后的结论是：“人们不会怀疑十年之后的科学家名单中有粟耀莹的名字，可是到那时候，除了她爸爸粟教授外，很少人会知道世界上曾有一个名叫『粟胖比』的女孩”！&lt;/p&gt;
&lt;p&gt;妈妈这个结论，是根据我当年表现出的性向而下的。
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="感言" scheme="http://i90s.vip/tags/%E6%84%9F%E8%A8%80/"/>
    
      <category term="投资" scheme="http://i90s.vip/tags/%E6%8A%95%E8%B5%84/"/>
    
  </entry>
  
  <entry>
    <title>一个清华学生留学香港后对人生的思考</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/11/01/%E4%B8%80%E4%B8%AA%E6%B8%85%E5%8D%8E%E5%AD%A6%E7%94%9F%E7%95%99%E5%AD%A6%E9%A6%99%E6%B8%AF%E5%90%8E%E5%AF%B9%E4%BA%BA%E7%94%9F%E7%9A%84%E6%80%9D%E8%80%83.html"/>
    <id>http://i90s.vip//心情笔记/2019/11/01/一个清华学生留学香港后对人生的思考.html</id>
    <published>2019-11-01T14:36:34.000Z</published>
    <updated>2019-12-01T09:42:48.214Z</updated>
    
    <content type="html"><![CDATA[<p>98年本科毕业，又顺利地被保研，当时的我只是一个憨憨的书呆子，纯洁的如同高中生，在清华这种和尚庙一般的理工学校里呆了四年，女孩似乎是山下的老虎，神秘得让我一见就脸红心跳。未来是什么对于我就是“读完研再说”，反正成绩还行，不读白不读。天上掉了馅饼，用我的兄弟的话来说。香港正好回归一周年，教育部要选派一批本科毕业生去香港科技大学读研，以加强两地的教育和科研交流。清华当然要占不少名额，系里的几个牛人去了美国，所以这个饼就掉到了我头上，确实是个不错的饼，不用考G、考托、全额奖学金，连什么手续都是学校和教育部包办了，我分文不花，后来香港科大的联络人抱怨中国的办事效率和程序烦琐，至于怎样的麻烦过程，我至今都一无所知。<br><a id="more"></a></p>
<h2 id="香港科大"><a href="#香港科大" class="headerlink" title="香港科大"></a>香港科大</h2><p>　　就这么糊里糊涂地来到了香港。依山傍海的科技大学美得如同世外桃源，现代感的建筑更让我们爽眼。当时的一个哥们说：“妈的，就是用银子在荒山野岭堆出来的，这样的物质条件算是让我满足了。”后来得知就是亚洲最美丽校园，倒也丝毫不怀疑。据说是香港政府感到了贸易和服务的优势正受中国沿海城市的挑战，而科技就是竞争力，就下了狠心投钱建了这学校，请来了学者。耗资400亿港币，相当于微软公司一年的纯利。组织的参观，教授的讲话，英语的培训很快就过去了，当时的新奇兴奋也褪得干净，每天面对这青山海景，最后也麻木得没有感觉了。由此可以推测娶一个漂亮老婆是没有多大意义的，如果不是为了炫耀。教授大多是华人，台湾和大陆出身的不少，反倒香港人是少数派，很多都是在北美的名校里拿了PhD,奔这里的高薪来了，他们的PhD头衔总要和名字相片挂一起，挂一辈子，Harvard和Standford之类的当然就香了。正教授可以一年拿到一百多万港币，也就是一个月可以买小汽车，比一般的美国大学高。知识真的值钱了，让我们充满了对未来的向往。有回和教授们吃饭，谈及大陆大学教授的待遇，他们就感慨：“知识分子真被廉价到了可耻的地步。”我们也无话可说，反正不是我的错。然而钱不是好拿的，很多教师正是三十出头，教授职称还未到手，和学校只是几年合同，其他的学者也不断在申请进来，所以压力颇大，辛勤程度比公司打工仔有过之而无不及。既然自己做学问要紧，培养学生的事就要往后排了。刚进来时很多教师和我们亲切讲话，之后就不见了，好久不见就不认得。研究生当然有导师的，只要自己不去找他，他是肯定不会找我的。上课之后就是绝对的自由，当时自由得很是惬意。</p>
<p>萧伯纳说人生的苦闷有二，一是欲望没有被满足，二是它得到了满足。</p>
<p>这话的确是部分的真理。当我住在这绝世美丽的地方，可以随心所欲的去商店买东西不用担心付不起帐，可以任意的支配自己时间时，最初的半年里，却发现情绪每况愈下。西方化的建筑设计将个人的所谓privacy保护发挥到极致，进了宿舍就基本感觉不到他人的存在，同单元的人也有独立的卧室，大家都是进了房，将门一关，隔离了，谁也不好意思去敲门。刚来时认识的一伙人，后来发现根本遇不着，如同消失了一般。同住一起的是三十好几的叔叔级人物，偶尔可以说上一两句话，却永无可能说很多。大家都像是住在不同的空间里做研究，忙碌的无瑕顾及他人。</p>
<p>　　平心而论，对于一个成熟的研究者，如果他有确定的目标和兴趣，对生活人生都不再有不切实际的幻想，准备投身科学研究中，那么这里真是一个好环境。但是我种茫茫睁着无知的眼睛的毛头小子，却是完全另外的感觉。那种茫然的苦闷感觉真是难以描述，找不到人玩，只是将窗户开了又关，关了又开，不停的喝水，仍然感觉不舒服。</p>
<p>怀念在清华的破楼里相互串门打闹的日子，怀念抱着篮球在走廊里叫一声就应者云集的日子，可是怀念解决不了问题。以孩子的心理去进入成熟严谨的环境，不可不说是一次考验。</p>
<p>　　多年的功利教育的辛勤培养，我一路顺当地走过来，发现完全的上当。我在成功的通过了一次次考后，最终都不知道我为什么要通过这些占距人生的考试，这个所谓的优秀学生只是在不停地让自己去符合那个“优秀”的外在标准来麻痹自己的虚荣心，而自己，那个真正的自己却一直没有存在过，没有发育过。我学的任何课程都无法帮我解决当时的苦恼，那么每天学那些微分方程又是为了什么？还去为了父母的微笑，人们的赞许吗？年年得奖学金的清华毕业生是了这么一个怪物：不知道自己要什么，也不知道生活是什么，对社会毫无接触，二十出头，可是见女孩子就一身不自在，会解各式各样的方程，却不能解决自己的困惑，硕士博士的路就在眼前，可是不知道还应不应该这样走下去，这状态难道就是我的追求？一个智商还不错的人努力多年就变成这样？</p>
<p>　　这是一个问题，很早就有了，只不过太晚地暴露出来，我相信这样的问题依然将被很多师弟师妹们面临，我相信在清华依旧有很多像我当年一样的学生。当看到他们天真的讨论： G 2<strong>*, 托 6</strong>，GPA 3.<em>, 学校名次Top *</em>, 仿佛几年的辛劳就只为那么点数字，人生的终极标就是goabroad. 我无法不为他们忧虑。这也是促使我写这篇文章的主要原因。</p>
<p>　　很多人没有对做研究的真正兴趣，但是用尽了精力去获得一个去国外做科学研究的机会，就洋溢在掩饰不住的喜悦里，甚至对人生毫无真正规划，对自己的兴趣一无所知，为出国而出国，那将在告别父老乡亲后去迎接苦闷的开端。</p>
<p>　　香港的学生很实际，决大多数本科毕业就去赚钱，三十之间为结婚买房奋斗，如果告诉一个香港人说你二十八了还在读博士，他会觉得你很失败，可能是根本不会赚钱。而留下来读博士的香港学生，就是真的很喜欢作研究的人，扎实地做事，他们的认真让我们一批朝三暮四，心猿意马的大陆学生汗颜。</p>
<h2 id="生活在香港"><a href="#生活在香港" class="headerlink" title="生活在香港"></a>生活在香港</h2><p>　　都说香港是弹丸之地，其实一千多平方公里的面积也不算小，不过大多是山，可利用的地方不多，很多商业区都是添海造出来的。亚热带的气候，又在到处是山和海湾的地方，风景当然好。香港的气候比北京舒适一万倍，冬天冷不了，夏天也不太热，甚至没有明显的四季感。只是上半年天气有些潮。成天都有湿湿的感觉，北方人有点受不了。</p>
<p>　　香港的交通极其发达，公共车从不拥挤，也很少堵车，可是香港的道路比北京的窄得多，车也不会少，布局和管理更好而已，看来北京走向国际化还须努力。这里是名符其实的购物天堂，东西也不算贵，电器和服装可能比北京便宜，特别是国际名牌，由于没有关税，肯定要比大陆便宜。所以不必带很多衣服来，足够便宜了。但是服务业，比如吃饭，理发，涉及到员工劳动和地租的就要比大陆贵好几倍。可以随便往来深圳也是在香港的一大好处，一天可以轻松来回好几次，在香港读书的学生可一得到香港的临时身份证，加上护照上盖个章，就可以自由出入境了。</p>
<p>　　常有人问及香港的影视明星，可是到了香港就觉得那些人也只是打工仔，背后是更有影响力的老板，一旦老板不想捧了，明星就会很快消失，新人会取而代之。看到他们卖力地载歌载舞，其实也是生存需要，在商业社会里那是绝对的驱动力。</p>
<p>　　香港的金融和资讯服务相当发达，在所谓第一世界里也算相当突出，可以很便宜的享受到信用卡，电讯，互联网服务，因此有些人在香港呆久了再回来反而不适应了，主要就是这些方面，当然还有其他制度等软件原因。</p>
<p>　　说到学校的生活，物质条件比国内任何大学好，甚至条件好过美国不少学校，香港的学生很少住宿学校，所以一到周末放假学校就很冷清。通常大陆学生独享学校设备，偌大电脑房和运动场，舒服的游泳池，都有不少美好回忆。学生宿舍条件不错，可以做饭，自己做比在餐厅里吃来的便宜，所以大陆学生会乐此不疲，周末常三五成群，做吃的为乐。餐厅里中西餐都有，中餐以广东口味为主，忙起来时以营养为重，口味不对也只能将就吃了。</p>
<p>　　现在在香港的大陆学生不算多，总共有四五百人，各个学校都有学生联谊会，是比较松散的组织，也有一些机会认识朋友。周末会组织放放电影，搞舞会。临近考试或论文时，谁也没心思搞活动。香港的学生很好打交道，在成熟的社会里长大的人，心理相对简单且好玩，不像一些大陆学生常常过分盘算自己的明天，将自己逼的很累。他们对大陆也渐渐感兴趣，虽然他们常常不知道湖南和四川，只说得上秦始皇和毛泽东。只要主动点和他们交流，是可以结识不少朋友的，粤语不是障碍，很多人可以听普通话，而且，广东话不难学，不留神就长进不少。</p>
<h2 id="关于工作机会"><a href="#关于工作机会" class="headerlink" title="关于工作机会"></a>关于工作机会</h2><p>　　很多人就终于跳到北美去了，大多还是接着读书，从这个意义上讲，香港只是跳板。</p>
<p>　　在香港留下工作的机会不多，如果在进香港的第一天了解这一点，是有好处的。也有回祖国的，我就是，所以我在这里写文章了，看到很多朋友询问去香港读书的问题，作为过来人，就写了这些，如果能给这些朋友提供一点有益的信息，就很满足了。</p>
<p>　　上次写了文章发表在海外学子版，很多朋友给我回信，给了我很大的鼓励，真的没想到过自己的东西会给别人带来影响。留学的经历给了我很多，几乎是一个脱胎换骨的过程，在一篇文章里是不可能都讲完的，所以我再写一个续集，好莱坞搞续集纯是为赚钱，我呢是什么都不图，万一有ppmm看了之后找我，最爽不过。将心底里的一点点“龌龊” 都暴露出来，可以痛快讲了。</p>
<h2 id="凡事都是虚空"><a href="#凡事都是虚空" class="headerlink" title="凡事都是虚空"></a>凡事都是虚空</h2><p>　　来自发展中国家的人，难免在神情上都多一丝生存紧张，中国在海外的留学生尤其让人感觉到这一点。看不到出自内心的笑，连谈话时也似乎只有一个主题：今后有什么打算？每做一件事，都在问自己：对我有没有好处？</p>
<p>　　坦白的说我自己刚到香港时就是这样，只觉得自己多么没着落，无根无底的飘在他乡，我要努力啊，绝不可浪费自己的任何精力，房子，车子，名誉，地位，还有漂亮老婆，我什么都要啊。要学最能给我带来利益的东西，去做最有利自己的事情，直到我成功。当时我就是这么典型功利，到现在我都想这样痛骂自己。</p>
<p>　　数学指出函数的极大值往往在最不稳定的点取到，人追求极端就会失去内心的平衡，到时候就不难体会到数学原理的深刻。我很快让我的功利心理逼到无路可走了，对所学的东西怀疑，担心自己变成书呆子，对自己有信心，找不到真正的朋友，找不到让身心平静的乐趣，每天都在心潮起伏。最后我去找学生辅导员。愚蠢的诉说倒不多提了，不过我记得他大胡子的脸有了微笑，眼睛里放出宽容而温和的光。他告诉我觉的我很有意思，他第一次遇到这么坦白的学生。“那些东西有什么意义呢，你怀疑得很好。“之后就翻出圣经来，给我读某些章。</p>
<p>　　Everything is meaningless.竟是圣经里的话语。那是我看到的最为震惊的一句话，也是我后来觉得最深刻的一句话。中国人很难理解，对在功利教育里熏陶过来，缺少人格教育的中国学生，更无异于晴天霹雳。成绩，offer, 学位，这样那样的好处，每天拼命算计的东西有什么意义？假设你突然死掉，世界将会怎样？世界将一样绚丽，地球转的一样快，太阳系每天在宇宙中换一个位置。大海还是大海，波涛还是波涛，一样的花开花落，潮起潮落。你的亲人可能会掉眼泪，但是周围的人在三个月内将你忘个干净，那是你曾经那么在乎他们怎么看你的一群人啊。如果上帝存在，在他的眼里，你是多么可怜的小虫子，在活着的短暂岁月里，在最美好的青春里，都不曾快乐过，用尽心力去聚集一大堆外在和心灵没有关系的小东西，只是出于对未来的没有信心，小小的心灵在接近熄灭的一天还在发出那个愚蠢的声音，让你忙碌，让你忧虑的声音：我要，我还要。天底下充满了这样的小虫子，当一个离开了，又有一个来了，做着同样的事情，汹涌着同样的小小念头，受着同样的煎熬。于是上帝要感慨了：虚空的虚空，凡事都是虚空。已有的事，后必再有；已行的事，后必再行。日光之下，并无新事。</p>
<p>　　已过的世代，无人纪念；将来的世代，后来的人也不纪念。</p>
<p>　　                                           ——圣经 旧约 传道书</p>
<p>　　我不是在传教，当时的辅导员也不是在传教，但是让我立刻看到自身的渺小，物质追求的虚妄，内心的愚昧。看看资本主义的学生辅导，是不是比我们这边高明多了？马哲曾帮助过我们什么？</p>
<h2 id="不要忧虑"><a href="#不要忧虑" class="headerlink" title="不要忧虑"></a>不要忧虑</h2><p>　　“不要为明天忧虑，天上的飞鸟，不耕种也不收获，上天尚且要养活它，田野里的百合花，从不忧虑它能不能开花，是不是可以开得和其它一样美，但是它就自然的开花了，开得比所罗门皇冠上的珍珠还美。你呢，忧虑什么呢？人比飞鸟和百合花贵重多了，上帝会弃你不顾吗？”</p>
<p>　　一个朋友告诉我，他在等美国 offer 的时候，常常梦到接到牛校offer, 过度兴奋到醒，更为郁郁，感慨“但愿长醉不复醒”。这样的故事大家听了不会太惊诧，由此不难理解《儒林外史》中的进中举了。而得到offer的人到了海外，往往要经历更多的梦醒时分。</p>
<p>　　为什么活得这么累？生命本是如此美丽，连飞鸟和野花都可以尽情地享受上天的恩赐，而这些有高等思维的聪明人，却活活让思维搞得神情郁郁，哀声叹气。</p>
<p>　　常有人感叹西方人笑起来那么真实，那么出自内心，探讨起来，又归结到他们更有钱，他们的社会更发达。可我觉得那不是原因。原因就是他们比中国学生更接近飞鸟和野花罢了，更接近《阿甘正传》里的弱智罢了。他们更天真，相信那个万能的上帝会永不遗弃他，所以他们可以少想很多的问题，反而过得更顺利，在团队里表现得更凝聚，因为过分的私心是无法向大家共同的上帝交代的，他们可以很快做出一个Microsoft，一个Dell，但是大家可以看看中国的北大方正，联想，新浪，管理层一年的地震比台湾还多, 这么多年来，连冲出亚洲的野心都没有真正实现过。 这难道不是上帝给西方人带来的好处，耶稣说信我就可以得救，不管这个上帝是不是虚拟的，但他在事实上填补了人性的巨大空白，人家的Microsoft就证明了他的存在，正如计算机的虚拟内存，尽管虚拟，但事实上的作用是巨大的。中国学生总是怀疑这个看不见的上帝是否存在，更在私下里说，他对我能带来好处吗？其实中国人什么都不信，只信好处，从古时的考八股起，读书就是为了好处。因此，大家每天活在害怕没有好处的忧郁里，想靠自己小小的思维，在着巨大的世界系统里去谋取好处，上帝忍了泪水，背过脸去。</p>
<h2 id="思维的无奈"><a href="#思维的无奈" class="headerlink" title="思维的无奈"></a>思维的无奈</h2><p>　　我并不主张虚无，尽管我在上一篇文章里尽力去指出物质追求的虚妄。正如萨特认为，人生本是本无意义，但是怎样摆脱虚无却是有意义的。王朔的意义在于砸碎那些没有意义的假崇高，伍迪.艾伦的意义就在于不断指出人生的荒谬。如果一切都是那么可笑，我们怎样面对每天的24小时？但是活着就是这么简单，它只是一个过程，简单而自然地发生，以至于任何干扰和关注都是多余。就像飞鸟掠过天空，野花静静地开放。能把什么东西叫做现在吗？你能占有什么东西吗？一切的意义只在时间的流动的河中。就像一团火，哪个燃烧的过程才叫火，一旦过程停止了，火不存在了。人的思维在作怪，它是一个双面的东西，它不总是带给我们好处，虽然我们对它有那么多自信。思维在很多时候严重地干扰了那个自然的生命过程，它在想单个的状态好不好，值不值得，合不合规范，能给自己带来什么，所以我们很快变得不快乐，不安稳，再也无法享受那种自然的喜悦了，正像被摄像的人，他的表情立刻不自然起来。恐怖片里的鬼魂可能一直不曾出现，人们却开始牙齿打颤，是被自己思维折磨而已。学计算机的朋友肯定知道操作系统将一个进程悬挂起来的意思。人的那个蠢笨不堪的思维，凭什么要常驻内存？它那么长期的运转，又真正解决了多少问题？为什么不在必要的时候悬挂它，去享受生命的自然？明白这一点将改变你的生活，思维会使你陷入矛盾，很多时候它是多余的，用心去体会，甚至用毛孔去感受就足够了。当你不再判断，不再分辨，不再比较，不再权衡，你就立刻、和谐起来。“采菊东篱下，悠然见南山”。那时，还用考虑什么呢？“此间有真意，欲辩已忘言”，连言语都是多余，因为言语来自思维。佛陀的捻花一笑，详和的神情，虽静坐，似乎已飞跃世间一切，他坐在了那个生命的根本之上, 再也没有一丝的不和谐。</p>
<p>　　读书的时候，我常常到海边听涛声，坐下来看着太阳落下，那会是我一天最美好的时间，当太阳没下去，晚霞渐渐褪去颜色，波浪依然轻轻拍打岸边，幕色从四周将我围过来，静默中我会在心灵里升起喜悦，感觉到冥冥中那个永恒的力量，它在紧紧将我抱住，天地万物和我一样同在，也被温和地抱着，我将永不孤独，永不伤心，永不绝望，因为那力量就一直在那里，将永远在那里，我是它的恩赐，我的灵魂从未像那时一样枝繁叶茂，内心从未像那时一样宁静和谐。</p>
<p>　　我不用去分辨那种力量，是上帝也好，上天也好，老子说的道也好，有什么关系呢？分辨只是是思维常干的蠢事罢了。所有的心灵都是一样的，所以我相信所有人都有那个和谐的状态，就像收音机有那个频道一样，只不过太多人没有调到过。太阳，大海，清风明月，鸟语花香，生生不息的物种，是多么大的恩赐啊，只在我们断暂的生命里才可以感受到，可是太多的人从不念及。他们将自己全部地交给了少得可怜的脑细胞，心灵交给了那个拙劣的 CPU,时时刻刻在做狭窄不堪的运算和判断，所以才会长时间挣扎焦虑，只看到85分和90分的区别，5000元月薪和10万年薪的不同，牛校和烂校的分辨。所以“郁闷”，“无耻”，“倒霉”，“不爽”，“急”，这样的词汇就开始在嘴边泛滥了，就像破电脑的出错提示一样多。</p>
<p>本没有打算再写很多了，关于人生的刨根问底本来就是沉重的课题，无异让学业繁多的学子们再怀疑自己，平添忧虑。倒不如多说点逗乐的事，每天多嘻嘻哈哈一阵。</p>
<p>前不久见到北大的一个女生，说我前面介绍香港的文字很实用，后面的文章就越来越看不懂了，可以理解，并不是所有的人都要像我一样想这些问题的，特别是女孩，一天多说几声“挺好的”“好温馨哟”就算过得不错了，古今中外都不曾出过一个女哲学家。但是，这位未曾谋面的北大师弟在等我的续集，谢谢你，xmdl(阿扁鱼）, 我不愿让你失望这一篇是为你而写的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;98年本科毕业，又顺利地被保研，当时的我只是一个憨憨的书呆子，纯洁的如同高中生，在清华这种和尚庙一般的理工学校里呆了四年，女孩似乎是山下的老虎，神秘得让我一见就脸红心跳。未来是什么对于我就是“读完研再说”，反正成绩还行，不读白不读。天上掉了馅饼，用我的兄弟的话来说。香港正好回归一周年，教育部要选派一批本科毕业生去香港科技大学读研，以加强两地的教育和科研交流。清华当然要占不少名额，系里的几个牛人去了美国，所以这个饼就掉到了我头上，确实是个不错的饼，不用考G、考托、全额奖学金，连什么手续都是学校和教育部包办了，我分文不花，后来香港科大的联络人抱怨中国的办事效率和程序烦琐，至于怎样的麻烦过程，我至今都一无所知。&lt;br&gt;
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="博客" scheme="http://i90s.vip/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>为什么有些人开车到家后会独自坐在车中发呆</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2019/10/31/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E4%BA%9B%E4%BA%BA%E5%BC%80%E8%BD%A6%E5%88%B0%E5%AE%B6%E5%90%8E%E4%BC%9A%E7%8B%AC%E8%87%AA%E5%9D%90%E5%9C%A8%E8%BD%A6%E4%B8%AD%E5%8F%91%E5%91%86.html"/>
    <id>http://i90s.vip//心情笔记/2019/10/31/为什么有些人开车到家后会独自坐在车中发呆.html</id>
    <published>2019-10-31T15:00:22.000Z</published>
    <updated>2019-12-01T09:42:52.301Z</updated>
    
    <content type="html"><![CDATA[<p>关于一个问题和这个问题的答案</p>
<p>最近看到知乎网上有人提问了一个问题，觉得很值得分享给大家：</p>
<p>问题是：为什么有些人开车到家后会独自坐在车中发呆？</p>
<p>回答的人有很多，有人说因为车里好安静，有种小时候看树下蚂蚁搬家时的平静。</p>
<p>还有人说，是因为车里那首歌没听完 <a id="more"></a></p>
<p>有个朋友说，他不仅喜欢把车开到家门口停一会儿，有时候他甚至绕过家门口掉个头奔快环，有无数个想不明白的夜晚，他一个人开着音响在高速上兜圈。 他的最高纪录是开着暖气熄了灯坐在车里静静的看着人们在楼下银行的 atm 机里取钱，来来往往，看了一个小时。</p>
<p>很难理解对不对？</p>
<p>好好的家不回</p>
<p>车里又没有志玲姐姐</p>
<p>为啥喜欢待在车里？</p>
<p>后来<br>回答的人越来越多<br>…<br>…<br>直到有个人说——<br>很多时候我也不想下车，因为那是一个分界点。推开车门你就是柴米油盐、是父亲、是儿子、是老公，唯独不是你自己；在车上，一个人在车上想静静，抽颗烟，这个躯体属于自己。</p>
<p>这个答案迅速获得了超过 4000 人的赞同。</p>
<p>是啊，活着真的太累。每天带着各种面具忍着各种脾气面对着各种人。不断对自己灌输 “成年人”“成熟” 的行为准则，就算回到家也要小心面对自己的父母妻子，照顾他们的情绪，得不到半点轻松。可我有时候也是会想任性的啊！只有在车里，一个幽暗狭小的空间，一支忽明忽灭的香烟，晚上 fm 主持人轻柔的话语，才会让你有种与世隔绝的感觉，也才会让你意识到 “自我” 的存在，那种感觉实在太好。</p>
<p>当然，并非只有男士才有这种喜欢在车里发呆的习惯，有些女性也有相同的感觉。还有人发自内心的建议姑娘们稍微有点实力就买个小车，真的是既私密又体贴。吵架了伤心了难过了不怕没有去处，油门一蹬四处晃荡，哭一场可以撑半年，然后补个妆回去，厚着脸皮嬉皮笑脸继续把游戏玩下去。</p>
<p>我们每天扮演着各种各样的角色：</p>
<p>在公司，你或是下属，或是上司；</p>
<p>在学校，你或是学生，或是老师；</p>
<p>在家里，你或是丈夫，或是妻子；</p>
<p>甚至走在大街上，你也或是男神女神，或是屌丝女汉子，再不济也是个路人。</p>
<p>唯独在车里的那么一小会儿，你就是你自己。</p>
<p>听着没有放完的曲子，感受此时此刻无需伪装，没有杂质的纯净。</p>
<p>心里想着：“还好有这样一个时刻，我什么也不是，就是我自己。还好。”</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于一个问题和这个问题的答案&lt;/p&gt;
&lt;p&gt;最近看到知乎网上有人提问了一个问题，觉得很值得分享给大家：&lt;/p&gt;
&lt;p&gt;问题是：为什么有些人开车到家后会独自坐在车中发呆？&lt;/p&gt;
&lt;p&gt;回答的人有很多，有人说因为车里好安静，有种小时候看树下蚂蚁搬家时的平静。&lt;/p&gt;
&lt;p&gt;还有人说，是因为车里那首歌没听完
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="博客" scheme="http://i90s.vip/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>结构体和链表（2）</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/10/28/%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E9%93%BE%E8%A1%A8%EF%BC%882%EF%BC%89.html"/>
    <id>http://i90s.vip//软件笔记/2019/10/28/结构体和链表（2）.html</id>
    <published>2019-10-28T02:20:08.000Z</published>
    <updated>2019-12-01T09:44:58.683Z</updated>
    
    <content type="html"><![CDATA[<p>我们以上面的程序为基础，但为了我们方便学习删除我们休整结构体为<br>struct test<br>{<br>int number;<br>float socre;<br>test *next;<br>};<br>number为唯一的编号每一个节点的。<br>删除的我就不多说了，里面重要部分有注解。<a id="more"></a><br>　 　特别注意deletel函数的参数意义，指针的引用在这里很重要，如果只是指针，或者只是应用都是不行的，为什么仔细思考，很多知名的教材在这一问题上 都很模糊，而且很多书还有错误，程序不错，但思路是错的，我这里特别不说，请大家仔细阅读程序，如果还是有问题，可以回此帖，我会回答的。</p>
<p>　　完整代码如下：</p>
<p>#include <iostream><br>using namespace std;<br>struct test<br>{<br>    int number;<br>    float socre;<br>     test <em>next;<br>};<br>test </em>head;//创建一个全局的引导进入链表的指针<br>test <em>create()<br>{<br>     test </em>ls;//节点指针<br>     test <em>le;//链尾指针<br>     ls = new test;//把ls指向动态开辟的堆内存地址<br>    cin&gt;&gt;ls-&gt;number&gt;&gt;ls-&gt;socre;<br>     head=NULL;//进入的时候先不设置head指针指向任何地址,因为不知道是否一上来就输入null跳出程序<br>     le=ls;//把链尾指针设置成刚刚动态开辟的堆内存地址,用于等下设置le-&gt;next,也就是下一个节点的位置<br>    while(ls-&gt;number!=0)//创建循环条件为ls-&gt;number的值不是null,用于循环添加节点<br>     {<br>        if(head==NULL)//判断是否是第一次进入循环<br>         {<br>             head=ls;//如果是第一次进入循环,那么把引导进入链表的指针指向第一次动态开辟的堆内存地址<br>         }<br>        else<br>         {<br>             le-&gt;next=ls;//如果不是第一次进入那么就把上一次的链尾指针的le-&gt;next指向上一次循环结束前动态创建的堆内存地址<br>         }<br>         le=ls;//设置链尾指针为当前循环中的节点指针,用于下一次进入循环的时候把上一次的节点的next指向上一次循环结束前动态创建的堆内存地址<br>         ls=new test;//为下一个节点在堆内存中动态开辟空间<br>        cin&gt;&gt;ls-&gt;number&gt;&gt;ls-&gt;socre;<br>     }<br>     le-&gt;next=NULL;//把链尾指针的next设置为空,因为不管如何循环总是要结束的,设置为空才能够在循环显链表的时候不至于死循环<br>    delete ls;//当结束的时候最后一个动态开辟的内存是无效的,所以必须清除掉<br>    return head;//返回链首指针<br>}<br>void showl(test </em>head)<br>{<br>    cout&lt;&lt;”链首指针:”&lt;<head<<endl; while(head)="" 以内存指向为null为条件循环显示先前输入的内容="" {="" cout<<head-="">number&lt;&lt;”|”&lt;<head->socre&lt;<endl; head="head-">next;<br>     }<br>}<br>void deletel(test <em>&amp;head,int number)//这里如果参数换成test </em>head,意义就完全不同了,head变成了复制而不是原有链上操作了,特别注意,很多书上都不对这里<br>{<br>     test <em>point;//判断链表是否为空<br>    if(head==NULL)<br>     {<br>        cout&lt;&lt;”链表为空,不能进行删除工作!”;<br>        return;<br>     }<br>    if(head-&gt;number==number)//判删除的节点是否为首节点<br>     {<br>         point=head;<br>        cout&lt;&lt;”删除点是链表第一个节点位置!”;<br>         head=head-&gt;next;//重新设置引导指针<br>        delete point;<br>        return;<br>     }<br>     test </em>fp=head;//保存连首指针<br>    for(test *&amp;mp=head;mp-&gt;next;mp=mp-&gt;next)<br>     {<br>        if(mp-&gt;next-&gt;number==number)<br>         {<br>             point=mp-&gt;next;<br>             mp-&gt;next=point-&gt;next;<br>            delete point;<br>             head=fp;//由于head的不断移动丢失了head,把进入循环前的head指针恢复!<br>            return;<br>         }<br>     }<br>}<br>void main()<br>{<br>     head=create();//调用创建<br>     showl(head);<br>    int dp;<br>    cin&gt;&gt;dp;<br>     deletel(head,dp);//调用删除<br>     showl(head);<br>    cin.get();<br>    cin.get();<br>}<br>最后我学习一下如何在已有的链表上插入节点<br>我们要考虑四中情况,<br>1.链表为空!<br>2.插入点在首节点前<br>3.插入点找不到的情况我们设置放在最后!<br>4.插入点在中间的情况!<br>今天的程序在昨天的基础上做了进一步的修改,可以避免删除点找不到的情况,如果找不到删除点就退出函数!</endl;></head-></head<<endl;></iostream></p>
<p>#include <iostream><br>using namespace std;<br>struct test<br>{<br>    int number;<br>    float socre;<br>     test <em>next;<br>};<br>test </em>head;//创建一个全局的引导进入链表的指针<br>test <em>create()<br>{<br>     test </em>ls;//节点指针<br>     test <em>le;//链尾指针<br>     ls = new test;//把ls指向动态开辟的堆内存地址<br>    cout&lt;&lt;”请输入第一个节点number和节点score,输入0.0跳出函数”&lt;<endl; cin="">&gt;ls-&gt;number&gt;&gt;ls-&gt;socre;<br>     head=NULL;//进入的时候先不设置head指针指向任何地址,因为不知道是否一上来就输入null跳出程序<br>     le=ls;//把链尾指针设置成刚刚动态开辟的堆内存地址,用于等下设置le-&gt;next,也就是下一个节点的位置<br>    while(ls-&gt;number!=0)//创建循环条件为ls-&gt;number的值不是null,用于循环添加节点<br>     {<br>        if(head==NULL)//判断是否是第一次进入循环<br>         {<br>             head=ls;//如果是第一次进入循环,那么把引导进入链表的指针指向第一次动态开辟的堆内存地址<br>         }<br>        else<br>         {<br>             le-&gt;next=ls;//如果不是第一次进入那么就把上一次的链尾指针的le-&gt;next指向上一次循环结束前动态创建的堆内存地址<br>         }<br>         le=ls;//设置链尾指针为当前循环中的节点指针,用于下一次进入循环的时候把上一次的节点的next指向上一次循环结束前动态创建的堆内存地址<br>         ls=new test;//为下一个节点在堆内存中动态开辟空间<br>        cout&lt;&lt;”请下一个节点number和节点score,输入0.0跳出函数”&lt;<endl; cin="">&gt;ls-&gt;number&gt;&gt;ls-&gt;socre;<br>     }<br>     le-&gt;next=NULL;//把链尾指针的next设置为空,因为不管如何循环总是要结束的,设置为空才能够在循环显链表的时候不至于死循环<br>    delete ls;//当结束的时候最后一个动态开辟的内存是无效的,所以必须清除掉<br>    return head;//返回链首指针<br>}<br>void showl(test </endl;></endl;></em>head)<br>{<br>    cout&lt;&lt;”链首指针:”&lt;<head<<endl; while(head)="" 以内存指向为null为条件循环显示先前输入的内容="" {="" cout<<head-="">number&lt;&lt;”|”&lt;<head->socre&lt;<endl; head="head-">next;<br>     }<br>}<br>void deletel(test <em>&amp;head,int number)//这里如果参数换成test </em>head,意义就完全不同了,head变成了复制而不是原有链上操作了,特别注意,很多书上都不对这里<br>{<br>     test <em>point;//判断链表是否为空<br>    if(head==NULL)<br>     {<br>        cout&lt;&lt;”链表为空,不能进行删除工作!”;<br>        return;<br>     }<br>    int derror=1;//设置找不到的情况的条件,预先设置为真<br>     test </em>check=head;<br>    while(check)//利用循环进行查找<br>     {<br>        if (check-&gt;number==number)<br>         {<br>             derror=0;//条件转为假<br>         }<br>         check=check-&gt;next;<br>     }<br>    if(derror)//如果为假就跳出函数<br>     {<br>        return;<br>     }<br>    if(head-&gt;number==number)//判删除的节点是否为首节点<br>     {<br>         point=head;<br>        cout&lt;&lt;”删除点是链表第一个节点位置!”;<br>         head=head-&gt;next;//重新设置引导指针<br>        delete point;<br>        return;<br>     }<br>     test <em>fp=head;//保存连首指针<br>    for(test </em>&amp;mp=head;mp-&gt;next;mp=mp-&gt;next)<br>     {<br>        if(mp-&gt;next-&gt;number==number)<br>         {<br>             point=mp-&gt;next;<br>             mp-&gt;next=point-&gt;next;<br>            delete point;<br>             head=fp;//由于head的不断移动丢失了head,把进入循环前的head指针恢复!<br>            return;<br>         }<br>     }<br>}<br>void insterl(int number)<br>{<br>     test <em>point=new test;<br>    cout&lt;&lt;”请输入节点number和节点score”&lt;<endl; cin="">&gt;point-&gt;number&gt;&gt;point-&gt;socre;<br>    if(head==NULL)//链表为空的情况下插入<br>     {<br>         head=point;<br>         point-&gt;next=NULL;<br>        return;<br>     }<br>    int ierror=1;//设置找不到的情况的条件,预先设置为真<br>     test </endl;></em>le;<br>     test <em>check=head;<br>    while(check)//利用循环进行查找<br>     {<br>        if (check-&gt;number==number)<br>         {<br>             ierror=0;//条件转为假<br>         }<br>         le=check;<br>         check=check-&gt;next;<br>     }<br>    if(ierror)<br>     {<br>        cout&lt;<le->number;<br>         le-&gt;next=point;<br>         point-&gt;next=NULL;<br>        return;<br>     }<br>   if(head-&gt;number==number)//检测是否是在第一个节点处插入<br>     {<br>         point-&gt;next=head;<br>         head=point;<br>        return;<br>     }<br>    for(test </le-></em>&amp;mp=head;mp-&gt;next;mp=mp-&gt;next)//在链表中间插入<br>     {<br>        if(mp-&gt;next-&gt;number==number)<br>         {<br>             point-&gt;next=mp-&gt;next;<br>             mp-&gt;next=point;<br>            return;<br>         }<br>     }<br>}<br>void main()<br>{<br>     head=create();//调用创建<br>     showl(head);<br>    int dp;<br>    cout&lt;&lt;”请输入删除点如果找不到就跳出函数”&lt;<endl; cin="">&gt;dp;<br>     deletel(head,dp);//调用删除<br>     showl(head);<br>    int ip;<br>    cout&lt;&lt;”请输入插入点如果找不到就在链尾添加”&lt;<endl; cin="">&gt;ip;<br>     insterl(ip);<br>     showl(head);<br>    cin.get();<br>    cin.get();<br>}</endl;></endl;></endl;></head-></head<<endl;></iostream></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们以上面的程序为基础，但为了我们方便学习删除我们休整结构体为&lt;br&gt;struct test&lt;br&gt;{&lt;br&gt;int number;&lt;br&gt;float socre;&lt;br&gt;test *next;&lt;br&gt;};&lt;br&gt;number为唯一的编号每一个节点的。&lt;br&gt;删除的我就不多说了，里面重要部分有注解。
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="链表" scheme="http://i90s.vip/tags/%E9%93%BE%E8%A1%A8/"/>
    
      <category term="结构体" scheme="http://i90s.vip/tags/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    
  </entry>
  
  <entry>
    <title>结构体和链表（1）</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2019/10/28/%E7%BB%93%E6%9E%84%E4%BD%93%E5%92%8C%E9%93%BE%E8%A1%A8%EF%BC%881%EF%BC%89.html"/>
    <id>http://i90s.vip//软件笔记/2019/10/28/结构体和链表（1）.html</id>
    <published>2019-10-28T02:16:00.000Z</published>
    <updated>2019-12-01T09:44:52.058Z</updated>
    
    <content type="html"><![CDATA[<p>结构体可以看做是一种自定义的数据类型，它还有一个很重要的特性，就是结构体可以相互嵌套使用，但也是有条件的，结构体可以包含结构体指针，但绝对不能在结构体中包含结构体变量。<br>struct test<br>{<br>    char name[10];<br>    float socre;<br>     test *next;<br>};//这样是正确的!<a id="more"></a><br>struct test<br>{<br>    char name[10];<br>    float socre;<br>     test next;<br>};//这样是错误的!<br>　　利用结构体的这点特殊特性，我们就可以自己生成一个环环相套的一种射线结构，一个指向另一个。</p>
<p>链表的学习不像想象的那么那么容易，很多人学习到这里的时候都会碰到困难，很多人也因此而放弃了学习，在这里我说,一定不能放弃，对应它的学习我们要进 行分解式学习，方法很重要，理解需要时间，不必要把自己逼迫的那么紧，学习前你也得做一些最基本的准备工作，你必须具备对堆内存的基本知识的了解，还有就 是对结构体的基本认识，有了这两个重要的条件，再进行分解式学习就可以比较轻松的掌握这一节内容的难点。</p>
<p>下面我们给出一个完整的创建链表的程序，不管看的懂看不懂希望读者先认真看一下，想一想，看不懂没有关系，因为我下面会有分解式的教程，但之前的基本思考一定要做，要不即使我分解了你也是无从理解的。</p>
<p>代码如下，我在重要部分做了注解：</p>
<p>#include <iostream><br>using namespace std;</iostream></p>
<p>struct test<br>{<br>    char name[10];<br>    float socre;<br>     test *next;<br>};</p>
<p>test *head;//创建一个全局的引导进入链表的指针</p>
<p>test <em>create()<br>{<br>     test </em>ls;//节点指针<br>     test *le;//链尾指针<br>     ls = new test;//把ls指向动态开辟的堆内存地址<br>    cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;<br>     head=NULL;//进入的时候先不设置head指针指向任何地址,因为不知道是否一上来就输入null跳出程序<br>     le=ls;//把链尾指针设置成刚刚动态开辟的堆内存地址,用于等下设置le-&gt;next,也就是下一个节点的位置</p>
<pre><code>while(strcmp(ls-&gt;name,&quot;null&quot;)!=0)//创建循环条件为ls-&gt;name的值不是null,用于循环添加节点
 {
    if(head==NULL)//判断是否是第一次进入循环
     {
         head=ls;//如果是第一次进入循环,那么把引导进入链表的指针指向第一次动态开辟的堆内存地址
     }
    else
     {
         le-&gt;next=ls;//如果不是第一次进入那么就把上一次的链尾指针的le-&gt;next指向上一次循环结束前动态创建的堆内存地址
     }
     le=ls;//设置链尾指针为当前循环中的节点指针,用于下一次进入循环的时候把上一次的节点的next指向上一次循环结束前动态创建的堆内存地址
     ls=new test;//为下一个节点在堆内存中动态开辟空间
    cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;
 }

 le-&gt;next=NULL;//把链尾指针的next设置为空,因为不管如何循环总是要结束的,设置为空才能够在循环显链表的时候不至于死循环
delete ls;//当结束的时候最后一个动态开辟的内存是无效的,所以必须清除掉
return head;//返回链首指针
</code></pre><p>}</p>
<p>void showl(test *head)<br>{<br>    cout&lt;&lt;”链首指针:”&lt;<head<<endl; while(head)="" 以内存指向为null为条件循环显示先前输入的内容="" {="" cout<<head-="">name&lt;&lt;”|”&lt;<head->socre&lt;<endl; head="head-">next;<br>     }<br>}</endl;></head-></head<<endl;></p>
<p>void main()<br>{<br>     showl(create());<br>    cin.get();<br>    cin.get();<br>}<br>　　上面的代码我们是要达到一个目的：就是要存储你输入的人名和他们的得分，并且以链状结构把它们组合成一个链状结构。</p>
<p>程序种有两个组成部分<br>test <em>create()<br>和<br>void showl(test </em>head)<br>这两个函数，create是用来创建链表的 ，showl是用来显示链表的。</p>
<p>create函数的返回类型是一个结构体指针，在程序调用的时候我们用了showl(create());，而不用引用的目的原因是引导指针是一个全局 指针变量，我们不能在showl()内改变它，因为showl()函数内有一个移动操作head=head-&gt;next;，如果是引用的话我们就破 坏了head指针的位置，以至于我们再也无法找会首地址的位置了。</p>
<p>下面我们来分解整个程序，以一个初学者的思想来思考整个程序，由浅入深的逐步解释。</p>
<p>首先，我们写这个程序，要考虑到由于是一个链表结构，我们不可能知道它的大小到底是多大，这个问题我们可以用动态开辟堆内存来解决，因为堆内存在程序结 束前始终是有效的，不受函数栈空间生命期的限制，但要注意的是我们必须有一个指针变量来存储这一链状结构的进入地址，而在函数内部来建立这一指针变量显然 是不合适的，因为函数一旦退出，这个指针变量也随之失效，所以我们在程序的开始声明了一个全局指针变量。<br>test *head;//创建一个全局的引导进入链表的指针<br>　　好解决了这两个问题，我们接下去思考</p>
<p>有输入就必然有输出，由于输出函数和输入函数是相对独立的，为了不断测试程序的正确性好调试我们先写好输出函数和main函数捏的调用，创建函数我们先约定好名为create。</p>
<p>我们先写出如下的代码：</p>
<p>#include <iostream><br>using namespace std;</iostream></p>
<p>struct test<br>{<br>    char name[10];<br>    float socre;<br>     test *next;<br>};</p>
<p>test *head;//创建一个全局的引导进入链表的指针</p>
<p>test *create()<br>{</p>
<pre><code>return head;//返回链首指针
</code></pre><p>}</p>
<p>void showl(test *head)<br>{<br>    cout&lt;&lt;”链首指针:”&lt;<head<<endl; while(head)="" 以内存指向为null为条件循环显示先前输入的内容="" {="" cout<<head-="">name&lt;&lt;”|”&lt;<head->socre&lt;<endl; head="head-">next;<br>     }<br>}</endl;></head-></head<<endl;></p>
<p>void main()<br>{<br>     showl(create());<br>    cin.get();<br>    cin.get();<br>}<br>　　程序写到这里，基本形态已经出来，输入和调用我们已经有了。<br>　　下面我们来解决输入问题，链表的实现我们是通过循环输入来实现的，既然是循环我们就一定得考虑终止循环的条件，避免死循环和无效循环的发生。</p>
<p>　　在create()函数内部我们先写成这样：<br>test <em>create()<br>{<br>     test </em>ls;//节点指针<br>     test *le;//链尾指针<br>     ls = new test;//把ls指向动态开辟的堆内存地址<br>    cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;<br>     head=NULL;//进入的时候先不设置head指针指向任何地址,因为不知道是否一上来就输入null跳出程序<br>     le=ls;//把链尾指针设置成刚刚动态开辟的堆内存地址,用于等下设置le-&gt;next,也就是下一个节点的位置</p>
<pre><code> le-&gt;next=NULL;//把链尾指针的next设置为空,因为不管如何循环总是要结束的,设置为空才能够在循环显链表的时候不至于死循环
delete ls;//当结束的时候最后一个动态开辟的内存是无效的,所以必须清除掉
return head;//返回链首指针
</code></pre><p>}<br>　　在循环创建之前我们必须考虑一个都不输入的情况。</p>
<p>程序一单进入create函数我们首先必然要创建一个节点，我们先创建一个节点指针，后把者个节点指针指向到动态开辟的test类型的动态内存地址位置上。</p>
<p>所以我们有了<br>test <em>ls;<br>ls = new test;<br>　　程序既然是循环输入，而结构成员test </em>next又是用来存储下一个接点的内存地址的，每次循环我们又要动态创建一个新的内存空间，所以我们必须要有一个指针来存储上一次循环动态开辟的内存地址，于是就有了<br>test *le;<br>　　接下来在进入循环前我们要创建链表的第一个节点，第一个节点必然是在循环外创建，于是就有了<br>cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;<br>　　程序执行者的情况是位置的，所以我们必然要考虑，一上来就不想继续运行程序的情况，所以我们一开始先把head引导指针设置为不指向任何地址也就是<br>head=NULL;<br>　　为了符合le也就是链尾指针的设计思路，我们在循环前一定要保存刚刚动态开辟的内存地址，好在下一次循环的时候设置上一个节点中的next成员指向，于是我们便有了：<br>le=ls;<br>　　为了实现循环输入我们又了下面的代码：<br>while(strcmp(ls-&gt;name,”null”)!=0)<br>{<br>if(head==NULL)<br>{<br>head=ls;<br>}<br>else<br>{<br>le-&gt;next=ls;<br>}<br>le=ls;<br>ls=new test;<br>cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;<br>}<br>　　程序是循环必然要有终止循环的条件，所以我们的循环条件是：<br>while(strcmp(ls-&gt;name,”null”)!=0)<br>　　输入的名字是null的时候就停止循环。</p>
<p>为了保证第一次进入循环，也就是在循环内准备创建第二个节点前，设置引导指针的指向我们有了如下的判断代码：<br>if(head==NULL)<br>{<br>head=ls;<br>}<br>else<br>{<br>le-&gt;next=ls;<br>}</p>
<p>代码中的else条件是为了设置前一个节点next指向而写的,这点我们记住先看下面的代码,稍后大家回过头想就明白了<br>le=ls;<br>ls=new test;<br>cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;<br>　　le=ls;这么写就是为了保存上一次循环指针的位置而设的,正是为了上面的else代码而做的预先保留<br>ls=new test;<br>cin&gt;&gt;ls-&gt;name&gt;&gt;ls-&gt;socre;<br>　　这两行代码的意思就是继续开辟下一个节点空间,和输入节点内容!</p>
<p>循环一旦结束也就结束了程序,为了保持程序不出错,也就是最后一个节点的next成员指向为空我们有了下面的代码<br>le-&gt;next=NULL;<br>　　程序的思路始终是以先开辟后判断为思路的,所以到最后一个不成立的时候总会有一个多开辟的内存空间,为了删除掉它,我们有了下面的代码<br>delete ls;<br>　　程序到最后由于返回head指针<br>return head;<br>　　显示链表的函数没有什么太多特别的也只需要注意下面这样就可以了！<br>head=head-&gt;next;<br>　　我们之所以不用head+=1;来写就是因为链表是我们动态开辟的，而每一个节点的位置并不是相连的，next成员指针的意义也就是下一个节点的内存地址。<br>　　到这里整个创建函数的设计思路也都说完了，笔者不一定说的很好，但基本思路是这样的，希望读者多思考，多对比，相信此教程还是对大家有帮助的，程序设计就是利用逐步思考的方式进行的，写好的代码往往直接看看不懂就是因为中间的细节并不是一次都能够想到的。<br>　　下面我们来说一下链表节点的删除!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;结构体可以看做是一种自定义的数据类型，它还有一个很重要的特性，就是结构体可以相互嵌套使用，但也是有条件的，结构体可以包含结构体指针，但绝对不能在结构体中包含结构体变量。&lt;br&gt;struct test&lt;br&gt;{&lt;br&gt;    char name[10];&lt;br&gt;    float socre;&lt;br&gt;     test *next;&lt;br&gt;};//这样是正确的!
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="链表" scheme="http://i90s.vip/tags/%E9%93%BE%E8%A1%A8/"/>
    
      <category term="结构体" scheme="http://i90s.vip/tags/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    
  </entry>
  
</feed>
