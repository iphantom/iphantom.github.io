<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Enzo Chen</title>
  <subtitle>是我的海</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://i90s.vip/"/>
  <updated>2017-07-09T05:34:08.000Z</updated>
  <id>http://i90s.vip/</id>
  
  <author>
    <name>Enzo Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>APP设计中容易忽略的点</title>
    <link href="http://i90s.vip//%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/2017/07/09/APP%E8%AE%BE%E8%AE%A1%E4%B8%AD%E5%AE%B9%E6%98%93%E5%BF%BD%E7%95%A5%E7%9A%84%E7%82%B9.html"/>
    <id>http://i90s.vip//产品笔记/2017/07/09/APP设计中容易忽略的点.html</id>
    <published>2017-07-09T05:20:53.000Z</published>
    <updated>2017-07-09T05:34:08.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>app设计可以分为两部分，第一APP整体的设计，第二APP各模块设计，针对这两点分别说一下app设计中容易忽略的点</p>
</blockquote>
<h1 id="APP整体设计"><a href="#APP整体设计" class="headerlink" title="APP整体设计"></a>APP整体设计</h1><h2 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h2><p>任何一款软件，用户最常用的配置，往往就是系统的默认配置。使用默认状态用户的学习成本会降低很多。 <a id="more"></a><br><strong>需要默认值的地方</strong>：消息推送、声音、振动、个性化推荐、照相机、话筒等等<br><strong>设置</strong>：根据业务需求以及客户习惯决定默认值</p>
<h2 id="上下限"><a href="#上下限" class="headerlink" title="上下限"></a>上下限</h2><p>任何一个模块的逻辑都需要上下限，从而能够避免产品失控。<br><strong>需要上下限的地方</strong>：模块取值逻辑（牵扯时间等）、文字输入框、文件或者图片上传和下载等<br><strong>设置</strong>：当用户的操作超过上下线时，给予相应的提示</p>
<h2 id="误操作提示"><a href="#误操作提示" class="headerlink" title="误操作提示"></a>误操作提示</h2><p>对于重要模块，需要进行二次确认，以防误操作。<br><strong>需要设置误操作的地方</strong>：删除、清空、黑名单、举报、取消关注等<br><strong>设置</strong>：通过弹框进行二次提示等</p>
<h2 id="网络状况"><a href="#网络状况" class="headerlink" title="网络状况"></a>网络状况</h2><p>网络状况会影响到接口的访问速度，以及用户的体验效果，对于新闻网站、消息推送网站，网络情况是需要认真考虑的，对于工具类app（电子书查看、office）可以依靠缓存，用户可以查看缓存的数据<br><strong>需要设置网络的地方</strong>：<br><strong>设置</strong>：图片提示</p>
<h2 id="权限设计"><a href="#权限设计" class="headerlink" title="权限设计"></a>权限设计</h2><p>对于2B的产品，权限是产品设计中重要的一换，针对不同权限，用户能够查看的模块，执行的操作都不同，即是是能看到相同的模块，看到的数据也可能是不同的，这些都是需要通过权限进行控制。</p>
<h2 id="无响应状态"><a href="#无响应状态" class="headerlink" title="无响应状态"></a>无响应状态</h2><p>部分模块接口访问速度较慢，需要提醒用户耐性等待。<br>常用的解决方法是，设计加载状态or通过弹窗提醒用户耐心等待。</p>
<p>缺图【登录词】<br>缺图【loading状态】</p>
<h2 id="多语言支持"><a href="#多语言支持" class="headerlink" title="多语言支持"></a>多语言支持</h2><p>根据我的经验，如果不是在设计时就要求多语言的，尽量等产品成熟后再去进行多语言支持，否则会占用大量人力，多语言支持不仅是页面更改了语言，还会牵扯到页面展示的修改，另外翻译也是个技术活，不是随便翻译下就行。<br>ps：个人建议，在UI的图上进行修改，这样可以知道你的翻译是否满足页面展示的需求。</p>
<h2 id="后台可控"><a href="#后台可控" class="headerlink" title="后台可控"></a>后台可控</h2><p>在产品设计初期，部分产品习惯把所有规则都写在前端或者后端里面，这样做类似于饮鸠止渴，如果逻辑有变化，就需要上版本去更改，费时费力。<br>一个好的产品能够在产品设计初期，就把规则给想清楚，通过设计权限层或者读取数据库去控制规则。这样前期会耗费产品和开发很大精力，但是对于规则的维护和修改会方便很多。</p>
<h2 id="数据埋点"><a href="#数据埋点" class="headerlink" title="数据埋点"></a>数据埋点</h2><p>产品都知道，一个产品或者功能好还是不好，需要用数据说话，这就牵扯到一个很重要的点，如何对产品进行埋点。<br>简单的说三部分，第一确定产品的功能模块，哪些是比较重要的模块，哪些是需要验证的模块，第二进行合理的埋点，第三也是最重要的部分，进行数据分析。</p>
<h2 id="运营需求"><a href="#运营需求" class="headerlink" title="运营需求"></a>运营需求</h2><p>产品和运营不分家，运营会帮助产品进行更好的宣传，一个好的产品，会在产品内部留下一些运营扩展模块。比如广告位，活动入口等。</p>
<h1 id="APP-单个模块"><a href="#APP-单个模块" class="headerlink" title="APP 单个模块"></a>APP 单个模块</h1><p>以一个模块的页面的生命周期开始分析：<br>1、 初始状态<br>一个模块在用户第一次进来的时候长什么样，就是该模块的初始状态</p>
<p>2、加载状态<br>用户发送请求后，如果接口性能较低，就会需要一个加载状态，该状态可以是弹窗，可以是提示语，可以是loading标志</p>
<p>3、空状态<br>模块可能不存在数据，需要给用户以引导或者提示</p>
<p>4、数据较少<br>即数据较少时，页面展示效果是否友好，是否需要做特别的设计用以辅助展示</p>
<p>5、数据正常<br>需要产品第一个考虑的状态，也是模块应该有的常态</p>
<p>6、 数据过多<br>即，用户操作简单，筛选条件较少，后台返回数据较多时</p>
<p>7、错误状态<br>接口报错，无网络等</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;app设计可以分为两部分，第一APP整体的设计，第二APP各模块设计，针对这两点分别说一下app设计中容易忽略的点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;APP整体设计&quot;&gt;&lt;a href=&quot;#APP整体设计&quot; class=&quot;headerlink&quot; title=&quot;APP整体设计&quot;&gt;&lt;/a&gt;APP整体设计&lt;/h1&gt;&lt;h2 id=&quot;默认值&quot;&gt;&lt;a href=&quot;#默认值&quot; class=&quot;headerlink&quot; title=&quot;默认值&quot;&gt;&lt;/a&gt;默认值&lt;/h2&gt;&lt;p&gt;任何一款软件，用户最常用的配置，往往就是系统的默认配置。使用默认状态用户的学习成本会降低很多。
    
    </summary>
    
      <category term="产品笔记" scheme="http://i90s.vip/categories/%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="APP" scheme="http://i90s.vip/tags/APP/"/>
    
      <category term="设计" scheme="http://i90s.vip/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="异常处理" scheme="http://i90s.vip/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>appium+ios10测试环境搭建</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2017/03/21/appium%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html"/>
    <id>http://i90s.vip//软件笔记/2017/03/21/appium测试环境搭建.html</id>
    <published>2017-03-21T06:29:36.000Z</published>
    <updated>2017-07-09T05:37:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Appium测试环境搭建（ios测试）"><a href="#Appium测试环境搭建（ios测试）" class="headerlink" title="Appium测试环境搭建（ios测试）"></a>Appium测试环境搭建（ios测试）</h1><blockquote>
<p>参考了很多网上的资料，自己也整理了一些，最终写成了这篇文章，感谢那些一直努力研究又乐于分享的测试前辈们。由于本人能力有限，所以肯定会有一些疏漏，还望大家谅解，时间紧任务重，使用的makedown排版。                                 ———— Enzo Chen</p>
</blockquote>
<a id="more"></a>
<h2 id="准备工组"><a href="#准备工组" class="headerlink" title="准备工组"></a>准备工组</h2><p>1）首先要有一台MAC机器，需要能够上网<br>2）MAC系统版本10+ ，Xcode版本8+，一个Apple id帐号（一般帐号or开发者都ok）外加 一款翻墙软件</p>
<h2 id="搭建须知"><a href="#搭建须知" class="headerlink" title="搭建须知"></a>搭建须知</h2><p>1）以下所有操作都是在<strong>‘非root用户’</strong>权限下执行，若在安装过程中出现权限相关问题，根据提示信息，进入root用户，把相应的文件权限修改一下，然后退出root用户，继续执行<br>进入root<br>‘’su root<br>退出root<br> ‘’exit<br>付权限  PathForFile指向相应的文件即可<br> ‘’chmod  -R 775   PathForFile</p>
<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><p>1.安装brew</p>
<blockquote>
<p>brew 又叫 Homebrew，是 Mac OSX 上的软件包管理工具，能在 Mac 中方便的安装软件或者卸载软件， 只需要一个命令， 非常方便。brew 类似 ubuntu 系统下的 apt-get 的功能<br>安装命令<br>‘’ ruby -e “$(curl -fsSL <a href="https://raw.github.com/mxcl/homebrew/go" target="_blank" rel="external">https://raw.github.com/mxcl/homebrew/go</a>)”</p>
</blockquote>
<p>安装完成后，可以通过以下命令查看安装的版本，若能查看到版本信息则安装成功，若查不到，则表示安装失败<br>‘’ brew -v</p>
<p>(img)</p>
<p>2.安装 libimobiledevice</p>
<blockquote>
<p>在 windows or mac 上大家可以使用 iTunes 来与 iPhone 进行通信，但是 Linux 上没有这类的官方软件，所以一些爱好者就破解了 iTunes 的通信协议，然后在 Linux 上实现了该协议，也就是 libimobiledevice </p>
</blockquote>
<p>安装命令<br>‘’brew install libimobiledevice –HEAD </p>
<p>3.安装carthage</p>
<blockquote>
<p>提到 iOS/OS X 项目的依赖管理，最常用的有两个，CocoaPods和carthage，和CocoaPods相比carthage是一个简单、去集中化的 Cocoa 依赖管理器。说了这么多，其实就是萝卜白菜各有所爱，选那个都可以。</p>
</blockquote>
<p>安装命令<br>‘’ brew install carthage</p>
<p>4.安装node</p>
<blockquote>
<p>因为要用npm 所以要安装node，为什么一定要安装node，因为npm是node的套件管理工具</p>
</blockquote>
<p>最简单的安装方法<br>网站 [<a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a>] 直接下载相应版本的pkg进行安装</p>
<p>5.安装cnmp </p>
<blockquote>
<p>nmp不好用，存在不知名的网络问题，思考再三决定安装她妹妹cnmp<br>安装命令<br>‘’ npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a></p>
</blockquote>
<p>6.安装ios-deploy</p>
<blockquote>
<p>ios-deploy 字如其名，是用来部署iOS的<br>‘’ cnpm install -g ios-deploy</p>
</blockquote>
<p>7.安装xcpretty</p>
<blockquote>
<p>xcpretty用于对 xcodebuild 的输出进行格式化。并包含输出 report 功能<br>‘’gem install xcpretty</p>
</blockquote>
<p>8.安装appium</p>
<blockquote>
<p>努力了这么久 终于可以安装appium了 根据当前最新版本号，更改安装命令后面的版本就行，截至本文写的时间目前最新的是1.6.3 （由于网络等原因，这一步耗时较长，且极容易报错，一定要多次尝试，革命刚开始，同志们需多努力）<br>‘’ cnpm install -g appium@1.6.3</p>
</blockquote>
<p>9.安装appium-xcuitest-driver依赖</p>
<blockquote>
<p>若你走到这一步，表示你终于走上了万里长征路的第一步<br>(img)<br>进入WebDriverAgent目录（你的路径可能和我的不一样，自己去找到它就好了）<br>‘’ cd  /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent<br>‘’ mkdir -p Resources/WebDriverAgent.bundle<br>运行bootstrap    注意 此处需要翻墙，开启VPN<br>‘’sh ./Scripts/bootstrap.sh -d</p>
</blockquote>
<p>10.使用xcode编译WebDriverAgent</p>
<blockquote>
<p>这里后面的步骤需要用到苹果帐号，如果有开发者帐号最好，不过我没有，开发者帐号是要钱的，但我穷。没有开发者帐号也没关系，xcode7之后苹果已经开始支持真机调试了，<br>同步骤9，进入WebDriverAgent目录，使用鼠标轻轻的双击WebDriverAgent.xcodeproj 这个项目，不出意外的就会用xcode打开项目<br>1）编译 WebDriverAgentLib<br>步骤如下图，选中1打开编辑框，2中的bundle identifier默认是Facebook，但是需要改成自己的，随便改个就好，当然也最好不要和我的一样，万一咱俩冲突了也不好办，需要把3中的auto打开，xcode会提示你输入苹果帐号，你输入就好了，4中的team选择自己的帐号即可，需要注意的是5这里要保证signing这块没有报错。6这里选择最小的就好ios版本，个人感觉其实选9.0也是可以的，至少我这边是可以的。<br>(img)</p>
</blockquote>
<p>2）编译 WebDriverAgentRunner<br>步骤1如下图，选中1打开编辑框，把2中的auto打开，在3中选择自己的帐号，4没有报错<br>(img)</p>
<p>步骤2如下图，选中1打开编辑框，2切换tab，切换到bulid settings，3选择这里的最小版本，我是后续补的截图，所以不要按照我截图去做，按照我说的去做，还是选择9.0吧，4修改bundle identifier成自己的</p>
<p>(img)</p>
<p>然后就可以编译了，正常情况下编译是没有错误，如果有错误，如果有错误应该是第10步哪出现了错误，根据错误提示信息自行修改就好了，祝好<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">(img)</span><br><span class="line"></span><br><span class="line">11.建立服务 WebDriverAgent </span><br><span class="line">此时需要把你心爱的iphone手机和心爱的mac电脑通过一只数据线连接起来</span><br><span class="line">1）进入WebDriverAgent</span><br><span class="line">&apos;&apos; cd  /usr/local/lib/node_modules/appium/node_modules/appium-xcuitest-driver/WebDriverAgent </span><br><span class="line"></span><br><span class="line">2）执行测试语句</span><br><span class="line">&apos;&apos;xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination &apos;id=真机的udid&apos; test</span><br><span class="line"></span><br><span class="line">执行这个语句不出意外的话，你就会得到一个**失败**的提示，哈哈哈哈，惊不惊喜，意不意外</span><br><span class="line">(img)</span><br><span class="line">错误如下，</span><br><span class="line">(img)</span><br><span class="line"></span><br><span class="line">其实他的意思就是，你手机么有信任这个应用，这个时候进入手机的**设置**——**通用**——**设备管理** 然后信任你的帐号就可以了</span><br><span class="line"></span><br><span class="line">完成上述操作后，你在执行2）语句，就会得到这样的界面，</span><br><span class="line">(img)</span><br><span class="line"></span><br><span class="line">恩，不要怀疑了，这就是正常执行的界面，代表你已经小小的成功了，这时候就可以晒图发朋友圈了。</span><br><span class="line">闹，这就是我的朋友圈截图，哈哈哈哈哈</span><br><span class="line">(img)</span><br><span class="line"></span><br><span class="line">12.运行appium</span><br><span class="line">没什么好说的，一个语句</span><br><span class="line">&apos;&apos; appium -p 4723</span><br><span class="line">启动时间有点长，不过这点时间和安装时间相比是没什么的</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">13.桌面版appium-desktop</span><br><span class="line">在安装appium的时候，偶然发现了appium-desktop这个，目前还是1.0.0版本，不过经过我的试用感觉还是不错的，已经给电脑装上了，也写了一个小栗子，具体使用方式可以自行研究，毕竟我只是个过客</span><br><span class="line">(img)</span><br><span class="line">(img)</span><br><span class="line">(img)</span><br><span class="line"></span><br><span class="line">14.运行appium-desktop可能会出现的一个问题，**编号65**</span><br><span class="line">&apos;&apos; Unable to launch WebDriverAgent because of xcodebuild failure: xcodebuild failed with code 65</span><br><span class="line"></span><br><span class="line">解决方法</span><br><span class="line">重新在你的真机上编译 WebDriverAgent</span><br><span class="line">重新编译还会遇到问题可以尝试下：</span><br><span class="line">	1.	到 webdriverAgent 目录下</span><br><span class="line">	2.	运行 sh ./Scripts/bootstrap.sh</span><br><span class="line">	3.	再使用 xCode build 一次。</span><br><span class="line"></span><br><span class="line">我能给的不多，但能给的我都给了~</span><br><span class="line">(img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">自动化测试不是一时就可以学会，需要花费很长的时间去不断的学习和练习，希望大家多练习，遇到问题多百度，多谷歌，当然还要多github和stackoverflow。</span><br><span class="line">啥，你不知道github和stackoverflow</span><br></pre></td></tr></table></figure></p>
<p>(img)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Appium测试环境搭建（ios测试）&quot;&gt;&lt;a href=&quot;#Appium测试环境搭建（ios测试）&quot; class=&quot;headerlink&quot; title=&quot;Appium测试环境搭建（ios测试）&quot;&gt;&lt;/a&gt;Appium测试环境搭建（ios测试）&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;参考了很多网上的资料，自己也整理了一些，最终写成了这篇文章，感谢那些一直努力研究又乐于分享的测试前辈们。由于本人能力有限，所以肯定会有一些疏漏，还望大家谅解，时间紧任务重，使用的makedown排版。                                 ———— Enzo Chen&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Mac" scheme="http://i90s.vip/tags/Mac/"/>
    
      <category term="Appium" scheme="http://i90s.vip/tags/Appium/"/>
    
      <category term="ios" scheme="http://i90s.vip/tags/ios/"/>
    
      <category term="app" scheme="http://i90s.vip/tags/app/"/>
    
  </entry>
  
  <entry>
    <title>企查查产品研习</title>
    <link href="http://i90s.vip//%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/2017/03/12/%E4%BC%81%E6%9F%A5%E6%9F%A5%E4%BA%A7%E5%93%81%E7%A0%94%E4%B9%A0.html"/>
    <id>http://i90s.vip//产品笔记/2017/03/12/企查查产品研习.html</id>
    <published>2017-03-12T10:23:31.000Z</published>
    <updated>2017-03-12T11:28:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="产品简介"><a href="#产品简介" class="headerlink" title="产品简介"></a>产品简介</h2><hr>
<p>产品名称：<br>slogan：<br>成立时间：<br>支持平台：<br>产品介绍：</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;产品简介&quot;&gt;&lt;a href=&quot;#产品简介&quot; class=&quot;headerlink&quot; title=&quot;产品简介&quot;&gt;&lt;/a&gt;产品简介&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;产品名称：&lt;br&gt;slogan：&lt;br&gt;成立时间：&lt;br&gt;支持平台：&lt;br&gt;产品介绍：&lt;/p&gt;

    
    </summary>
    
      <category term="产品笔记" scheme="http://i90s.vip/categories/%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="产品" scheme="http://i90s.vip/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>微信产品设计原则——Genie访谈记录</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2017/03/08/%E5%BE%AE%E4%BF%A1%E4%BA%A7%E5%93%81%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99.html"/>
    <id>http://i90s.vip//软件笔记/2017/03/08/微信产品设计原则.html</id>
    <published>2017-03-08T04:02:06.000Z</published>
    <updated>2017-03-08T15:54:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xujfx.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95.jpeg" alt=""></p>
<p>Genie是腾讯唯一一个p4（专家级）女产品经理，也是我知道的唯一一个p4产品经理，是从无到有搭建出微信的产品负责人，如果张小龙是上帝，那genie就是为上帝造人的那个人，坊间称之为“天朝第一产品经理”，这是第一次genie和大家系统的讲述微信的产品原则吧，这要感谢“产品＋”这个课程，不仅都是干货，而且都是高品质的精华。</p>
<p>最难的是大概道理我们都懂，但没抽离出来形成自己的产品原则，更难的是，你都知道，但是没消化成自己的东西，在做产品策划的时候还在不断犯这些错误。</p>
<p>废话不说，直接来吧。<a id="more"></a></p>
<p>对于熟人社交而言，三个价值导向：</p>
<p>根据这三条，在创建产品时很多产品逻辑和后台算法就能清晰的做出权重分配排序了。</p>
<h1 id="微信十条产品原则"><a href="#微信十条产品原则" class="headerlink" title="微信十条产品原则"></a>微信十条产品原则</h1><h2 id="隐私vs便利"><a href="#隐私vs便利" class="headerlink" title="隐私vs便利"></a>隐私vs便利</h2><blockquote>
<p>隐私重要性大于便利</p>
</blockquote>
<p>案例：常有用户抱怨为什么换一台手机所有聊天记录都没了，为什么登陆网页版每次聊天记录都是从零开始，为什么聊天记录不能每次同步存储，因为一旦换设备/微信网页版每次登陆都显示之前的聊天记录，很可能别人在其他设备登陆你微信，所有记录都看到了，这种隐私泄漏给你带来的风险比聊天记录清零带来的伤害大得多，基于隐私性大于便利性原则，即使聊天记录清零可能带来不便利，依旧优先隐私性。所以微信在手机本地聊天记录不保存，宁可不够便利，也不牺牲隐私体验；</p>
<h2 id="发送方vs接收方"><a href="#发送方vs接收方" class="headerlink" title="发送方vs接收方"></a>发送方vs接收方</h2><blockquote>
<p>你觉得发送方和接收方哪个更重要？保护两端感受，但当两方有冲突时，更保护的是接收方，微信的产品理念认为接收方体验大于发送方。</p>
</blockquote>
<p>案例：</p>
<p>a.因为这个产品原则，所以微信到现在没做已读体验。而阿里做社交的产品理念认为发送方比接收方重要，所以之前阿里的叮叮（不确定来往是不是）每发一条信息都会告知你已读未读状态，这让发送方很爽，我希望知道你是否看到了我的信息，但让接收方很有压力，因为我看到了不代表我现在想回你，但你知道我看到了，我不回你就显得没礼貌了，所以，用的时候压力很大，老板喜欢这样的功能，员工用的很受罪。所有产品体验都是基于产品原则作出的决策，对于从无到有创造一个产品，需要先建立起自己的产品原则。</p>
<p>b.接收方体验优于发送方第二个细节：白底黑字比绿底黑字更清楚，所以微信里白底黑字展示给了好友发的信息，而自己发的话自己本来就清楚，所以自己发的文字底色是绿底黑字。</p>
<p>c.接收方体验优于发送方第三个细节：很多人提为什么短视频不支持自拍功能，因为自拍需求大多是女生的需求，这让自拍的人挺爽，但试想一下当朋友圈被各种妹子自拍占领，就一个头，还会动，对于接收方而言，其实看的没那么爽，而且还挺恐怖，所以考虑到接收方体验没有做小视频自拍</p>
<h2 id="缺乏价值支撑的流量，事倍功半"><a href="#缺乏价值支撑的流量，事倍功半" class="headerlink" title="缺乏价值支撑的流量，事倍功半"></a>缺乏价值支撑的流量，事倍功半</h2><p>这句话需要很深入的去理解，因为我们经常犯这样的错误，现在大多数app的思路还是引流，拉下载，框用户，流量是一千万有1%的用户转化，就有10万真实用户，所以不断找流量，而大多流量被浪费了，如果将思路放在提高被浪费的99%的转化，走精准路线，或许100万流量就能达到10万用户了；除此外，会员增值／游戏付费／谈n个风投也是一样的道理，基于拉过来的人多了，里面总有愿意掏钱的，走的都是海量流量低转化率的思路，这种就是缺乏价值支撑的流量，太浪费了，而小而精的模式就是公测1000人，500人活跃，200人愿意付费，这种就是现在越来越多人走的垂直化精细化的运营方式，不需要买那么多没用的流量，保证高转化就行。</p>
<h2 id="对用户而言固定路径是最近路径"><a href="#对用户而言固定路径是最近路径" class="headerlink" title="对用户而言固定路径是最近路径"></a>对用户而言固定路径是最近路径</h2><p>案例：很多人在问为什么不能让最近发送的表情在最近的位置；原因是每次发表情都会改变表情顺序，每次打开表情顺序都被改动，反而会延迟找到想要表情的时间，觉得表情不好用。最快的路径永远是固定的路径。</p>
<h2 id="不一定按数据说话，按用户需求和价值说话"><a href="#不一定按数据说话，按用户需求和价值说话" class="headerlink" title="不一定按数据说话，按用户需求和价值说话"></a>不一定按数据说话，按用户需求和价值说话</h2><blockquote>
<p>这条我是真的很佩服微信，是微信很牛的地方，也是绝大部分产品很难做到的地方 我们习惯了一切按数据说话，数据不好的产品就下线，数据不好的功能就下架，不赚钱的东西就撤掉，也是因为这么浮躁的心态，让极致的好产品出不来。</p>
</blockquote>
<p>案例：小视频发送入口有两个：一个是顶上下拉发小视频，另一个是朋友圈右上角发小视频，请问你认为哪个入口使用人数更多呢？停顿两秒让自己思考下吧。</p>
<p>答：朋友圈右上角?占95%，上方下拉只占了5%，朋友圈右上角加号入口虽然更深，但用户已形成通过右上角加号发新内容的操作体验，而下拉体验用户没有形成习惯</p>
<p>那么，为什么只有5%的用户通过下拉来拍摄小视频，还没把这个入口干掉，如果按数据说话应该干掉这个入口，那为什么没干掉？ 答：因为我们不是完全按数据说话的产品，更重视用户体验：主界面快捷方式对于要拍摄稍纵即逝的瞬间，需要最短路径马上拍摄，如果撤掉，当遇到非常好瞬间要拍摄的时候，拍摄路径太长会导致错过很多好的瞬间，并且这些稍纵即逝的瞬间的内容价值可能远高于慢慢从固定路径录制的内容价值。</p>
<h2 id="清醒地知道产品每个功能的价值"><a href="#清醒地知道产品每个功能的价值" class="headerlink" title="清醒地知道产品每个功能的价值"></a>清醒地知道产品每个功能的价值</h2><blockquote>
<p>数据只是反应现状的参考指标，而不是结果本身效率价值对大化value/time（单位时间内的信息量）：文字图片 url视频哪个性价比最高，哪个信息量最大：url信息量最大，图片性价比最高，视频的信息量很大但性价比最低。</p>
</blockquote>
<p>微信里体现价值信息最大化原则案例：1.朋友圈点赞没有头像，2.小视频自动播放，3.url的弱化，4.文字太长时折叠，5.单图vs多图：单图缩略图很大，最高效率，不用点开大图也可以看清楚，而多图的时候会变成小的缩略图，这时候接收方的诉求是要第一时间知道这九张图核心要说的信息是什么，点开大图再看具体内容。</p>
<h2 id="不同很易，更好很难"><a href="#不同很易，更好很难" class="headerlink" title="不同很易，更好很难"></a>不同很易，更好很难</h2><p>案例1：当时apple watch邀请微信做一个适合watch的产品，第一个版本微信做了雷达加好友，放在watch上看很创新又帅气，但apple没有采用雷达加好友这个方案，why?</p>
<p>答：1.附近没几个人带手表，2.在手机上都没几个人用雷达加好友，何况手表上呢，这个属于然并卵的功能。比如新浪微博做的watch版app的功能是跑步记步功能，但微博属于信息类的，做个计步器和微博有啥关系，无法体现产品核心价值；所以最后还是选择把收发消息，看朋友圈，赞等基础核心功能发上去，做实用性的东西比做帅气不同的东西更有价值，不为创新而创新，不为不同而不同。</p>
<p>案例2:为什么要做小视频：1.视频信息含量是最高的，是文字和图片无法比拟的；2.有些场景是很难用文字描述的，视频可以解决；而做小视频是因为大视频信息量很大，收看时间长，信息价值不高，所以用6秒小视频来做到既有信息量，又保证信息价值。反例是qq空间，空间一直有长视频，看到微信出了短视频，也把自己的长视频改成短视频，结果被用户投诉的要死，这就是产品经理没有想清楚自己的产品定位，一味模仿追随，空间最擅长的是沉淀，长视频是最好的沉淀形式之一，更别说空间还有pc阅读特性等差别。不同很易，更好很难。</p>
<p>微信最大的价值是有关系链有朋友，不用通过和同类产品比内容价值来凸显自己：我不是为了拍一个有趣的视频给你，而是告诉你我在哪在干嘛。如果微信要做小视频，要做的是信息，而不是内容，不是视频美化。很清晰的看到自己的位置，不盲目的和同类产品攀比，从来不是与外部赛跑，而是与自己pk的过程。</p>
<h2 id="简洁的原则"><a href="#简洁的原则" class="headerlink" title="简洁的原则"></a>简洁的原则</h2><blockquote>
<p>简洁不是简单，简洁不是简单的把功能裁掉。</p>
</blockquote>
<p>案例：为什么iPhone刚开始的icon是拟物设计，这种设计实际是很复杂的，在一个图标上每个角度纹理都要处理，但对于用户而言拟物很真实，学习成本更低，在智能手机刚面世的时候可以降低学习成本。</p>
<p>为什么现在的iPhone要做扁平化，不再坚持拟物：因为智能机的普及，每个icon是做什么的，用户已经都理解了，不需要再用拟物的方式去普及，而扁平的icon并没有比拟物的简单，反而在设计上可能是更复杂了，需要用更简洁的方式让用理解icon。</p>
<h2 id="逻辑原则vs线性原则"><a href="#逻辑原则vs线性原则" class="headerlink" title="逻辑原则vs线性原则"></a>逻辑原则vs线性原则</h2><blockquote>
<p>避免用tabs，保持一个入口。如果你有两个tab的话，就会有一个主tab，按已有的数据显示2个tab会二八分配，80%的流量在主tab，只剩下20%的流量到第二个tab。如果你已经能决定哪个tab是核心，那为什么还需要第二个tab，如果你没办法决定哪个最重要，那分tab也没办法为你决定，还是会二八分流，专注主要功能，把所有流量聚焦在一个tab，不作无谓分流。不用多tab展示，一个地方不要两个按钮。（这点很多app都在犯这个错误）。</p>
</blockquote>
<p>在逻辑原理和线性原则相冲突的时候，优先线性原则：</p>
<p>案例：微信的搜索原本是放在顶上加号旁边放一个放大镜的icon，但最后还是把搜索框直接加在聊天记录顶部的搜索框，而不是右上角放一个?一个搜索两个icon（抗拒两个icon，坚持线性原则）</p>
<h2 id="真实vs噱头"><a href="#真实vs噱头" class="headerlink" title="真实vs噱头"></a>真实vs噱头</h2><blockquote>
<p>真实性大于噱头，真实的内容才有生命力，噱头往往是对信息的破坏。</p>
</blockquote>
<p>案例：美拍等视频拍摄工具都有配音，加特效等功能，美化后让整个视频变的很好看，但微信不会做这些，因为美化后的视频，去掉了声音等，无法还原给朋友传递信息的真实现场。真实性还体现在微信的所有数据，各种对外的方式都秉持真实性。 精品打磨</p>
<p>注重细节：收到多条语音，会自动播放语音；语音可以上滑取消等</p>
<p>极致的细节分享：</p>
<p>细节1:小视频播放完后从最后一秒到第一秒循环时直接切换会导致视觉上闪过一下，脑子里会闪过一条白线，为了让这个闪不那么不舒服，在小视频最后一秒做了颜色渐弱，通过一秒弱化让用户视觉舒服地过渡。绝大部分用户是不会感知到微信做了这个体验优化的，好的产品让人用的爽，而不需要让人知道他们为什么爽。</p>
<p>细节2:视频和照片的夜视效果在爱疯上不是特别好，所以微信的小视频和照片在监测到光线比较暗时，会提示加亮效果（为了这个小细节微信团队找过世面上所有产品比对各种相机产品，将加亮模式做到极致）</p>
<h1 id="常见的坑和注意事项"><a href="#常见的坑和注意事项" class="headerlink" title="常见的坑和注意事项"></a>常见的坑和注意事项</h1><h2 id="从目标倒推方案"><a href="#从目标倒推方案" class="headerlink" title="从目标倒推方案"></a>从目标倒推方案</h2><blockquote>
<p>比如我们要50万用户，那倒推要三件事每件事引流10万 20万 20万，按此方式可能会达到kpi目标，但很可能会背离你设计这个产品的初衷，用手段而不是产品功能达到目标，但这不是真的解决问题的方法</p>
</blockquote>
<p>案例：提升海外活跃度：发现当用户好友数超过15个时，活跃度会增加很多；所以当时的做法是引导加好友，然后又引导加陌生人，好友数还不够，就改版附近的人，这种就是按目标倒推数据方案的反例。数据可以帮助你了解原因，但不会告诉你原因。一个成功的决策，不知道原因，比一个失败的决策更危险。（这点非常重要，很多团队觉得达到kpi了就万事大吉，而不去分析是用的牺牲未来的短期营销达到的，还是真的是产品优质达到的；这个错误是每天每个产品，团队都在犯的，能意识到这点的存在本身已经很不容易。）</p>
<h2 id="关于AB-test（分组测试）"><a href="#关于AB-test（分组测试）" class="headerlink" title="关于AB test（分组测试）"></a>关于AB test（分组测试）</h2><blockquote>
<p>AB test可以用来对比效果，而不是选择方案，用的越多，表明产品经理判断力越弱</p>
</blockquote>
<p>使用AB test时要有很明确的选择，并且知道影响因素是不可控的。</p>
<h2 id="普通用户没法告诉你他们自己还不知道的需求，需求是产品经理去观察发现的。"><a href="#普通用户没法告诉你他们自己还不知道的需求，需求是产品经理去观察发现的。" class="headerlink" title="普通用户没法告诉你他们自己还不知道的需求，需求是产品经理去观察发现的。"></a>普通用户没法告诉你他们自己还不知道的需求，需求是产品经理去观察发现的。</h2><p>不要去问用户你觉得我怎么做会比较好，因为他不知道，或者只是他以为他知道。很多人用mac觉得很好用，但在mac出来前你会知道你需要的好用的电脑是酱紫的么？比如很多用户使用任务软件时，主动设置很多任务，并且都加上了提醒，当用户主动加提醒时觉得自己想要被提醒，但当每天都被提醒n次时就开始烦了，关掉提醒甚至直接删除这个app。</p>
<h2 id="能用标准方法／标准控件解决问题就不要用特殊处理"><a href="#能用标准方法／标准控件解决问题就不要用特殊处理" class="headerlink" title="能用标准方法／标准控件解决问题就不要用特殊处理"></a>能用标准方法／标准控件解决问题就不要用特殊处理</h2><p>以上是一整个下午听genie分享产品原则记录下来的笔记和心得，也是在听过的众多产品课程里最有收获和启发的一场，有的产品是被抬到神坛的，而有的产品是靠实力走上去的，我从不搞什么个人崇拜，但觉得genie以及微信在产品设计上做出的每个决策都有自己的产品原则作为方向标，是非常值得欣赏的，不是微信从没决策失误过，而是每个精良的产品都是在不断试错中越来越完美的，对于创建一个新产品亦是如此，不怕一遍遍试错，就怕不思考不知道错。很感谢genie和如此好的产品精品课程，受益良多。</p>
<p>上述产品原则和体验就我自己而言感悟很深，很多原则需要再多次反复消化，对未来做产品很有启发，被提炼出的真理难的是在从无到有的提炼过程，而享受前人成果时，我们太容易因为理所当然，而忽略了每个真理对于现实运用的意义。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xujfx.com1.z0.glb.clouddn.com/%E5%BE%AE%E4%BF%A1%E7%99%BB%E5%BD%95.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Genie是腾讯唯一一个p4（专家级）女产品经理，也是我知道的唯一一个p4产品经理，是从无到有搭建出微信的产品负责人，如果张小龙是上帝，那genie就是为上帝造人的那个人，坊间称之为“天朝第一产品经理”，这是第一次genie和大家系统的讲述微信的产品原则吧，这要感谢“产品＋”这个课程，不仅都是干货，而且都是高品质的精华。&lt;/p&gt;
&lt;p&gt;最难的是大概道理我们都懂，但没抽离出来形成自己的产品原则，更难的是，你都知道，但是没消化成自己的东西，在做产品策划的时候还在不断犯这些错误。&lt;/p&gt;
&lt;p&gt;废话不说，直接来吧。
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="产品" scheme="http://i90s.vip/tags/%E4%BA%A7%E5%93%81/"/>
    
  </entry>
  
  <entry>
    <title>如花谢花开——《思悼》观后感</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2017/02/23/%E5%A6%82%E8%8A%B1%E8%B0%A2%E8%8A%B1%E5%BC%80.html"/>
    <id>http://i90s.vip//心情笔记/2017/02/23/如花谢花开.html</id>
    <published>2017-02-23T02:04:14.000Z</published>
    <updated>2017-03-12T08:03:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xujfx.com1.z0.glb.clouddn.com/%E6%80%9D%E6%82%BC.jpg" alt=""><br>一部两小时电影断断续续看了四天才看完<br>《思悼》虽然描写的皇宫内权利的斗争 用宫斗剧是解释它并不准确  我感觉更像是一部家庭伦理片<br>一个只想当王的父亲<br>一个只想当儿子的储君<a id="more"></a><br>父子情在影片中表现的淋漓尽致<br>英祖希望世子能早日即位 又不甘心交出权力<br>世子相比王位 更愿得到世祖的爱<br>帝王之家 非比寻常人家 有太多的不可以<br>有时候越是简单的 越无法得到<br>英祖自己的登基有着太多不可细说的过去<br>他一直严格要求世子 让他读书 教他如何权衡庙堂之上的各方势力 但他又无意完全放下权利 父亲的制衡 让世子事事无法得愿<br>被嫌弃的松子的一生啊<br>父子俩虽然彼此并不认同 但仍维持着这微妙的平衡 世孙的出现  让英祖看到了另外一种可能 找到了更适合王位的人 这种微妙的平衡随即被打破<br>第七日父子阴阳相隔的对话 将父子俩内心的纠结表现的淋漓尽致 也将全剧感情推向了高潮<br>第八日 英祖用手去摸米缸里的世子 摸到鼻子时发现世子已经没了呼吸 又赶快用手去摸颈部 英祖当时肯定很纠结吧 即不想让儿子死 又不想让他活着  当他确认儿子已经死掉的时候 瞬间崩溃 嚎啕大哭  哭完 让乐队又奏着凯旋曲回宫<br>高墙华锦为君臣 来生麻衣愿父子<br>世孙从小就知道忍耐 也知道要讨好英祖<br>世子在射箭时和世孙的对话 也暗示了全剧的结局<br>世孙说 我也不喜欢这样的我<br>特别是在他登基后给母亲过花甲时 说 我从小就没玩过 今天就让我尽兴的玩一次吧<br>世孙的扇子舞配上片尾曲 如花谢花开<br>将沉默克制的全片基调打破  让众人能够毫无顾忌的流泪发泄内心的感情</p>
<h2 id="附上片尾曲-《如花谢花开》-歌词"><a href="#附上片尾曲-《如花谢花开》-歌词" class="headerlink" title=" 附上片尾曲 《如花谢花开》 歌词 "></a><strong> 附上片尾曲 《如花谢花开》 歌词 </strong></h2><p>如今吾欲去<br>独留伤悲于世<br>纵有千语 未能与君诉<br>托付浮云 就此别去<br>难了却 君之所愿<br>泪如雨 潜然落<br>空留歉疚 孑然离<br>如花开花谢<br>虚空飘荡浮游<br>委身清风别过<br>曾空虚凌晨时分 与星做伴<br>如今吾亦别过<br>纵彼此念念不忘<br>纵然相对 仍难触碰<br>缘何未能相见<br>兴许君心深处一隅<br>吾之体温仍残留<br>清风吹 消散前<br>就此一次 轻抚吾之脸庞<br>此文章为 不知名的工程师 原创，特此声明！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xujfx.com1.z0.glb.clouddn.com/%E6%80%9D%E6%82%BC.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;一部两小时电影断断续续看了四天才看完&lt;br&gt;《思悼》虽然描写的皇宫内权利的斗争 用宫斗剧是解释它并不准确  我感觉更像是一部家庭伦理片&lt;br&gt;一个只想当王的父亲&lt;br&gt;一个只想当儿子的储君
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="感悟" scheme="http://i90s.vip/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="影评" scheme="http://i90s.vip/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>风控与征信</title>
    <link href="http://i90s.vip//%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/2017/02/12/%E9%A3%8E%E6%8E%A7%E4%B8%8E%E5%BE%81%E4%BF%A1.html"/>
    <id>http://i90s.vip//产品笔记/2017/02/12/风控与征信.html</id>
    <published>2017-02-12T06:51:47.000Z</published>
    <updated>2017-02-12T06:52:51.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="产品笔记" scheme="http://i90s.vip/categories/%E4%BA%A7%E5%93%81%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="风控" scheme="http://i90s.vip/tags/%E9%A3%8E%E6%8E%A7/"/>
    
      <category term="企业征信" scheme="http://i90s.vip/tags/%E4%BC%81%E4%B8%9A%E5%BE%81%E4%BF%A1/"/>
    
      <category term="企业信息" scheme="http://i90s.vip/tags/%E4%BC%81%E4%B8%9A%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter使用随笔-4</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2017/01/04/Jmeter%E4%BD%BF%E7%94%A8%E9%9A%8F%E7%AC%94-4.html"/>
    <id>http://i90s.vip//软件笔记/2017/01/04/Jmeter使用随笔-4.html</id>
    <published>2017-01-04T02:21:46.000Z</published>
    <updated>2017-01-04T03:30:51.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jmeter启动报错"><a href="#Jmeter启动报错" class="headerlink" title="Jmeter启动报错"></a>Jmeter启动报错</h2><p>　　前段时间电脑重装系统，习惯性的解压了Jmeter压缩包开始修改脚本，但是竟然神奇的报错了····<br>　　报错内容是”Not able to find Java executable or version. Please check your Java installation”，感觉应该是环境变量没有配置，上网查了下配置方法 <a id="more"></a></p>
<p>网上查的解决方法大部分是在环境变量PATH中添加： %SystemRoot%/system32;%SystemRoot%<br>但是添加了之后发现还是无法正常启动，又查找了一些网页，找到了另外一个方法<br>解决方法：在环境变量PATH里加%JAVA_HOME%\bin；<br>添加之后，就可以正常启动了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Jmeter启动报错&quot;&gt;&lt;a href=&quot;#Jmeter启动报错&quot; class=&quot;headerlink&quot; title=&quot;Jmeter启动报错&quot;&gt;&lt;/a&gt;Jmeter启动报错&lt;/h2&gt;&lt;p&gt;　　前段时间电脑重装系统，习惯性的解压了Jmeter压缩包开始修改脚本，但是竟然神奇的报错了····&lt;br&gt;　　报错内容是”Not able to find Java executable or version. Please check your Java installation”，感觉应该是环境变量没有配置，上网查了下配置方法
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
      <category term="性能测试" scheme="http://i90s.vip/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter链接Oracle数据库</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2017/01/03/Jmeter%E9%93%BE%E6%8E%A5Oracle%E6%95%B0%E6%8D%AE%E5%BA%93.html"/>
    <id>http://i90s.vip//软件笔记/2017/01/03/Jmeter链接Oracle数据库.html</id>
    <published>2017-01-03T09:14:20.000Z</published>
    <updated>2017-01-06T02:44:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JmeterのJDBC-Request"><a href="#JmeterのJDBC-Request" class="headerlink" title="JmeterのJDBC Request"></a>JmeterのJDBC Request</h2><blockquote>
<p>JDBC Request：这个sqmpler可以向数据库发送一个jdbc请求（SQL语句），并获取返回的数据库数据的操作，它经常需要和JDBC Connertion Configuration配置原件一起使用，主要是配置数据库的相关属性，比如ip，帐号，密码，链接数等。</p>
</blockquote>
<ol>
<li>添加数据库jar包</li>
</ol>
<p>不同的数据库，需要添加的jar包不同，需要根据需求下载自己需要的jar包。<br>下载完成后，可以通过以下两种方式安装jar包<a id="more"></a><br>1）直接将jar包复制到jmeter的lib目录下（推荐）<br>2）通过Tset Plan添加<br>在’add directory or jar to classpath’里面把jar包的路径添加进去</p>
<ol>
<li>配置JDBC Connection Configuration</li>
</ol>
<p>参数含义;<br>. Variable Name:数据库连接池的名称，可以添加多个JDBC Connection Configuration，每个可以七个不同的名称，再jdbc request中可以通过这个名字选择不同的连接池<br>. Database URL：数据库url，具体配置如下<br>. JDBC Driver class:JDBC驱动<br>. username：数据库登录用户名<br>. password：数据库登录密码</p>
<p>不同数据库填写表格：</p>
<table>
<thead>
<tr>
<th>Database</th>
<th>Driver calss</th>
<th>Database URL</th>
</tr>
</thead>
<tbody>
<tr>
<td>MySQL</td>
<td>com.mysql.jdbc.Driver</td>
<td>jdbc:mysql://host:port/{dbname}</td>
</tr>
<tr>
<td>PostgreSql</td>
<td>org.postgresql.Driver</td>
<td>jdbc:postgresql:{dbname}</td>
</tr>
<tr>
<td>Oracle</td>
<td>oracle.jdbc.driver.OracleDriver</td>
<td>jdbc:oracle:thin:user/pass@//host:port/service</td>
</tr>
<tr>
<td>ingres(2006)</td>
<td>ingres.jdbc.IngresDriver</td>
<td>jdbc:ingres://host:port/db[;attr=value]</td>
</tr>
<tr>
<td>MSSQL</td>
<td>com.microsoft.sqlserver.jdbc.SQLServerDriver</td>
<td>jdbc:sqlserver://ip:1433;databaseName=DBname</td>
</tr>
</tbody>
</table>
<ol>
<li>配置JDBC Request</li>
</ol>
<p>参数含义：<br>. variable Name：数据连接池名字，需要和JDBC Connection Configuration的Variable Name保持一致<br>. Query：填写的SQL语句，末尾不需要加‘;‘<br>. Parameter values：参数值<br>. Parameter types:参数类型，可参考 ：javadoc for java.sql。types<br>. variable names：保存sql语句返回结果的变量名<br>. Result variable name: 创建一个对象变量，保存所有返回的结果<br>. Query timeout：查询超时时间<br>. Handle result set：定义如何处理由callable statements语句返回的结果</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JmeterのJDBC-Request&quot;&gt;&lt;a href=&quot;#JmeterのJDBC-Request&quot; class=&quot;headerlink&quot; title=&quot;JmeterのJDBC Request&quot;&gt;&lt;/a&gt;JmeterのJDBC Request&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;JDBC Request：这个sqmpler可以向数据库发送一个jdbc请求（SQL语句），并获取返回的数据库数据的操作，它经常需要和JDBC Connertion Configuration配置原件一起使用，主要是配置数据库的相关属性，比如ip，帐号，密码，链接数等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;添加数据库jar包&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;不同的数据库，需要添加的jar包不同，需要根据需求下载自己需要的jar包。&lt;br&gt;下载完成后，可以通过以下两种方式安装jar包
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
      <category term="Oracle" scheme="http://i90s.vip/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>RF使用笔记-2</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/12/27/RF%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0-2.html"/>
    <id>http://i90s.vip//软件笔记/2016/12/27/RF使用笔记-2.html</id>
    <published>2016-12-27T06:18:55.000Z</published>
    <updated>2016-12-27T07:57:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一个RF脚本"><a href="#第一个RF脚本" class="headerlink" title="第一个RF脚本"></a>第一个RF脚本</h2><ol>
<li><p>启动RF</p>
<p>安装好RF后，桌面会生成一个图标，双击图标启动，界面如下 <a id="more"></a><br><img src="启动页面" alt=""></p>
</li>
<li><p>创建项目</p>
<p>选择菜单栏file-&gt;new project(快捷键ctrl+N)<br>Name：项目名称（例如：test测试项目，可以是中文）<br>Parent Directory：项目路径（尽量是英文路径，以防出现各种乱七八糟的错误）<br>Type：<strong>需要选择Directory</strong><br><img src="创建项目" alt=""></p>
</li>
<li><p>创建测试套件</p>
<p>右键点击’测试项目’选择new Suite<br>Name：输入测试模块名称（例如：百度首页模块）<br>Type：选择File<br><img src="测试套件" alt=""></p>
</li>
<li><p>创建测试用例</p>
<p>右键点击’百度首页模块’选择new Test Case<br>name：测试用例的名字（名字主要是测试的功能点）<br><img src="测试案例" alt=""></p>
</li>
<li><p>导入seleniumslibrary库</p>
<p>左键点击测试套件’百度首页模块’，在其’edit’的tab页上，点击右边的’library’，再弹出框「name」内输入’Selenium2Library’，注意大小写，点击’ok’</p>
<blockquote>
<p>使用RF编写web的测试用例，需要selenium库的支持，所以需要加载Selenium2Library库<br>点击OK后，若Selenium2Library显示为黑色表示导入成功，若是红色表示没有查找到这个库<br>![]（倒库）</p>
</blockquote>
</li>
<li><p>查询脚本关键字<br>在写测试用例的时候，需要用到很多关键字，可以使用F5查询关键字，点击F5，弹出如下页面，<br>可在search term框里输入关键字</p>
<p><img src="关键字" alt=""></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一个RF脚本&quot;&gt;&lt;a href=&quot;#第一个RF脚本&quot; class=&quot;headerlink&quot; title=&quot;第一个RF脚本&quot;&gt;&lt;/a&gt;第一个RF脚本&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动RF&lt;/p&gt;
&lt;p&gt;安装好RF后，桌面会生成一个图标，双击图标启动，界面如下
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Robot Framework" scheme="http://i90s.vip/tags/Robot-Framework/"/>
    
      <category term="自动化测试" scheme="http://i90s.vip/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>RF使用笔记-1</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/12/19/RF%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0-1.html"/>
    <id>http://i90s.vip//软件笔记/2016/12/19/RF使用笔记-1.html</id>
    <published>2016-12-19T06:33:40.000Z</published>
    <updated>2017-03-09T05:48:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装chromeDriver"><a href="#安装chromeDriver" class="headerlink" title="安装chromeDriver"></a>安装chromeDriver</h2><p>　　RF默认的是FireFox和IE浏览器，鉴于目前chrome市场占有率及良好的开发环境，RF测试建议使用chrome进行测试</p>
<p>1、ChromeDriver下载地址<br><a id="more"></a><br><a href="https://chromedriver.storage.googleapis.com/index.html?path=2.26/" target="_blank" rel="external">ChromeDriver下载地址</a></p>
<blockquote>
<p>chrome驱动并不是指在电脑上安装chrome浏览器就可以，而是chrome驱动</p>
</blockquote>
<p>2、ChromeDriver.exe 放置地址</p>
<p>ChromeDriver的安装地址需要<strong>添加到系统的环境变量里</strong>，只有这样在运行RF时候才能找到ChromeDriver</p>
<blockquote>
<p>我是直接把ChromeDriver.exe放到了 C:\python27\Scripts 路径下。</p>
</blockquote>
<p>3、Chrome 闪退</p>
<p>完成以上动作之后，在运行RF时发现chrome闪退，网上搜索了下，发现并没有比较好的解决方法，看到一篇文章里面说是chrome版本的问题，看了下自己当前的版本是49，然后升级成了53，再运行RF后发现chrome不再闪退，如果大家也有闪退情况，可以升级或者降级下chrome版本试试</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装chromeDriver&quot;&gt;&lt;a href=&quot;#安装chromeDriver&quot; class=&quot;headerlink&quot; title=&quot;安装chromeDriver&quot;&gt;&lt;/a&gt;安装chromeDriver&lt;/h2&gt;&lt;p&gt;　　RF默认的是FireFox和IE浏览器，鉴于目前chrome市场占有率及良好的开发环境，RF测试建议使用chrome进行测试&lt;/p&gt;
&lt;p&gt;1、ChromeDriver下载地址&lt;br&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Robot Framework" scheme="http://i90s.vip/tags/Robot-Framework/"/>
    
      <category term="自动化测试" scheme="http://i90s.vip/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
      <category term="chromeDriver" scheme="http://i90s.vip/tags/chromeDriver/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter使用随笔（3）</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/12/05/Jmeter%E4%BD%BF%E7%94%A8%E9%9A%8F%E7%AC%94-3.html"/>
    <id>http://i90s.vip//软件笔记/2016/12/05/Jmeter使用随笔-3.html</id>
    <published>2016-12-05T08:28:29.000Z</published>
    <updated>2016-12-16T09:48:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>使用Jmeter的过程中发现，当Jmeter运行一个小时左右，就会报Out of memory error的错误。<br>网上查了下解决该问题的方法，需要两步<a id="more"></a><br>1）修改配置</p>
<p>使用 jmeter 进行压力测试时遇到一段时间后报内存溢出 outfmenmory 错误，导致 jmeter 卡死了，先尝试在 jmeter.bat 中增加了 JVM_ARGS=”-Xmx2048m -Xms2048m -Xmn256m -XX:PermSize=128m -Xss256k”，但结果运行时间增加了，但最终还是报内存溢出，百度后按照网友的建议更改了如下设置后 jmeter 就没有再卡了：<br>windows 环境下，修改 jmeter.bat：</p>
<p>set HEAP=-Xms256m -Xmx256m<br>set NEW=-XX:NewSize=128m -XX:MaxNewSize=128m<br>改为：<br>set HEAP=-Xms256m -Xmx1024m<br>set NEW=-XX:NewSize=128m -XX:MaxNewSize=512m</p>
<p>linux 环境下，修改 jmeter.sh：<br>java $JVM_ARGS -Xms1G -Xmx5G -XX:MaxPermSize=512m -Dapple.laf.useScreenMenuBar=true -jar <code>dirname $0</code>/ApacheJMeter.jar “$@”</p>
<p>2）修改脚本监控<br>在Jmeter脚本中，由于’查看结果树’等监控一直在消耗内容，在前期判断脚本正常后，后期跑长时间高并发时，需要去掉’查看结果树’监控</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Jmeter的过程中发现，当Jmeter运行一个小时左右，就会报Out of memory error的错误。&lt;br&gt;网上查了下解决该问题的方法，需要两步
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Mac" scheme="http://i90s.vip/tags/Mac/"/>
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
      <category term="性能测试" scheme="http://i90s.vip/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
      <category term="Out of memory error" scheme="http://i90s.vip/tags/Out-of-memory-error/"/>
    
  </entry>
  
  <entry>
    <title>为什么有些人开车到家后会独自坐在车中发呆</title>
    <link href="http://i90s.vip//%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/2016/10/31/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E4%BA%9B%E4%BA%BA%E5%BC%80%E8%BD%A6%E5%88%B0%E5%AE%B6%E5%90%8E%E4%BC%9A%E7%8B%AC%E8%87%AA%E5%9D%90%E5%9C%A8%E8%BD%A6%E4%B8%AD%E5%8F%91%E5%91%86.html"/>
    <id>http://i90s.vip//心情笔记/2016/10/31/为什么有些人开车到家后会独自坐在车中发呆.html</id>
    <published>2016-10-31T15:00:22.000Z</published>
    <updated>2016-10-31T15:02:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于一个问题和这个问题的答案</p>
<p>最近看到知乎网上有人提问了一个问题，觉得很值得分享给大家：</p>
<p>问题是：为什么有些人开车到家后会独自坐在车中发呆？</p>
<p>回答的人有很多，有人说因为车里好安静，有种小时候看树下蚂蚁搬家时的平静。</p>
<p>还有人说，是因为车里那首歌没听完 <a id="more"></a></p>
<p>有个朋友说，他不仅喜欢把车开到家门口停一会儿，有时候他甚至绕过家门口掉个头奔快环，有无数个想不明白的夜晚，他一个人开着音响在高速上兜圈。 他的最高纪录是开着暖气熄了灯坐在车里静静的看着人们在楼下银行的 atm 机里取钱，来来往往，看了一个小时。</p>
<p>很难理解对不对？</p>
<p>好好的家不回</p>
<p>车里又没有志玲姐姐</p>
<p>为啥喜欢待在车里？</p>
<p>后来<br>回答的人越来越多<br>…<br>…<br>直到有个人说——<br>很多时候我也不想下车，因为那是一个分界点。推开车门你就是柴米油盐、是父亲、是儿子、是老公，唯独不是你自己；在车上，一个人在车上想静静，抽颗烟，这个躯体属于自己。</p>
<p>这个答案迅速获得了超过 4000 人的赞同。</p>
<p>是啊，活着真的太累。每天带着各种面具忍着各种脾气面对着各种人。不断对自己灌输 “成年人”“成熟” 的行为准则，就算回到家也要小心面对自己的父母妻子，照顾他们的情绪，得不到半点轻松。可我有时候也是会想任性的啊！只有在车里，一个幽暗狭小的空间，一支忽明忽灭的香烟，晚上 fm 主持人轻柔的话语，才会让你有种与世隔绝的感觉，也才会让你意识到 “自我” 的存在，那种感觉实在太好。</p>
<p>当然，并非只有男士才有这种喜欢在车里发呆的习惯，有些女性也有相同的感觉。还有人发自内心的建议姑娘们稍微有点实力就买个小车，真的是既私密又体贴。吵架了伤心了难过了不怕没有去处，油门一蹬四处晃荡，哭一场可以撑半年，然后补个妆回去，厚着脸皮嬉皮笑脸继续把游戏玩下去。</p>
<p>我们每天扮演着各种各样的角色：</p>
<p>在公司，你或是下属，或是上司；</p>
<p>在学校，你或是学生，或是老师；</p>
<p>在家里，你或是丈夫，或是妻子；</p>
<p>甚至走在大街上，你也或是男神女神，或是屌丝女汉子，再不济也是个路人。</p>
<p>唯独在车里的那么一小会儿，你就是你自己。</p>
<p>听着没有放完的曲子，感受此时此刻无需伪装，没有杂质的纯净。</p>
<p>心里想着：“还好有这样一个时刻，我什么也不是，就是我自己。还好。”</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于一个问题和这个问题的答案&lt;/p&gt;
&lt;p&gt;最近看到知乎网上有人提问了一个问题，觉得很值得分享给大家：&lt;/p&gt;
&lt;p&gt;问题是：为什么有些人开车到家后会独自坐在车中发呆？&lt;/p&gt;
&lt;p&gt;回答的人有很多，有人说因为车里好安静，有种小时候看树下蚂蚁搬家时的平静。&lt;/p&gt;
&lt;p&gt;还有人说，是因为车里那首歌没听完
    
    </summary>
    
      <category term="心情笔记" scheme="http://i90s.vip/categories/%E5%BF%83%E6%83%85%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="博客" scheme="http://i90s.vip/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter使用随笔(2)</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/09/21/Jmeter%E4%BD%BF%E7%94%A8%E9%9A%8F%E7%AC%94-2.html"/>
    <id>http://i90s.vip//软件笔记/2016/09/21/Jmeter使用随笔-2.html</id>
    <published>2016-09-21T08:00:49.000Z</published>
    <updated>2017-03-08T14:36:39.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>现在好多网站再用户成功登录时会返回一个登录凭证，在之后的操作上都要带上这个凭证。在使用Jmeter测试的过程中我们需要获取这个凭证。<br>jmeter提供了正则表达式提取器，用变量提取参数，后续通过${变量名}引用参数。</p>
</blockquote>
<h2 id="sessionKey值"><a href="#sessionKey值" class="headerlink" title="sessionKey值"></a>sessionKey值</h2><p>添加方式 线程组-后置处理器-正则表达式提取器<a id="more"></a></p>
<p><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1fafxrg4xmwj21kw0zdqar.jpg" alt=""></p>
<p>. 引用名称：其他地方引用提取值的变量名称，如填写的是sessionKey,具体引用方式是${sessionKey}<br>. 正则表达式：提取内容的正则表达式【需要注意：（）表示提取，对于你要提取的内容需要用小括号括起来】<br>. 模板：用$$引用起来，如果在正则表达式中有多个提取表达式（多个括号括起来的），则可以是$1$,$2$等，表示解析到的第一个值给sessionKey，正则表达式的提取模式，值从1开始，值0对应的是整个匹配的表达式<br>. 匹配数字：0表示随机，-1表示所有，其余正整数代表将在已提取的内容中，第几个匹配的内容<br>. 缺省值：正则表达式匹配失败时，取的值</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;现在好多网站再用户成功登录时会返回一个登录凭证，在之后的操作上都要带上这个凭证。在使用Jmeter测试的过程中我们需要获取这个凭证。&lt;br&gt;jmeter提供了正则表达式提取器，用变量提取参数，后续通过${变量名}引用参数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;sessionKey值&quot;&gt;&lt;a href=&quot;#sessionKey值&quot; class=&quot;headerlink&quot; title=&quot;sessionKey值&quot;&gt;&lt;/a&gt;sessionKey值&lt;/h2&gt;&lt;p&gt;添加方式 线程组-后置处理器-正则表达式提取器
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Mac" scheme="http://i90s.vip/tags/Mac/"/>
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
      <category term="性能测试" scheme="http://i90s.vip/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Jmeter 使用随笔(1)</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/09/19/Jmeter-%E4%BD%BF%E7%94%A8%E9%9A%8F%E7%AC%94.html"/>
    <id>http://i90s.vip//软件笔记/2016/09/19/Jmeter-使用随笔.html</id>
    <published>2016-09-19T06:55:10.000Z</published>
    <updated>2016-12-16T09:48:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTTP信息头管理器-Content-type"><a href="#HTTP信息头管理器-Content-type" class="headerlink" title="HTTP信息头管理器 Content-type"></a>HTTP信息头管理器 Content-type</h2><p>Content-type：在Request Hearder里，告诉服务器我们发送的请求信息是那种格式的。</p>
<p>1 默认值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-type：application/x-www-form-urlencoded</span><br></pre></td></tr></table></figure>
<p>参数格式：key1=value1 &amp; key2=value2</p>
<p>jmeter参数使用方法<br>(1)Paramenters<br><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f7yzjihid6j21g711lag9.jpg" alt=""><a id="more"></a><br>(2)Body Data<br><img src="http://ww4.sinaimg.cn/large/666cc9e3gw1f7zw1flrz2j21gd12pq8v.jpg" alt=""></p>
<p>2 Json格式</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-type:application/json</span><br></pre></td></tr></table></figure>
<p>参数格式：<br>{<br>    “key1”:”value1”,<br>    “key2”:”value2”<br>}</p>
<p>jmeter参数使用方法<br>(1)添加HTTP信息头管理器<br><img src="http://ww4.sinaimg.cn/large/666cc9e3gw1f7zw6hlpapj21g30h8mz4.jpg" alt=""><br>(2)Body Data输入参数<br><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f7zw4o86zxj21fh11qn35.jpg" alt=""></p>
<p>3 传输文件</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-type:multipart/form-data</span><br></pre></td></tr></table></figure>
<p>(1)HTTP请求页面，勾选Use multipart/form-data for POST<br>(2)Paramenters中输入除了要上传的文件以外的参数<br><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f7zw940lqgj21fd10zq8p.jpg" alt=""><br>(3)File Upload中上传文件，填写参数名和MIME类型<br><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f7zwbfcq90j21fe0zdgsi.jpg" alt=""></p>
<h2 id="返回值中文乱码"><a href="#返回值中文乱码" class="headerlink" title="返回值中文乱码"></a>返回值中文乱码</h2><p>（1）再jmeter安装文件夹中找到bin文件夹，用记事本打开jmeter.properties文件<br>（2）修改sampleresult.default.encoding=UTF-8</p>
<blockquote>
<p>注意去掉sampleresult.default.encoding=UTF-8前面的#号</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTTP信息头管理器-Content-type&quot;&gt;&lt;a href=&quot;#HTTP信息头管理器-Content-type&quot; class=&quot;headerlink&quot; title=&quot;HTTP信息头管理器 Content-type&quot;&gt;&lt;/a&gt;HTTP信息头管理器 Content-type&lt;/h2&gt;&lt;p&gt;Content-type：在Request Hearder里，告诉服务器我们发送的请求信息是那种格式的。&lt;/p&gt;
&lt;p&gt;1 默认值&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Content-type：application/x-www-form-urlencoded&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数格式：key1=value1 &amp;amp; key2=value2&lt;/p&gt;
&lt;p&gt;jmeter参数使用方法&lt;br&gt;(1)Paramenters&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/666cc9e3gw1f7yzjihid6j21g711lag9.jpg&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Mac" scheme="http://i90s.vip/tags/Mac/"/>
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
      <category term="性能测试" scheme="http://i90s.vip/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Mac下安装Jmeter</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/09/04/Mac%E4%B8%8B%E5%AE%89%E8%A3%85Jmeter.html"/>
    <id>http://i90s.vip//软件笔记/2016/09/04/Mac下安装Jmeter.html</id>
    <published>2016-09-04T08:47:36.000Z</published>
    <updated>2016-09-04T09:30:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载Jmeter"><a href="#下载Jmeter" class="headerlink" title="下载Jmeter"></a>下载Jmeter</h2><p><a href="http://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="external">Apache JMeter 3.0</a><br>将压缩包解压</p>
<h2 id="配置Jmeter环境"><a href="#配置Jmeter环境" class="headerlink" title="配置Jmeter环境"></a>配置Jmeter环境</h2><p>JMeter 是基于 Java 的框架，所以要求系统必须安装JDK。<a id="more"></a></p>
<p><strong>查看mac是否已经安装JDK</strong></p>
<p><img src="http://ww1.sinaimg.cn/large/666cc9e3jw1f7ho5ekughj214d0d0q7i.jpg" alt=""></p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="built_in">version</span></span><br></pre></td></tr></table></figure>
<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">JDK下载地址</a></p>
<h2 id="运行Jmeter"><a href="#运行Jmeter" class="headerlink" title="运行Jmeter"></a>运行Jmeter</h2><p>进入apache-jmeter-3.0的bin目录下<br>运行 sh jmeter 即可打开jmeter软件</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd apache-<span class="keyword">jmeter-3.0/bin</span><br><span class="line"></span><span class="keyword">sh </span><span class="keyword">jmeter</span></span><br></pre></td></tr></table></figure>
<p><img src="http://ww3.sinaimg.cn/large/666cc9e3gw1f7hola8tkkj21kw0zkgrz.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载Jmeter&quot;&gt;&lt;a href=&quot;#下载Jmeter&quot; class=&quot;headerlink&quot; title=&quot;下载Jmeter&quot;&gt;&lt;/a&gt;下载Jmeter&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://jmeter.apache.org/download_jmeter.cgi&quot;&gt;Apache JMeter 3.0&lt;/a&gt;&lt;br&gt;将压缩包解压&lt;/p&gt;
&lt;h2 id=&quot;配置Jmeter环境&quot;&gt;&lt;a href=&quot;#配置Jmeter环境&quot; class=&quot;headerlink&quot; title=&quot;配置Jmeter环境&quot;&gt;&lt;/a&gt;配置Jmeter环境&lt;/h2&gt;&lt;p&gt;JMeter 是基于 Java 的框架，所以要求系统必须安装JDK。
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Mac" scheme="http://i90s.vip/tags/Mac/"/>
    
      <category term="Jmeter" scheme="http://i90s.vip/tags/Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>关于CS,一些你不知道的事</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/09/03/%E5%85%B3%E4%BA%8ECS-%E4%B8%80%E4%BA%9B%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E4%BA%8B.html"/>
    <id>http://i90s.vip//软件笔记/2016/09/03/关于CS-一些你不知道的事.html</id>
    <published>2016-09-03T12:27:35.000Z</published>
    <updated>2016-09-03T12:47:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>偶然间在论坛上看到的一篇文章，值得思考<br>非常感谢<a href="http://bbs.gter.net/thread-1717877-1-1.html" target="_blank" rel="external">irvine666</a></p>
</blockquote>
<p>　　为了增加可信度，先介绍一下自己。我本科毕业于上海交通大学计算机系，后在上海从事 IT2 年，期间曾经试图创业但失败。然后申请美国大学硕士拿到半奖出国，毕业后到加州硅谷一家超大型公司从事 IT 工作。后因为一些原因跳槽到总部在波士顿的另一家超大型公司接着做 IT 到现在。所以我可以保证：看一下这篇文章并不会浪费我们共同的时间。</p>
<p>　　首先必须承认，CS 是最近 10 年来在美国最好找工作的职业，这点各位差不多都已经知道了，但是接下来的一些东西会让你们知道为什么宣传转 CS 的都是一些非 CS 专业的人，真正的 CS 从业者很少会劝人转 CS。<br><a id="more"></a><br>1、  程序员并不是一个能够长期从事的职业</p>
<p>　　按照业内人士的话来讲，CS 这个行业：越老越不值钱。原因很简单，CS 的技术每天都在更新换代，速度之快已经到了你如果 2 个月不碰它，那么就很难赶上进度。真正的 CS 工作是这样的：每 1-2 周，你会负责把一整个模块搭建起来，在计划书当中包括了好几个你根本没有听说过的东西。你的任务就是在 1-2 周之内，把这些东西全部学懂，然后应用到你的模块当中，并调试通过保证没有任何的漏洞。这个需要很强的学习和应用能力以及很强的熬夜能力。在年纪大了以后，很难比拼过刚毕业 1-2 年的员工。试想一下，你如果作为老板，是愿意聘用每年 12-15 万的 40 岁的有老婆孩子身体也不太好老请病假的老员工，还是 8-10 万一年的能熬夜干劲足没有家庭牵挂的小青年呢？</p>
<p>2、 程序员意味着私人和家庭生活的匮乏</p>
<p>　　除了少数几个养老公司以外（比如：IBM，Salesforce，以及 3 年前的微软），我所了解的绝大部分 IT 公司加班乃至昼夜颠倒是非常正常的事情。如果你能够晚上 7 点下班，并保证回家不加班，那么说明你是非常非常厉害的一个人。过度的加班往往意味着只能牺牲自己的私人和家庭时间。如果你是单身青年，你不会有时间去好好谈恋爱，挑选人生的伴侣；如果你结婚了，你会发现除非配偶不工作，你很难有时间和精力生孩子；如果你有家庭，你的老婆孩子甚至不会感觉到你的存在，你面对电脑的时间会远远超过陪伴他们的时间，而这个，在 5-20 年会有很严重的后果，具体的后果包括家庭破裂，子女叛逆不孝等等。我不止一次听我们的各个老程序员抱怨后悔年轻时没有时间陪伴家人。</p>
<p>3、  程序员的工作对身体伤害很大</p>
<p>　　还是那句话，长期加班 + 心里孤独，会导致很多问题。30 岁左右就脊椎扭曲甚至心态不正常的程序员不在少数，更多数的会带有一生的病痛，手指痉挛，背痛得无法躺下，腿部供血不足，头痛欲裂等等现象会伴随你度过每一个晚上。</p>
<p>4、  程序员的前景并不明朗</p>
<p>　　看待一个行业，并不能够只看它辉煌的时期，而是应当从一生的角度来选择。举个典型的例子，记得我在刚进大学的时候，信息保护和光伏工程这两个专业是最火的，因为所有毕业生都被各大公司疯抢。但是在我毕业的时候，甚至都没有听说过有几个学校还在开办这些专业。就是因为那几年所有的学校都在开办，毕业生的人数迅速超过了社会的需求，同时由于新的技术出现，导致原来的公司迅速被淘汰，就业需求大大减少。从目前来看，CS 这个行业已经充斥着很多泡沫，如果你们能去搜索一下各个 IT 上市公司的 P/E 数据就会发现，整个 tech 板块都充斥着不理性的投资，这个泡沫能吹多大或者还能持续几年？我不知道，但是我知道一旦泡泡破了，大量的 CS 从业人员将会受到影响，裁员失业是不可避免的事情。从目前来看，NASDAQ 已经出现了一些崩盘的征兆，在过去的几周当中，所有的 IT 公司股票都下跌了 25% 左右。</p>
<p>5、  程序员这个行业竞争已经过于激烈</p>
<p>　　虽然大部分 IT 公司还在招人，但是请记住他们只要 “最好” 的人，并不是所有的程序员都能被他们看上。由于人才市场的爆满，合格的 candidate 会获得非常高的报酬，但也意味着即使你成功获得 offer，你所面临的压力会更大。我举 Facebook 为例，它给出的报酬在业内也是算 1，2 名了，但是当你接受 offer 开始，你便面临这残酷的竞争。所有 facebook 的新员工必须经过一个为期 6 周的训练营，在这个期间，你必须学会 facebook 的开发，调试，搭配环境并自己写出一些东西来证明自己。训练营的淘汰率为 10%，也就是说，所有合格拿到 offer 的人（已经很厉害了）当中，10% 的人入职不会超过六周就被 fire。即使你成功通过训练营，每个季度会考核你的 performance，最后 5%-10% 的人将被 fire 掉。这些被裁掉的人的位置，将由更优秀的人来填补。在硅谷，绝大多数公司可能没有训练营淘汰制，但是他们都会有每个季度或者每年的淘汰制。所以拿到 OFFER 才是痛苦的开始。要留下来，只能玩命。</p>
<p>6、  程序员的绿卡之路并不会比别的职业顺利多少</p>
<p>　　首先，程序员的绿卡排期和其他专业是一样的。其次，大家可能还不知道美国政府有一个特别坑爹的规定：“如果一个公司出现 layoff 性质的裁员，那么这个公司所有的绿卡程序将会被拖延半年”。这个规定使得在一些 IT 公司，那绿卡成为 IMPOSSIBLE。比如 ECM。这种公司的宗旨就是业绩说话，他们每年会新建很多的 team，但是到了年底，表现一般的 team 就会被整个裁掉，这样来保证自己整个公司的业绩始终是上升的。在这种公司，每个月都会裁员，即使给你开始办绿卡了，你也永远看不到被批准的一天。相比起来，其他的行业比 IT 稳定多了，一旦开始排期，拿绿卡也会更为顺利。而如果能做到博士或者博后，甚至能够凭借文章申请杰出人才绿卡，在几个月内被批准。</p>
<p>　　所以说，程序员这个职业并不是像外界评论的一样无可匹敌 。它有自己的优势也会有劣势。我想更准确的说法是，如果你决定从事 CS，那么你必须：1. 非常感兴趣，喜欢这个行业；或者 2. 你不喜欢这个行业，但是你愿意用自己的青春，健康，自己未来的私人和家庭生活去换取一些金钱或者短期的荣耀。 </p>
<p>　　最后，我想说任何行业都有成功的人，任何成功的人都具有的一个特点就是几十年如一日的坚持。我希望每个人都有自己的坚持，如果只是听别人说说就决定转这个转那个，那永远不会有成功的一天。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;偶然间在论坛上看到的一篇文章，值得思考&lt;br&gt;非常感谢&lt;a href=&quot;http://bbs.gter.net/thread-1717877-1-1.html&quot;&gt;irvine666&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;　　为了增加可信度，先介绍一下自己。我本科毕业于上海交通大学计算机系，后在上海从事 IT2 年，期间曾经试图创业但失败。然后申请美国大学硕士拿到半奖出国，毕业后到加州硅谷一家超大型公司从事 IT 工作。后因为一些原因跳槽到总部在波士顿的另一家超大型公司接着做 IT 到现在。所以我可以保证：看一下这篇文章并不会浪费我们共同的时间。&lt;/p&gt;
&lt;p&gt;　　首先必须承认，CS 是最近 10 年来在美国最好找工作的职业，这点各位差不多都已经知道了，但是接下来的一些东西会让你们知道为什么宣传转 CS 的都是一些非 CS 专业的人，真正的 CS 从业者很少会劝人转 CS。&lt;br&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="CS" scheme="http://i90s.vip/tags/CS/"/>
    
  </entry>
  
  <entry>
    <title>和软件测试有关的那些事</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/07/11/%E6%B5%8B%E8%AF%95%E7%9B%B8%E5%85%B3%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B.html"/>
    <id>http://i90s.vip//软件笔记/2016/07/11/测试相关的那些事.html</id>
    <published>2016-07-11T10:55:00.000Z</published>
    <updated>2016-07-11T10:58:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是软件测试？"><a href="#1-什么是软件测试？" class="headerlink" title="1. 什么是软件测试？"></a>1. 什么是软件测试？</h2><p>软件测试是为了发现错误而执行程序的过程。或者说，软件测试是根据软件开发各阶段的规格说明和程序的内部结构而精心设计一批测试用例(即输入数据及其预期的输出结果)，并利用这些测试用例去运行程序，以发现程序错误的过程。</p>
<h2 id="2-软件测试的目的"><a href="#2-软件测试的目的" class="headerlink" title="2.  软件测试的目的?"></a>2.  软件测试的目的?</h2><p>测试的目的是想以最少的人力、物力和时间找出软件中潜在的各种错误和缺陷，通过修正种错误和缺陷提高软件质量，回避软件发布后由于潜在的软件缺陷和错误造成的隐患带来的商业风险。<a id="more"></a></p>
<h2 id="3-什么是需求文档测试？"><a href="#3-什么是需求文档测试？" class="headerlink" title="3. 什么是需求文档测试？"></a>3. 什么是需求文档测试？</h2><p>主要测试需求中是否存在逻辑矛盾以及需求在技术上是否可以实现。</p>
<h2 id="4-什么是设计文档测试"><a href="#4-什么是设计文档测试" class="headerlink" title="4. 什么是设计文档测试?"></a>4. 什么是设计文档测试?</h2><p>测试设计是否符合全部需求以及设计是否合理。</p>
<h2 id="5-什么是α测试"><a href="#5-什么是α测试" class="headerlink" title="5. 什么是α测试?"></a>5. 什么是α测试?</h2><p>Alpha测试(α测试)是由<strong>一个用户在开发环境下进行的测试</strong>，也可以是公司内部的用户在模拟实际操作环境下进行的受控测试，Alpha测试不能由程序员或测试员完成。Alpha测试发现的错误，可以在测试现场立刻反馈给开发人员，由开发人员及时分析和处理。目的是评价软件产品的功能、可使用性、可靠性、性能和支持。尤其注重产品的界面和特色。Alpha测试可以从软件产品编码结束之后开始，或在模块(子系统)测试完成后开始，也可以在确认测试过程中产品达到一定的稳定和可靠程度之后再开始。有关的手册(草稿)等应该在Alpha测试前准备好。</p>
<h2 id="6-什么是β测试"><a href="#6-什么是β测试" class="headerlink" title="6. 什么是β测试?"></a>6. 什么是β测试?</h2><p>Beta测试(β测试)是软件的<strong>多个用户在一个或多个用户的实际使用环境下</strong>进行的测试。开发者通常不在测试现场，Beta测试不能由程序员或测试员完成。因而，Beta测试是在开发者无法控制的环境下进行的软件现场应用。在Beta测试中，由用户记下遇到的所有问题，包括真实的以及主管认定的，定期向开发者报告，开发者在综合用户的报告后，做出修改，最后将软件产品交付给全体用户使用。Beta测试着重于产品的支持性，包括文档、客户培训和支持产品的生产能力。只有当Alpha测试达到一定的可靠程度后，才能开始Beta测试。由于Beta测试的主要目标是测试可支持性，所以Beta测试应该尽可能由主持产品发行的人员来管理。</p>
<h2 id="7-什么是驱动模块？"><a href="#7-什么是驱动模块？" class="headerlink" title="7. 什么是驱动模块？"></a>7. 什么是驱动模块？</h2><p>驱动模块在大多数场合称为”主程序”，它接收测试数据并将这些数据传递到被测试模块.单元测试一个函数单元时，被测单元本身是不能独立运行的，需要为其传送数据，为此写驱动<br>驱动模块主要完成以下事情：<br>1、接受测试输入;<br>2、对输入进行判断;<br>3、将输入传给被测单元，驱动被测单元执行;<br>4、接受被测单元执行结果，并对结果进行判断;<br>5、将判断结果作为用例执行结果输出测试报告。</p>
<h2 id="8-什么是桩模块"><a href="#8-什么是桩模块" class="headerlink" title="8. 什么是桩模块?"></a>8. 什么是桩模块?</h2><p>比如对函数A做单元测试时，被测的函数单元下还包括了一个函数B，为了更好的错误，定位错误，就要为函数B写桩，来模拟函数B的功能，保证其正确。</p>
<h2 id="9-什么是白盒测试"><a href="#9-什么是白盒测试" class="headerlink" title="9. 什么是白盒测试?"></a>9. 什么是白盒测试?</h2><p>:白盒测试(White-box Testing，又称逻辑驱动测试,结构测试),它是知道产品内部工作过程，可通过测试来检测产品内部动作是否按照规格说明书的规定正常进行，按照程序内部的结构测试程序，检验程序中的每条通路是否都有能按预定要求正确工作，而不顾它的功能，白盒测试的主要方法有逻辑驱动、基路测试等，主要用于软件验证。对开发语言的支持：白盒测试工具是对源代码进行的测试，测试的主要内容包括词法分析与语法分析、静态错误分析、动态检测等。目前测试工具主要支持的开发语言包括：标准C、C++、Visual C++、Java、Visual J++等。</p>
<h2 id="10-什么是静态测试"><a href="#10-什么是静态测试" class="headerlink" title="10. 什么是静态测试?"></a>10. 什么是静态测试?</h2><p>通过运行程序测试软件称为测试.通过评审文档、阅读代码等方式测试软件称为静态测试,在动态测试中,通常使用白盒测试和黑盒测试从不同的角度设计测试用例,查找软件代码中的错误.<br>     <strong>静态测试方法是指不运行被测程序本身</strong>，仅通过分析或检查源程序的语法、结构、过程、接口等来检查程序的正确性。对需求规格说明书、软件设计说明书、源程序做结构分析、流程图分析、符号执行来找错。静态方法通过程序静态特性的分析，找出欠缺和可疑之处，例如不匹配的参数、不适当的循环嵌套和分支嵌套、不允许的递归、未使用过的变量、空指针的引用和可疑的计算等。静态测试结果可用于进一步的查错，并为测试用例选取提供指导。</p>
<h2 id="11-什么是回归测试"><a href="#11-什么是回归测试" class="headerlink" title="11. 什么是回归测试?"></a>11. 什么是回归测试?</h2><p>回归测试的目的是在程序有修改的情况下，保证原有功能正常的一种测试策略和方法。说白了就是，我们测试人员在对程序进行测试时发现bug，然后返还程序员修改，程序员修改后发布新的软件包或新的软件补丁包给我们测试人员，我们就要重新对这个程序测试，已保证程序在修正了以前bug的情况下，正常运行，且不会带来新的错误的这样一个过程。 一般情况下是不需要全面测试的，而是根据修改的情况进行有效的测试。</p>
<h2 id="12-白盒测试有哪几种方法"><a href="#12-白盒测试有哪几种方法" class="headerlink" title="12. 白盒测试有哪几种方法?"></a>12. 白盒测试有哪几种方法?</h2><p>白盒测试也称结构测试或逻辑驱动测试，它是知道产品内部工作过程，可通过测试来检测产品内部动作是否按照规格说明书的规定正常进行，按照程序内部的结构测试程序，检验程序中的每条通路是否都有能按预定要求正确工作，而不顾它的功能，白盒测试的主要方法有逻辑驱动、基路测试等，主要用于软件验证。“白盒”法全面了解程序内部逻辑结构、对所有逻辑路径进行测试。“白盒”法是穷举路径测试。</p>
<h2 id="13-软件的缺陷等级应如何划分"><a href="#13-软件的缺陷等级应如何划分" class="headerlink" title="13. 软件的缺陷等级应如何划分?"></a>13. 软件的缺陷等级应如何划分?</h2><p>1）致命错误，可能导致本模块以及其他相关模块异常，死机等问题;<br>2）严重错误，问题局限在本模块，导致模块功能失效或异常退出<br>3）一般错误，模块功能部分失效;<br>4）建议问题，由问题提出人对测试对象的改进意见;</p>
<h2 id="14-如果能够执行完美的黑盒测试，还需要进行白盒测试吗-白盒与黑盒的区别"><a href="#14-如果能够执行完美的黑盒测试，还需要进行白盒测试吗-白盒与黑盒的区别" class="headerlink" title="14. 如果能够执行完美的黑盒测试，还需要进行白盒测试吗?(白盒与黑盒的区别)"></a>14. 如果能够执行完美的黑盒测试，还需要进行白盒测试吗?(白盒与黑盒的区别)</h2><p>任何工程产品(注意是任何工程产品)都可以使用以下两种方法之一进行测试。<br>黑盒测试：已知产品的功能设计规格，可以进行测试证明每个实现了的功能是否符合要求。 白盒测试：已知产品的内部工作过程，可以通过测试证明每种内部操作是否符合设计规格要求，所有内部成分是否以经过检查。<br>软件的黑盒测试意味着测试要在软件的接口处进行。这种方法是把测试对象看做一个黑盒子，测试人员完全不考虑程序内部的逻辑结构和内部特性，只依据程序的需求规格说明书，检查程序的功能是否符合它的功能说明。因此黑盒测试又叫功能测试或数据驱动测试。黑盒测试主要是为了发现以下几类错误：<br>1、是否有不正确或遗漏的功能?<br>2、在接口上，输入是否能正确的接受?能否输出正确的结果?<br>3、是否有数据结构错误或外部信息(例如数据文件)访问错误?<br>4、性能上是否能够满足要求?<br>5、是否有初始化或终止性错误?<br>软件的白盒测试是对软件的过程性细节做细致的检查。这种方法是把测试对象看做一个打开的盒子，它允许测试人员利用程序内部的逻辑结构及有关信息，设计或选择测试用例，对程序所有逻辑路径进行测试。通过在不同点检查程序状态，确定实际状态是否与预期的状态一致。因此白盒测试又称为结构测试或逻辑驱动测试。白盒测试主要是想对程序模块进行如下检查：<br>1、对程序模块的所有独立的执行路径至少测试一遍。<br>2、对所有的逻辑判定，取“真”与取“假”的两种情况都能至少测一遍。<br>3、在循环的边界和运行的界限内执行循环体。<br>4、测试内部数据结构的有效性，等等。<br>以上事实说明，软件测试有一个致命的缺陷，即测试的不完全、不彻底性。由于任何程序只能进行少量(相对于穷举的巨大数量而言)的有限的测试，在未发现错误时，不能说明程序中没有错误。</p>
<h2 id="15-软件测试应该划分几个阶段-简述各个阶段应重点测试的点-各个阶段的含义"><a href="#15-软件测试应该划分几个阶段-简述各个阶段应重点测试的点-各个阶段的含义" class="headerlink" title="15. 软件测试应该划分几个阶段?简述各个阶段应重点测试的点?各个阶段的含义?"></a>15. 软件测试应该划分几个阶段?简述各个阶段应重点测试的点?各个阶段的含义?</h2><p>大体上来说可分为单元测试,集成测试,系统测试,验收测试,每个阶段又分为以下五个步骤: 测试计划，测试设计，用例设计，执行结果，测试报告初始测试集中在每个模块上，保证源代码的正确性，该阶段成为单元测试，主要用白盒测试方法。 接下来是模块集成和集成以便组成完整的软件包。集成测试集中在证实和程序构成问题上。主要采用黑盒测试方法，辅之以白盒测试方法。软件集成后，需要完成确认和系统测试。确认测试提供软件满足所有功能、性能需求的最后保证。确认测试仅仅应用黑盒测试方法。</p>
<h2 id="16-什么是单元测试？"><a href="#16-什么是单元测试？" class="headerlink" title="16. 什么是单元测试？"></a>16. 什么是单元测试？</h2><p>单元测试是对软件中的基本组成单位进行的测试，如一个模块、一个过程等等。它是软件动态测试的最基本的部分，也是最重要的部分之一，其目的是检验软件基本组成单位的正确性。</p>
<h2 id="17-什么是集成测试？"><a href="#17-什么是集成测试？" class="headerlink" title="17. 什么是集成测试？"></a>17. 什么是集成测试？</h2><p>集成测试是在软件系统集成过程中所进行的测试，其主要目的是检查软件单位之间的接口是否正确。</p>
<h2 id="18-什么是系统测试？"><a href="#18-什么是系统测试？" class="headerlink" title="18. 什么是系统测试？"></a>18. 什么是系统测试？</h2><p>系统测试是对已经集成好的软件系统进行彻底的测试，以验证软件系统的正确性和性能等满足其规约所指定的要求，检查软件的行为和输出是否正确并非一项简单的任务，它被称为测试的“先知者问题”。</p>
<h2 id="19-什么是验收测试？"><a href="#19-什么是验收测试？" class="headerlink" title="19. 什么是验收测试？"></a>19. 什么是验收测试？</h2><p>收测试旨在向软件的购买者展示该软件系统满足其用户的需求。它的测试数据通常是系统测试的测试数据的子集.</p>
<h2 id="20-针对缺陷采取怎样的管理措施"><a href="#20-针对缺陷采取怎样的管理措施" class="headerlink" title="20. 针对缺陷采取怎样的管理措施?"></a>20. 针对缺陷采取怎样的管理措施?</h2><p>1）要更好的管理缺陷，必须引入缺陷管理工具，商用的或者开源的都可。<br>2）根据缺陷的生命周期，考虑缺陷提交的管理、缺陷状态的管理和缺陷分析的管理。<br>3） 所有发现的缺陷(不管是测试发现的还是走读代码发现的)都必须全部即时的、准确的提交到缺陷管理工具中，这是缺陷提交的管理。<br>4）缺陷提交后，需要即时的指派给相应的开发人员，提交缺陷的人需要密切注意缺陷的状态， 帮助缺陷的尽快解决。缺陷解决后需要即时对缺陷的修复进行验证。这样的目的有两个：一个是让缺陷尽快解决;二是方便后面缺陷的分析(保证缺陷相关的信息准确，如龄期等)，这是缺陷状态的管理。<br>5）为了更好的改进开发过程和测试过程，需要对缺陷进行分析，总结如缺陷的类别、缺陷的龄期分布等信息，这是缺陷分析的管理。</p>
<h2 id="21-单元测试、集成测试、系统测试的侧重点是什么"><a href="#21-单元测试、集成测试、系统测试的侧重点是什么" class="headerlink" title="21.单元测试、集成测试、系统测试的侧重点是什么?"></a>21.单元测试、集成测试、系统测试的侧重点是什么?</h2><p>单元测试是在软件开发过程中要进行的最低级别的测试活动，在单元测试活动中，软件的独立单元将在与程序的其他部分相隔离的情况下进行测试，测试重点是系统的模块，包括子程序的正确性验证等。 集成测试，也叫组装测试或联合测试。在单元测试的基础上，将所有模块按照设计要求，组装成为子系统或系统，进行集成测试。实践表明，一些模块虽然能够单独地工作，但并不能保证连接起来也能正常的工作。程序在某些局部反映不出来的问题，在全局上很可能暴露出来，影响功能的实现。测试重点是模块间的衔接以及参数的传递等。系统测试是将经过测试的子系统装配成一个完整系统来测试。它是检验系统是否确实能提供系统方案说明书中指定功能的有效方法。测试重点是整个系统的运行以及与其他软件的兼容性。</p>
<h2 id="22-描述使用bugzilla缺陷管理工具对软件缺陷-BUG-跟踪的管理的流程"><a href="#22-描述使用bugzilla缺陷管理工具对软件缺陷-BUG-跟踪的管理的流程" class="headerlink" title="22.描述使用bugzilla缺陷管理工具对软件缺陷(BUG)跟踪的管理的流程"></a>22.描述使用bugzilla缺陷管理工具对软件缺陷(BUG)跟踪的管理的流程</h2><p>1) 测试人员或开发人员发现bug后，判断属于哪个模块的问题，填写bug报告后，系统会自动通过Email通知项目组长或直接通知开发者。<br>2) 经验证无误后，修改状态为VERIFIED.待整个产品发布后，修改为CLOSED.<br>3) 还有问题，REOPENED，状态重新变为“New”，并发邮件通知。<br>4) 项目组长根据具体情况，重新reassigned分配给bug所属的开发者。<br>5) 若是，进行处理，resolved并给出解决方法。(可创建补丁附件及补充说明)<br>6) 开发者收到Email信息后，判断是否为自己的修改范围。<br>7) 若不是，重新reassigned分配给项目组长或应该分配的开发者。<br>8) 测试人员查询开发者已修改的bug，进行重新测试。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-什么是软件测试？&quot;&gt;&lt;a href=&quot;#1-什么是软件测试？&quot; class=&quot;headerlink&quot; title=&quot;1. 什么是软件测试？&quot;&gt;&lt;/a&gt;1. 什么是软件测试？&lt;/h2&gt;&lt;p&gt;软件测试是为了发现错误而执行程序的过程。或者说，软件测试是根据软件开发各阶段的规格说明和程序的内部结构而精心设计一批测试用例(即输入数据及其预期的输出结果)，并利用这些测试用例去运行程序，以发现程序错误的过程。&lt;/p&gt;
&lt;h2 id=&quot;2-软件测试的目的&quot;&gt;&lt;a href=&quot;#2-软件测试的目的&quot; class=&quot;headerlink&quot; title=&quot;2.  软件测试的目的?&quot;&gt;&lt;/a&gt;2.  软件测试的目的?&lt;/h2&gt;&lt;p&gt;测试的目的是想以最少的人力、物力和时间找出软件中潜在的各种错误和缺陷，通过修正种错误和缺陷提高软件质量，回避软件发布后由于潜在的软件缺陷和错误造成的隐患带来的商业风险。
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="测试分类" scheme="http://i90s.vip/tags/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>五分钟战胜 Python 字符编码</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/06/28/%E4%BA%94%E5%88%86%E9%92%9F%E6%88%98%E8%83%9C-Python-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81.html"/>
    <id>http://i90s.vip//软件笔记/2016/06/28/五分钟战胜-Python-字符编码.html</id>
    <published>2016-06-28T15:27:13.000Z</published>
    <updated>2016-06-28T15:29:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于很多接触 Python 的人而言，字符的处理和语言整体的温顺可靠相比显得格外桀骜不驯难以驾驭。</p>
<p>本文不谈复杂的理论，就经验教你字符处理八字真言：确定编码，同类交互。</p>
<p>文章针对 Python 2.7 ，主要因为 3 对的编码已经有了很大的改善并且实际原理一样，更改一下操作命令即可。</p>
<p>了解完本文，你可以轻松解决文字处理，特殊平台（ Windows?）下的编码，爬虫编码等问题。</p>
<p>阅读建议 <a id="more"></a></p>
<p>本文分为如下几个部分：</p>
<blockquote>
<p>原理<br>具体操作<br>建议的使用习惯<br>疑难问题解答</p>
</blockquote>
<p>如果想要了解我给出的使用习惯，可以直接跳到建议的使用习惯。</p>
<p>如果只想要解决相关问题可以直接跳到疑难问题解答。</p>
<p>希望本文能够帮到你。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>为了理解方便，这里不谈理论只做类比，具体想要进一步了解各种编码的理论的搜狗一下好了。</p>
<p>首先说一下我们为什么会碰到各式各样的编码问题：</p>
<p>因为我们没有统一编码<br>因为我们没有用对命令（传对数据）<br>再说一下编码是什么， Python 的编码看似复杂，实际上可以看做只有两类编码： Unicode ，二进制</p>
<p>Unicode 相信都很熟悉：，就是\u0000这样的<br>二进制编码也很简单，就是\x00\x00这样的，平常看到的utf-8,cp936都是二进制编码<br>二进制编码是具象的，10001100原样就可以存储，而 Unicode 是抽象的，不能这样存<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unicode 编码演示</span></span><br><span class="line">print(<span class="string">'Unicode:'</span>)</span><br><span class="line">print(repr(<span class="string">u'Unicode 编码'</span>))`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 二进制编码演示</span></span><br><span class="line">print(<span class="string">u'二进制编码:'</span>)</span><br><span class="line">print(repr(<span class="string">'Unicode 编码'</span>))`</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只是看个样子，代码不必去深究</span></span><br></pre></td></tr></table></figure></p>
<p>再说怎么做，就是只有同种编码之间才可以操作</p>
<p>举个简单的类比<br>就把一串数据比为烤鸭，我们作为人和鸭子不同种看待烤鸭的态度完全不一样。<br>我们看到的是晚上的配菜，鸭子看到的是自己二舅。<br>那么我在逛烤鸭店的时候用错编码就会报错。<br>因为我在烤鸭店看到了满世界的二舅。<br>这里说的同种就是我们熟悉的各种编码方式：utf-8,unicode,ucs-bom<br>这也就是编码问题的核心，非常重要。<br>最后说一下 Python 的环境</p>
<p>本身代码是用 Ascii 解码的，文件里有 Ascii 无法解码的内容的话要告知 Python 怎么解码<br>内部大量命令都是默认接受 Unicode<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 告知的命令就是下面这一行，删掉就会报错</span></span><br><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line">print(<span class="string">u'测试编码'</span>)</span><br></pre></td></tr></table></figure></p>
<h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><p>拿到各种编码的内容自然是不用说，那么如果我们想要自己构造怎么做呢，看下面：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串前面加 u 会默认构造出 Unicode 的字符串</span></span><br><span class="line">unicodeString = <span class="string">u'Unicode 字符串'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串前面什么都不加会构造出默认编码（首行限定了现在的 utf8 ）的字符串</span></span><br><span class="line">utf8String = <span class="string">'Utf-8 字符串'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当然，没有首行，默认的编码是 Ascii</span></span><br><span class="line">那么他们之间怎么转换呢，同样很简单：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接上一段程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Unicode 转化为二进制编码中的一种： utf8</span></span><br><span class="line">unicodeString.encode(<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 二进制编码根据自己的编码种类转化为 Unicode</span></span><br><span class="line">utf8String.decode(<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果二进制编码中混进了奇怪的东西可以根据需求用特殊的 decode 策略</span></span><br><span class="line">print(repr(<span class="string">'u8 字\x00 符串'</span>.decode(<span class="string">'utf8'</span>, <span class="string">'replace'</span>)))</span><br><span class="line">那么怎么样会出现问题呢：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 接上一段程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果我们把他们转化成同样的编码方式就可以操作（例如相加）</span></span><br><span class="line">print(repr(unicodeString + utf8String.decode(<span class="string">'utf8'</span>)))</span><br><span class="line">print(repr(unicodeString.encode(<span class="string">'utf8'</span>) + utf8String))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 但如果不转化，当然就会出现满世界的烤鸭二舅啦</span></span><br><span class="line">unicodeString + utf8String</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所以另一方面也发现，编码转换是需要我们告诉程序怎么做的</span></span><br><span class="line"><span class="comment"># 所有`decode`操作都会生成 Unicode 编码，这是为了方便我之前说的大量接受 Unicode 的内部命令</span></span><br></pre></td></tr></table></figure></p>
<p>所以我们需要确定程序使用的编码，这是我们需要告诉程序的东西</p>
<p>一方面在操作字符串的时候确定是同种编码<br>另一方面在使用非自己写的命令时，一般使用 Unicode ，或者使用接收二进制编码的命令<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="comment"># 这里拿写入文件举例</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一般使用 Unicode</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'Unicode.txt'</span>, <span class="string">'w'</span>) <span class="keyword">as</span> f: f.write(<span class="string">u'Unicode 测试'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用接收二进制编码的命令</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'Utf8.txt'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f: f.write(<span class="string">'Utf8 测试'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 你可以反过来做个测试，自然会报错</span></span><br><span class="line"><span class="comment"># 二进制的命令方便了在不知道怎么解码的情况下也能进行操作（写入文件）</span></span><br></pre></td></tr></table></figure></p>
<p>我建议的使用习惯</p>
<p>相信到这里我已经把我对于编码的理解讲完了。</p>
<p>我们为什么会碰到各式各样的编码问题：</p>
<p>因为我们没有统一编码<br>因为我们没有用对命令（传对数据）<br>所以这里再重申一下八字真言：确定编码，同类交互</p>
<p>碰到问题，问一下自己，我现在是哪种编码<br>同一种编码才能交互，那我应该是哪种编码<br>这里给出我的使用习惯：</p>
<p>确定一种内部编码<br>内部编码的选择优先级如下：程序必须使用的编码、第三方包使用的编码、你喜欢的编码、 Unicode<br>在输出时再更改到特定的编码<br>记得在开始整个程序之前确定内部的编码，否则编码一团糟会产生很多不必要的 bug 。</p>
<p>不要迷信内部 Unicode ，例如 Evernote 开发就应该根据第三方包使用的 Utf8 确定内部编码。</p>
<h2 id="疑难问题解答"><a href="#疑难问题解答" class="headerlink" title="疑难问题解答"></a>疑难问题解答</h2><p>编码识别</p>
<p>说了要确定编码，那么拿到一串二进制要怎么确定编码呢？</p>
<p>最简单的方法是chardet：（需要安装）</p>
<p>python -m pip install chardet<br>使用非常简单：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> chardet <span class="keyword">import</span> detect</span><br><span class="line">print(detect(<span class="string">'这是一串 utf8 的测试字符'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 结果：`&#123;'confidence': 0.99, 'encoding': 'utf-8'&#125;`</span></span><br></pre></td></tr></table></figure></p>
<p>另外例如抓取网站，那么头文件中很有可能有提示如何解码，记得不要忘记了。</p>
<p>编码转换</p>
<p>很可能因为字符串中参杂了奇怪的东西，导致即使编码种类正确，依旧无法解码。</p>
<p>我知道我之前讲过了，但可能有人直接跳疑难问题解答嘛。</p>
<p>这里可以使用decode的第二个参数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串中混进了\x00</span></span><br><span class="line">rubbishUtf8String = <span class="string">'Utf-8 字\x00 符串'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(repr(rubbishUtf8String.decode(<span class="string">'utf8'</span>, <span class="string">'replace'</span>)))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(repr(rubbishUtf8String.decode(<span class="string">'utf8'</span>, <span class="string">'ignore'</span>)))</span><br></pre></td></tr></table></figure></p>
<p>特殊平台下编码</p>
<p>很多人都说 Windows 是个坑，即使在 Python 3 下面也一样。</p>
<p>因为中文文件名出来都是乱码。</p>
<p>这里使用一个取巧的方法：平台编码再特殊，起码命令行读取和创建一个文件夹不会出乱码吧。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, os</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> folder <span class="keyword">in</span> os.walk(<span class="string">'.'</span>).next()[<span class="number">1</span>]:</span><br><span class="line">    print(folder.decode(sys.stdin.encoding))</span><br><span class="line">同样的输入输出也可以这样做优化：</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sys_print</span><span class="params">(msg)</span>:</span></span><br><span class="line">    print(msg.encode(sys.stdin.encoding))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sys_input</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> raw_input(msg.encode(sys.stdin.encoding)).decode(sys.stdin.encoding)</span><br></pre></td></tr></table></figure></p>
<p>文件写入</p>
<p>如果抓下来一个内容不知道怎么解码，但还是想要写入文件怎么办</p>
<p>写入文件的时候制定用二进制命令即可：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line">import urllib</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'Utf8.txt'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f: f.<span class="built_in">write</span>(<span class="string">'Utf8 测试'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 比如抓了个网页，不知道编码也可以写入文件进行一系列操作</span></span><br><span class="line"></span><br><span class="line">content = urllib.urlopen(<span class="string">'http://www.baidu.com'</span>).<span class="built_in">read</span>()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'baidu.txt'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f: f.<span class="built_in">write</span>(content)</span><br></pre></td></tr></table></figure></p>
<p>裸 Unicode 字符</p>
<p>Unicode 存成六个 Ascii 字符怎么办？其实也可以decode<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf8</span></span><br><span class="line"><span class="comment"># 这是普通的 Unicode</span></span><br><span class="line">s = <span class="string">u'测'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s: print(i)</span><br><span class="line">print(repr(s))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这是裸 Unicode ，实际存成了六个 Ascii</span></span><br><span class="line">s = repr(s)[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s: print(i)</span><br><span class="line">print(repr(s))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 转化其实也很简单</span></span><br><span class="line">s = s.decode(<span class="string">'unicode-escape'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s: print(i)</span><br><span class="line">print(repr(s))</span><br></pre></td></tr></table></figure></p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>希望读完这篇文章能对你有帮助，有什么不足之处万望指正（鞠躬）。</p>
<p>有什么想法或者想要关注我的更新，欢迎来Github上Star或者Fork我的项目。</p>
<p>160623</p>
<p>LittleCoder</p>
<p>EOF<br><a href="http://www.v2ex.com/t/287727#reply23" target="_blank" rel="external">转载自V2EX</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于很多接触 Python 的人而言，字符的处理和语言整体的温顺可靠相比显得格外桀骜不驯难以驾驭。&lt;/p&gt;
&lt;p&gt;本文不谈复杂的理论，就经验教你字符处理八字真言：确定编码，同类交互。&lt;/p&gt;
&lt;p&gt;文章针对 Python 2.7 ，主要因为 3 对的编码已经有了很大的改善并且实际原理一样，更改一下操作命令即可。&lt;/p&gt;
&lt;p&gt;了解完本文，你可以轻松解决文字处理，特殊平台（ Windows?）下的编码，爬虫编码等问题。&lt;/p&gt;
&lt;p&gt;阅读建议
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="python" scheme="http://i90s.vip/tags/python/"/>
    
      <category term="字符编码" scheme="http://i90s.vip/tags/%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>测试分类</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/06/13/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB.html"/>
    <id>http://i90s.vip//软件笔记/2016/06/13/测试分类.html</id>
    <published>2016-06-13T14:48:16.000Z</published>
    <updated>2016-06-14T12:41:16.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本篇博文属于对软件测试领域的科普篇，关于软件测试领域，名词颇多，发现有许多测试新手混淆概念，甚至有不少招聘要求中对各种软件测试相关的名词乱用，所以，这里汇总测试相关的名词，也许能理清你对各种名词的概念。</p>
</blockquote>
<h2 id="根据项目流程阶段划分测试"><a href="#根据项目流程阶段划分测试" class="headerlink" title="根据项目流程阶段划分测试  "></a>根据项目流程阶段划分测试  <a id="more"></a></h2><hr>
<p><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f4tzicsxz2j20df08e74e.jpg" alt=""><br>上图是一个典型瀑布式软件开发流程，那么各项软件测试工作是在项目开发流程中循序渐进的进行的。下面将介绍下测试的含义。</p>
<p><strong>单元测试：</strong> 单元测试是对软件中的基本组成单元进行的测试。目的是检验软件基本组成单位的正确性。</p>
<p><strong>集成测试：</strong>集成测试是在软件系统集成过程中所进行的测试。目的是检查软件单位之间的接口是否正确。</p>
<p><strong>系统测试：</strong>系统测试是对已经集成好的的软件系统进行彻底的测试，以验证软件系统的正确性和性能等是否满足其规约所指定的要求。</p>
<p><strong>验收测试：</strong>验收测试是部署软件之前的最后一个测试操作。验收测试的目的是确保软件准备就绪，向软件购买商展示该软件系统满足其用户的需求。</p>
<h2 id="单元测试阶段"><a href="#单元测试阶段" class="headerlink" title="单元测试阶段"></a>单元测试阶段</h2><p><strong> 模块接口测试 </strong><br>　　  通过所测模块的数据流进行测试。调用所测模块时参数与模块的形式参数的个数、属性和顺序是否匹配。</p>
<p><strong> 局部数据结构测试 </strong><br>　　局部数据结构是为了保证临沭存储在模块内的数据在程序执行过程中完整、正确、模块的局部数据结构往往是错误的根源。</p>
<p><strong> 路径测试 </strong><br>　　对模块中重要的执行路径进行测试。</p>
<p><strong> 错误处理测试 </strong><br>　　比较完善的模块设计要求能遇见出错的条件，并设置是党的出错处理，以便在程序出错时，能够对出错程序重做安排，保证其逻辑上的正确性。</p>
<p><strong> 边界条件测试 </strong><br> 　　软件经常在边界上失效，边界条件测试是一项基础测试，也是后面系统测试中的功能测试的重点。</p>
<h2 id="集成测试阶段："><a href="#集成测试阶段：" class="headerlink" title="集成测试阶段："></a>集成测试阶段：</h2><p>在集成测试中，我们主要关注以下内容：</p>
<ol>
<li>把各个模块连接起来时，穿越模块接口的数据是否会丢失。</li>
<li>各个子模块组合起来，能否达到预期要求的功能。</li>
<li>一个模块的功能是否会对另外一个模块的功能产生不利影响。</li>
<li>全局数据结构是否有问题。</li>
<li>单个模块的误差积累起来是否会被放大，从而达到不可接受的程度。</li>
</ol>
<h2 id="系统测试阶段："><a href="#系统测试阶段：" class="headerlink" title="系统测试阶段："></a>系统测试阶段：</h2><p>　　一般系统的主要测试工作都是集中在系统测试阶段。根据不同的系统所进行的测试种类也很多。</p>
<p><strong> 功能测试 </strong><br>　　功能测试是对产品的各项功能进行验证，一检查是否满足需求的要求。</p>
<p><strong> 性能测试 </strong><br>　　性能测试是通过自动化测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。</p>
<p><strong> 安全测试 </strong><br>   　　安全测试检查系统对非法入侵的防范能力。</p>
<p><strong> 兼容测试 </strong><br>　　兼容性测试主要是测试系统在不同的软硬件环境下是否能够正常的运行。</p>
<h2 id="验收测试阶段："><a href="#验收测试阶段：" class="headerlink" title="验收测试阶段："></a>验收测试阶段：</h2><p>功能确认测试<br>安全可靠性测试<br>易用性测试<br>可扩充性测试<br>兼容性测试<br>资源占有率测试<br>用户文档资料验收</p>
<hr>
<h2 id="白盒测试、黑盒测试、灰盒测试"><a href="#白盒测试、黑盒测试、灰盒测试" class="headerlink" title="白盒测试、黑盒测试、灰盒测试"></a>白盒测试、黑盒测试、灰盒测试</h2><hr>
<p>　　上面是根据项目流程按照测试的各个阶段对测试工具的划分。白盒测试与黑盒测试，主要是测试工作对软件代码的可见程度的划分。这也是测试软件邻居中最基本的两个概念。</p>
<p><strong> 黑盒测试 </strong><br>　　黑盒测试，指的是把被测的软件看做是一个黑盒子，我们不去关心盒子里面的结构式什么样子的，只关心软件的输入数据和输出结果。<br>　　它只检查程序功能是否按照需求规格说明书的规定正常使用，程序是否能适当的接受输入数据而产生正确的输出信息。黑盒测试着眼于程序外部结构，不考虑内部逻辑结构，主要针对软件界面和软件功能进行测试。</p>
<p><strong> 白盒测试 </strong><br>　　白盒测试，只的是把盒子盖子打开，去研究里面的源代码和程序结果。<br>　　它是按照程序内部的结构测试程序，通过测试来检测产品内部动作是否按照设计规格说明书的规定正常运行，检验程序中的每条通路是否都能按照预定要求正确工作。</p>
<p><strong> 灰盒测试 </strong><br>　　灰盒测试街与黑盒测试和白盒测试之间。<br>　　可以这样理解，灰盒测试关注输出对于输入的正确性，同时也关注内部表现，但这种关注不象白盒那样详细、完整，只是通过一些表征性的现象、时间、判断来判断内部的运行状态，有时候输出是正确的，但内部其实已经错误了，这种情况非常多，如果每次都通过白盒测试来操作，效率会很低，因此需要采用这样的一种灰盒的方法。</p>
<hr>
<h2 id="功能测试、性能测试"><a href="#功能测试、性能测试" class="headerlink" title="功能测试、性能测试"></a>功能测试、性能测试</h2><hr>
<p><strong> 功能测试 </strong><br>　　功能测试检查实际的功能是否符合用户的需求。测试的大部分工作也是围绕软件的功能进行，设计软件的目的也是满足客户对其功能的需求。如果偏离这个目的的任何测试工作都是没有意义的。<br>　　功能测试又可以分为很多种：逻辑功能测试、界面测试、易用性测试、安装测试、兼容性测试等。</p>
<p><strong> 性能测试 </strong><br>　　性能测试是通过自动化的测试工具模拟多种正常、峰值以及异常负载条件来对系统的各项性能指标进行测试。<br>　　软件的性能包括很多方面，主要有时间性能和空间性能两种。<br>　　<strong>时间性能：</strong>主要是指软件的一个经营体的响应时间。比如一个登录所需要的时间，一个交易所需要的时间等。当然，抛开具体的测试环境，来分析一次事物的响应时间是没有任何意义的。需要搭建一个具体且独立的测试环境。<br>　　<strong>空间性能：</strong>主要是指软件运行时所小号的系统资源，比如硬件资源，CPU、内存，网络带宽消耗等。</p>
<hr>
<h2 id="手工测试与自动化测试"><a href="#手工测试与自动化测试" class="headerlink" title="手工测试与自动化测试"></a>手工测试与自动化测试</h2><hr>
<p><strong> 手工测试： </strong><br>　　手工测试就是由人去一个一个的去执行测试用例，通过鼠标键盘等输如一些参数，查看返回结果是否符合预期结果。<br>（其实，不太喜欢别人把一般的功能测试工作叫手工测试，就像一个雕塑家不喜欢别人叫他刻石头的一样。手工测试同样需要业务熟悉、基本测试方法的理解。看似简单的工作却能够发现别人不能发现的软件问题。在目前的测试领域，手工测试仍然是无法替代的一种测试方法）</p>
<p><strong> 自动化测试： </strong><br>　　自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。通常，在设计了测试用例并通过评审之后，由测试人员根据测试用例中描述的规程一步步执行测试，得到实际结果与期望结果的比较。在此过程中，为了节省人力、时间或硬件资源，提高测试效率，便引入了自动化测试的概念。 </p>
<p>　　自动化测试：又可分为功能自动化测试与性能自动化测试。</p>
<p>　　我们一般所说的自动化测试就是指功能自动化测试，通过相关的测试技术，通过编码的方式用一段程序来测试一个软件的功能，这样就可以重复执行程序来进行重复的测试。如果一个软件一小部分发生改变，我们只要修改一部分代码，就可以重复的对整个软件进行功能测试。这样就大大的提高了测试效率。</p>
<p>　　性能自动化测试，当然，除了早期阶段，现在的性能测试工作都是通过性能测试工具辅助完成的。能过工具可以模拟成千上万的用户向系统发送请求，用来验证系统的处理能力。</p>
<hr>
<h2 id="冒烟测试、回归测试、随机测试"><a href="#冒烟测试、回归测试、随机测试" class="headerlink" title="冒烟测试、回归测试、随机测试"></a>冒烟测试、回归测试、随机测试</h2><hr>
<p>这三种测试在软件功能测试过程中，既不算具体明确的测试阶段也不算是具体的测试方法。</p>
<p><strong> 冒烟测试：</strong></p>
<p>　　是指在对一个新版本进行系统大规模的测试之前，先验证一下软件的基本功能是否实现，是否具备可测性。</p>
<p>　　引入到软件测试中，就是指测试小组在正规测试一个新版本之前，先投入较少的人力和时间验证一个软件 的主要功能，如果主要功能都没有实现，则打回开发组重新开发。这样做的好处是可以节省大量的时间成本和人力成本。</p>
<p><strong> 回归测试： </strong></p>
<p>　　回归测试是指修改了旧代码后，重新时行测试以确认修改后没有引入新的错误或导致其他代码产生错误。</p>
<p>　　回归测试一般是在进行软件的第二轮测试开始的，验证第一轮中发现的问题是否得到修复。当然，回归也是一个循环的过程，如果回归的问题通不过，则需要开发人员修改后再次进行回归，直到通过为止。</p>
<p><strong> 随机测试： </strong></p>
<p>　　是指测试中的所有输入数据都是随机生成的，其目的是模拟用户的真实操作，并发现一些边缘性的错误。</p>
<p>　　随机测试可以发现一些隐蔽的错误，但是也有很多缺点，比如测试不系统，无法统计代码覆盖率和需求覆盖率，发现的问题难以重现。一般是放在测试的最后执行。其实随机测试更专业的升级版叫 探索性测试</p>
<hr>
<p><strong>探索性测试</strong></p>
<p>　　探索性测试可以说是一种测试思维技术。它没有很多实际的测试方法、技术和工具，但是却是所有测试人员都应该掌握的一种测试思维方式。探索性强调测试人员的主观能动性，抛弃繁杂的测试计划和测试用例设计过程，强调在碰到问题时及时改变测试策略。 </p>
<p>　　探索性测试应该是未来测试领域的一个方向。</p>
<p><strong>安全测试</strong></p>
<p>　　安全测试是在IT软件产品的生命周期中，特别是产品开发基本完成到发布阶段，对产品进行检验以验证产品符合安全需求定义和产品质量标准的过程。 </p>
<p>　　安全测试也在越来越受到企业的关注和重视，因为由于安全性问题造成的后果是不可估量的。尤其对于互联网产品最容易遭受各种安全攻击。</p>
<p><strong><a href="http://www.cnblogs.com/fnng/archive/2012/10/24/2737972.html" target="_blank" rel="external">转载自虫师的博客</a></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本篇博文属于对软件测试领域的科普篇，关于软件测试领域，名词颇多，发现有许多测试新手混淆概念，甚至有不少招聘要求中对各种软件测试相关的名词乱用，所以，这里汇总测试相关的名词，也许能理清你对各种名词的概念。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;根据项目流程阶段划分测试&quot;&gt;&lt;a href=&quot;#根据项目流程阶段划分测试&quot; class=&quot;headerlink&quot; title=&quot;根据项目流程阶段划分测试  &quot;&gt;&lt;/a&gt;根据项目流程阶段划分测试
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="测试分类" scheme="http://i90s.vip/tags/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>浅说软件需求分析</title>
    <link href="http://i90s.vip//%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/2016/06/12/%E6%B5%85%E8%AF%B4%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90.html"/>
    <id>http://i90s.vip//软件笔记/2016/06/12/浅说软件需求分析.html</id>
    <published>2016-06-12T14:29:41.000Z</published>
    <updated>2016-06-13T14:54:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是需求分析"><a href="#什么是需求分析" class="headerlink" title="什么是需求分析"></a>什么是需求分析</h2><hr>
<p>　　通俗的讲，对用户的意图不断揭示和验叛的过程，要对经过系统可行性分析所确定的系统目标做更为详细的描述。</p>
<p>　　假如你是个建筑工程师，有个客户找你建一个鸡窝，这个时候要需要与客户沟通，来确定客户到底想要一个什么样子的鸡窝。我们应该注意三点：</p>
<p><strong>1 .  准确的理解和描述客户需要的功能。</strong><a id="more"></a></p>
<p>　　客户说，我的鸡窝要三层的，带电梯，饮水池，厕所，饮水池要自动判断水位供水，电梯要可以同时乘坐10只鸡….客户滔滔不绝的讲了一大堆，你也都非常忠实的按照自己的理解再一一的向客户描述一遍，以便于确认客户的需求是否正确。</p>
<p><strong>2 .  帮助客户挖掘需求。</strong></p>
<p>　　等客户把自己的需求说完了，你发现客户没有说鸡的卧室，于是，你向客户提议说：“你看，这鸡的卧室要什么样子的？”，客户连连的拍着脑门说，我差点给忘记了，鸡们啊喜欢晚上在一起聊天，所以呢，需要一个长而大的卧室，但一定要舒适。</p>
<p><strong>3 . 分析客户需求的可行性</strong></p>
<p>　　客户临走时又说，最近了，黄鼠狼很多，我这个鸡窝啊，一楼就不用盖了，直接盖二楼和三楼吧！以免晚上遭遇黄鼠狼的攻击。你这么一分析，客户这要求，按照目前的技术可没法建啊，于是，你向客户提议，一楼采用坚固架子来支撑二三楼的建筑。</p>
<hr>
<h2 id="需求分析困难在哪儿？"><a href="#需求分析困难在哪儿？" class="headerlink" title="需求分析困难在哪儿？"></a>需求分析困难在哪儿？</h2><hr>
<p>有几种原因使需求分析变得困难：（1）客户说不清楚需求；（2）需求自身经常变动；（3）分析人员或客户理解有误。</p>
<p><strong>1 . 客户说不清楚需求</strong></p>
<p> 　　有些客户对需求只有朦胧的感觉，当然说不清楚具体的需求。例如全国各地的很多政府机构在搞网络建设，这些单位的领导和办公人员大多不清楚计算机网络有什么用，反而要软件系统分析人员替他们设想需求。这类工程的需求是如此的主观，以致产生很多贪污腐败现象。<br>　　有些客户心里非常清楚想要什么，但却说不明白。你可能很不以为然。就举日常生活的事例吧，比如说买鞋子。我们非常了解自已的脚，但没法说清楚脚的大小和形状。只能拿鞋子去试，试穿时感觉到舒服才会买鞋（居然也有神通广大的售货员，看一眼客户的手，就知道应该穿什么样的鞋）。<br>　　如果客户本身就懂软件开发，能把需求说得清清楚楚，这样的需求分析将会非常轻松、愉快。如果客户全不懂软件，但信任软件开发方，这事也好办。分析人员可以引导客户，先阐述常规的需求，再由客户否定不需要的，最终确定客户真正的需求。最怕的就是“不懂装懂”或者“半懂充内行”的客户，他们会提出不切实际的需求。如果这些客户甚至觉得自己是上帝的爸爸，那么沟通和协商都会很困难。</p>
<p><strong>2 . 需求自身经常变动  </strong></p>
<p> 　　唐僧曾说：“妖要是有了仁慈之心，就不再是妖，是人妖。”（《大话西游之大圣娶亲》）<br>　　连妖都会变心，别说人了。所以喜新厌旧乃人之常情，世界也因此变得多姿多彩。<br>　　软件的需求会变化吗？<br>　　答：据历史记载，没有一个软件的需求改动少于三次。唯一只改动需求两次的客户是个死人。这个可怜的家伙还是在运送第三次需求的路上被车子撞死的。[Cline 1995]<br>让我们先接受“需求会变动”这个事实吧，免得在需求变动时惊慌失措。明白“需求会变动”这个道理后，在进行需求分析时就要留点神：<br>　　（1）尽可能地分析清楚哪些是稳定的需求，哪些是易变的需求。以便在进行系统设计时，将软件的核心建筑在稳定的需求上，否则将会吃尽苦头。</p>
<p>　　（2）在合同中一定要说清楚“做什么”和“不做什么”。如果合同含含糊糊，日后扯皮的事情就多。要防止象韩复渠那样，在别人请他喝酒吃饭时他什么都点头（人家就更加献殷勤），吃完了他就宣布刚才答应的事都不算数，便扬长而去。</p>
<p><strong>3 .  分析人员和顾客理解有误</strong></p>
<p>　　有个外星人间谍潜伏到地球刺探情报，它给上司写了一份报告：“主宰地球的是车。它们喝汽油，靠四个轮子滚动前进。嗓门极大，在夜里双眼能射出强光。……有趣的是，车里住着一种叫作‘人’的寄生虫，这些寄生虫完全控制了车。”<br>　　软件系统分析人员不可能都是全才。客户表达的需求，不同的分析人员可能有不同的理解。如果分析人员理解错了，可能会导致开发人员白干活，吃力不讨好。我读中学时候最怕写作文逃题，如果逃题了，不管作文写得多长，总是零分。所以分析人员写好需求说明书后，要请客户方的各个代表验证。如果问题很复杂，双方都不太明白，就有必要请开发人员快速构造软件的原型，双方再次论证需求说明书是否正确。<br>　　由于客户大多不懂软件，他们可能觉得软件是万能的，会提出一些无法实现的需求。有时客户还会把软件系统分析人员的建议或答复给想歪了。<br>　　有一个软件人员滔滔不绝地向客户讲解在“信息高速公路上做广告”的种种好处，客户听得津津有味。最后，心动的客户对软件人员说：“好得很，就让我们马上行动起来吧。请您决定广告牌的尺寸和放在哪条高速公路上，我立即派人去做。”</p>
<hr>
<h2 id="需求分析的分类"><a href="#需求分析的分类" class="headerlink" title="需求分析的分类"></a>需求分析的分类</h2><hr>
<p>需求分析一般可分为功能需求、非功能需求和领域需求</p>
<p><strong>1 . 功能需求：</strong></p>
<p>　　 功能需求主要说明了系统实际应做到什么。这是用户最直观也是最主要的需求，如系统的输入输出、系统能完成的功能以及其它相关处理等；</p>
<p><strong>2 . 非功能需求：</strong><br>　　非功能需求又称“约束”，它主要从各个角度对系统起约束和限制作用。如响应时间、存储效率、报表的规格和界面的样式等<br><strong>3 . 领域需求：</strong><br>　　领域需求的来源不是用户，而是系统应用的领域，其主要反映了该领域的基本问题。例如勤工俭学管理系统，其领域需求就涉及到诸如应聘合同书、酬金发放及劳工考核等相关内容，如果这些需求得不到满足，系统就无法正常运行。值得一提的是，领域需求可能是功能需求，也可能是非功能需求。</p>
<hr>
<h2 id="如何进行需求分析"><a href="#如何进行需求分析" class="headerlink" title="如何进行需求分析"></a>如何进行需求分析</h2><p>　　进行需求分析不象情人之间的浪漫做法——“让我摸摸你的头发，感觉它是什么颜色。”我们需要了解需求分析的渠道和过程。<br><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f4tzk5dph6j20cp08u3z2.jpg" alt=""><br>需求分析的过程<br><img src="http://ww1.sinaimg.cn/large/666cc9e3gw1f4tzkrwicxj20cj06yweu.jpg" alt=""><br><strong>（1）可行性研究</strong></p>
<p>　　它指明现有的软件、硬件技术能否实现用户对系统的要求，从业务角度来决定系统开发是否可行以及在预算范围内能否开发出来。可行性研究的结果是清楚的回答：该系统是否值得开发</p>
<p><strong>（2）需求导出和分析</strong></p>
<p>　　这是一个通过对现有系统分析、与潜在客户讨论、进行任务分析等导出系统需求的过程，也可能需要开发一个或多个不同的系统原型，以帮助分析员了解所要描述的系统。</p>
<p><strong>（3）需求描述</strong></p>
<p>　　需求描述就是把在分析活动中收集的信息通过分析整理之后以文档的形式确定下来。该文档中有两类需求：用户需求是从客户和最终用户角度对系统需求的抽象描述；系统需求是对系统要提供的功能的详尽描述。</p>
<p><strong>（4）需求有效性验证</strong></p>
<p>　　主要是通过评审、验证等一系列活动来找出需求文档中的错漏并加以改正。</p>
<p><strong>（5）需求管理</strong></p>
<p>　　需求管理需求管理是一种系统化方法，可用于获取、组织和记录系统需求并使用户和开发方在系统变更需求上始终保持一致</p>
<hr>
<h2 id="需求分析的方法"><a href="#需求分析的方法" class="headerlink" title="需求分析的方法"></a>需求分析的方法</h2><p><strong>1 .  功能分析方法</strong></p>
<p>　　那怕是天下最无能的市长或书记，都知道在作报告时要先从宏观上讲一、二、三、四、五，再从细节上讲 A、B、C、D、E；需求分析不象侦探推理那样从蛛丝马迹着手。应该先了解宏观的问题，再了解细节的问题。</p>
<p>　　功能分析法功能分解法以系统提供的功能为中心来组织系统。首先定义各种功能, 然后把功能分解为子功能, 同时定义功能之间的接口。数据结构是根据功能/子功能的需要设计的。 其基本策略是以分析员的经验为依据, 确定新系统所期望的处理步骤或子步骤, 然后, 将问题空间映射到功能和子功能上。</p>
<p><strong>2 . 数据流方法</strong></p>
<p>　　周末，小明一觉醒来突然想吃红烧肉，那想得口水直流，于起床，穿好衣服，打开钱包一看空的，好吧，先去银行取钱，然后去菜那买了一肉、各种配料，然后回家，开火，各种材料往锅里一放，开始小火慢炖，半个小时后，小明终于吃上了美味可口的红烧肉。这是一个典型的流程，如果把它看成一个系统功能的话，那么小明吃到红烧肉是这个功能的目的，那么中间要经历许多环节，起床穿衣—取钱—习材料—-制作完成。而且各个功能（步骤）之间是相互联系的，小明总不能不穿衣服直接去取钱吧。</p>
<p>　　数据流法也叫结构化分析, 其基本策略是研究问题域中数据如何流动以及在各个环节上进行何种处理, 从而发现数据流和加工。 问题域被映射为由数据流、加工以及文件、端点等成份构成的数据流图(DFD) , 并用数据字典对数据流和加工进行详细说明。这种方法的关键是动态跟踪数据流动。</p>
<p><strong>3 . 信息建模方法</strong></p>
<p>　　一个贵妇去报案，我丢了一个辆车，小明是警察，然后问贵妇，你丢的什么样的车子？贵妇噼里啪啦的给小明描述车子样子：我的车子有四个轮子，前面两个小，后面两个大，车身是流线型的，后面带尾翼，里面只一排坐位的那种，车坐上都用的真皮做套子，后面…..你听着听头大了，然后对贵妇说：等等，我给你画下来。于是，贵妇边说，你边画，然后贵妇指出画的不对的地方由你来修改。当然了这只是实体的样子。我们还需要知道汽车各个部件的功能以及各部件之间的关系。</p>
<p>　　信息建模法的核心概念是实体和关系, 主要工具是语义数据模型(实体关系图) , 其基本策略是找出现实世界的对象, 然后用属性来描述对象, 增添对象与对象之间的关系, 定义父类与子类, 用父类型/子类型提炼属性的共性, 用关联对象关系作细化的描述, 最后进行规范化处理。 其实质是将问题空间直接映射成模型中的对象。</p>
<p> —-下面三种方法，我还不能理解—–</p>
<p><strong>4 .   面向对象方法</strong></p>
<p>　　我想你如果学习过面向对象编程的话，会很容易理解。</p>
<p>　　面向对象分析 OOA(Object- Oriented Analysis) 的基本策略是通过信息隐藏将比较容易变化的元素隐藏起来, 分析员基于比较稳定的元素建立其思想和规格说明的总体结构。</p>
<p>　　面向对象分析的主要特性是加强了对问题域( Problem Domain) 和系统责任( System Responsibili-ties)的理解; 改进与分析有关的各类人员之间的交流; 对需求的变化具有较强的适应性; 支持软件复用</p>
<p><strong>5 . 面向本体方法</strong></p>
<p>　　面向本体的需求分析 OORA (Ontology- Oriented Require-ments Analysis) , 是 OOA方法的有效补充和提升。 面向本体方法强调相关领域的本质概念以及这些概念之间的关联。其实质是在面向对象方法中引入对象关联, 并给出各种关联的语义语用。</p>
<p>　　OORA方法由 4 个阶段来完成。第一阶段: 用一种自然语言BIDL( Bisiness Information Description Language) 描述事务; 第二阶段: 确认隐含在 BIDL文本中的本体和对象; 第三阶段: 将这些本体和对象转换成另一种语言 Ononet (Ontology and Object- Ori-ented Network) , 得到用 Ononet 书写的需求预定义; 第四阶段: 在采用 Ononet 作为知识表示形式的领域本体知识库中搜索相关的知识, 并和前面的需求预定义合并, 得到软件完整的需求定义。</p>
<p>6 . 形式化方法</p>
<p>　　形式化方法, 广义上讲, 是应用数学的手段来设计、 模拟和分析, 得到像数学公式那样精确的表示。从狭义上讲, 就是使用一种形式语言进行语言公式的形式推理, 用于检查语法的良构性并证明某些属性。在需求分析阶段, 利用形式化方法得到需求规格说明书, 可以规范软件开发过程, 为获得更好的系统性能提供重要保证。</p>
<p>=======粗俗的方法=======<br>可能你对上面的方法看不懂，起码后三种我是看不懂的，怪我知识太少的缘故。</p>
<p>我们来看下面了解需求的方式：</p>
<p>（1）直接与客户交谈。如果分析人员生有足球评论员的那张“大嘴”，就非常容易侃出需求。</p>
<p>（2）有些需求客户讲不清楚，分析人员又猜不透，这时就要请教行家。有些高手真的很厉害，你还没有开始问，他就能讲出前因后果。让你感到“听君一席言，胜读十年书。”</p>
<p>（3）有很多需求可能客户与分析人员想都没有想过，或者想得太幼稚。要经常分析优秀的和蹩脚的同类软件，看到了优点就尽量吸取，看到了缺点就引以为戒。前人既然付了学费，后人就不要拒绝坐享其成。</p>
<hr>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a><strong>参考文献</strong></h2><blockquote>
<p>《关于软件需求分析的研究》–邱树伟<br> 《软件工程思想》–林锐</p>
</blockquote>
<p><strong><a href="http://www.cnblogs.com/fnng/archive/2011/09/13/2174268.html" target="_blank" rel="external">转载自虫师的博客</a></strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是需求分析&quot;&gt;&lt;a href=&quot;#什么是需求分析&quot; class=&quot;headerlink&quot; title=&quot;什么是需求分析&quot;&gt;&lt;/a&gt;什么是需求分析&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;　　通俗的讲，对用户的意图不断揭示和验叛的过程，要对经过系统可行性分析所确定的系统目标做更为详细的描述。&lt;/p&gt;
&lt;p&gt;　　假如你是个建筑工程师，有个客户找你建一个鸡窝，这个时候要需要与客户沟通，来确定客户到底想要一个什么样子的鸡窝。我们应该注意三点：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1 .  准确的理解和描述客户需要的功能。&lt;/strong&gt;
    
    </summary>
    
      <category term="软件笔记" scheme="http://i90s.vip/categories/%E8%BD%AF%E4%BB%B6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="转载" scheme="http://i90s.vip/tags/%E8%BD%AC%E8%BD%BD/"/>
    
      <category term="需求分析" scheme="http://i90s.vip/tags/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
</feed>
